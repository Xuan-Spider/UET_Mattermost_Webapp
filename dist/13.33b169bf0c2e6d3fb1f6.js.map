{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./components/common/site_name_and_description.jsx","webpack:///./components/create_team/components/display_name.jsx","webpack:///./components/create_team/components/team_url/index.js","webpack:///./components/create_team/components/team_url/team_url.jsx","webpack:///./components/create_team/create_team.jsx","webpack:///./components/create_team/index.js","webpack:///./components/widgets/icons/fa_next_icon.tsx","webpack:///./images/logo.png"],"names":["BackButton","React","PureComponent","render","props","onClick","url","title","PropTypes","string","func","SiteNameAndDescription","customDescriptionText","siteName","description","TeamSignupDisplayNamePage","constructor","e","preventDefault","displayName","ReactDOM","findDOMNode","refs","name","value","trim","setState","nameError","length","Constants","MIN_TEAMNAME_LENGTH","MAX_TEAMNAME_LENGTH","min","max","newState","state","wizard","team","display_name","cleanUpUrlable","updateParent","currentTarget","select","componentDidMount","trackEvent","nameDivClass","logoImage","handleFocus","submitNext","object","mapDispatchToProps","dispatch","actions","bindActionCreators","checkIfTeamExists","createTeam","connect","TeamUrl","cleanedName","URL","urlRegex","test","index","RESERVED_TEAM_NAMES","indexOf","isLoading","teamSignup","JSON","parse","stringify","type","exists","data","error","history","push","DEFAULT_CHANNEL","message","urlTooltip","finishMessage","OVERLAY_TIME_DELAY","submitBack","shape","isRequired","CreateTeam","currentChannel","currentTeam","match","mapStateToProps","config","getConfig","getCurrentChannel","getCurrentTeam","CustomDescriptionText","SiteName","NextIcon","formatMessage","context","intl","className","additionalClassName","id","defaultMessage","intlShape"],"mappings":"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","file":"13.33b169bf0c2e6d3fb1f6.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SiteNameAndDescription extends React.PureComponent {\n    static propTypes = {\n        customDescriptionText: PropTypes.string,\n        siteName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        siteName: 'Mattermost',\n    };\n\n    render() {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1 id='site_name'>{siteName}</h1>\n                <h4\n                    id='site_description'\n                    className='color--light'\n                >\n                    {description}\n                </h4>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {cleanUpUrlable} from 'utils/url';\nimport logoImage from 'images/logo.png';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\n\nexport default class TeamSignupDisplayNamePage extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_01_name');\n    }\n\n    submitNext = (e) => {\n        e.preventDefault();\n\n        var displayName = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        if (!displayName) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        } else if (displayName.length < Constants.MIN_TEAMNAME_LENGTH || displayName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}. You can add a longer team description later.'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        const newState = this.props.state;\n        newState.wizard = 'team_url';\n        newState.team.display_name = displayName;\n        newState.team.name = cleanUpUrlable(displayName);\n        this.props.updateParent(newState);\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        var nameError = null;\n        var nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.display_name.teamName'\n                            defaultMessage='Team Name'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-9'>\n                                <input\n                                    id='teamNameInput'\n                                    type='text'\n                                    ref='name'\n                                    className='form-control'\n                                    placeholder=''\n                                    maxLength='128'\n                                    defaultValue={this.props.state.team.display_name}\n                                    autoFocus={true}\n                                    onFocus={this.handleFocus}\n                                    spellCheck='false'\n                                />\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <div>\n                        <FormattedMessage\n                            id='create_team.display_name.nameHelp'\n                            defaultMessage='Name your team in any language. Your team name shows in menus and headings.'\n                        />\n                    </div>\n                    <button\n                        id='teamNameNextButton'\n                        type='submit'\n                        className='btn btn-primary margin--extra'\n                        onClick={this.submitNext}\n                    >\n                        <FormattedMessage\n                            id='create_team.display_name.next'\n                            defaultMessage='Next'\n                        />\n                        <NextIcon/>\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {checkIfTeamExists, createTeam} from 'mattermost-redux/actions/teams';\n\nimport TeamUrl from './team_url';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            checkIfTeamExists,\n            createTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(TeamUrl);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as URL from 'utils/url';\nimport logoImage from 'images/logo.png';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class TeamUrl extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n\n        /*\n         * Object with redux action creators\n         */\n        actions: PropTypes.shape({\n\n            /*\n             * Action creator to check if a team already exists\n             */\n            checkIfTeamExists: PropTypes.func.isRequired,\n\n            /*\n             * Action creator to create a new team\n             */\n            createTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nameError: '',\n            isLoading: false,\n        };\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_02_url');\n    }\n\n    submitBack = (e) => {\n        e.preventDefault();\n        const newState = this.props.state;\n        newState.wizard = 'display_name';\n        this.props.updateParent(newState);\n    }\n\n    submitNext = async (e) => {\n        e.preventDefault();\n\n        const name = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        const cleanedName = URL.cleanUpUrlable(name);\n        const urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\n        const {actions: {checkIfTeamExists, createTeam}} = this.props;\n\n        if (!name) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName.length < Constants.MIN_TEAMNAME_LENGTH || cleanedName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName !== name || !urlRegex.test(name)) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.regex'\n                    defaultMessage=\"Use only lower case letters, numbers and dashes. Must start with a letter and can't end in a dash.\"\n                />),\n            });\n            return;\n        }\n\n        for (let index = 0; index < Constants.RESERVED_TEAM_NAMES.length; index++) {\n            if (cleanedName.indexOf(Constants.RESERVED_TEAM_NAMES[index]) === 0) {\n                this.setState({nameError: (\n                    <FormattedMarkdownMessage\n                        id='create_team.team_url.taken'\n                        defaultMessage='This URL [starts with a reserved word](!https://docs.mattermost.com/help/getting-started/creating-teams.html#team-url) or is unavailable. Please try another.'\n                    />),\n                });\n                return;\n            }\n        }\n\n        this.setState({isLoading: true});\n        var teamSignup = JSON.parse(JSON.stringify(this.props.state));\n        teamSignup.team.type = 'O';\n        teamSignup.team.name = name;\n\n        const {exists} = await checkIfTeamExists(name);\n\n        if (exists) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.unavailable'\n                    defaultMessage='This URL is taken or unavailable. Please try another.'\n                />),\n            });\n            this.setState({isLoading: false});\n            return;\n        }\n\n        const {data, error} = await createTeam(teamSignup.team);\n\n        if (data) {\n            this.props.history.push('/' + data.name + '/channels/' + Constants.DEFAULT_CHANNEL);\n            trackEvent('signup', 'signup_team_03_complete');\n        } else if (error) {\n            this.setState({nameError: error.message});\n            this.setState({isLoading: false});\n        }\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        const title = `${URL.getSiteURL()}/`;\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{title}</Tooltip>\n        );\n\n        let finishMessage = (\n            <FormattedMessage\n                id='create_team.team_url.finish'\n                defaultMessage='Finish'\n            />\n        );\n\n        if (this.state.isLoading) {\n            finishMessage = (\n                <FormattedMessage\n                    id='create_team.team_url.creatingTeam'\n                    defaultMessage='Creating team...'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup team logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.team_url.teamUrl'\n                            defaultMessage='Team URL'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-11'>\n                                <div className='input-group input-group--limit'>\n                                    <OverlayTrigger\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    >\n                                        <span className='input-group-addon'>\n                                            {title}\n                                        </span>\n                                    </OverlayTrigger>\n                                    <input\n                                        id='teamURLInput'\n                                        type='text'\n                                        ref='name'\n                                        className='form-control'\n                                        placeholder=''\n                                        maxLength='128'\n                                        defaultValue={this.props.state.team.name}\n                                        autoFocus={true}\n                                        onFocus={this.handleFocus}\n                                        spellCheck='false'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <p>\n                        <FormattedMessage\n                            id='create_team.team_url.webAddress'\n                            defaultMessage='Choose the web address of your new team:'\n                        />\n                    </p>\n                    <ul className='color--light'>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint1'\n                                defaultMessage='Short and memorable is best'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint2'\n                                defaultMessage='Use lowercase letters, numbers and dashes'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint3'\n                                defaultMessage=\"Must start with a letter and can't end in a dash\"\n                            />\n                        </li>\n                    </ul>\n                    <div className='margin--extra'>\n                        <Button\n                            id='teamURLFinishButton'\n                            type='submit'\n                            bsStyle='primary'\n                            disabled={this.state.isLoading}\n                            onClick={this.submitNext}\n                        >\n                            {finishMessage}\n                        </Button>\n                    </div>\n                    <div className='margin--extra'>\n                        <a\n                            href='#'\n                            onClick={this.submitBack}\n                        >\n                            <FormattedMessage\n                                id='create_team.team_url.back'\n                                defaultMessage='Back to previous step'\n                            />\n                        </a>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport DisplayName from 'components/create_team/components/display_name';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\nimport TeamUrl from 'components/create_team/components/team_url';\n\nexport default class CreateTeam extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing information on the current team, used to define BackButton's url\n         */\n        currentTeam: PropTypes.object,\n\n        /*\n         * Object containing information on the current selected channel, used to define BackButton's url\n         */\n        currentChannel: PropTypes.object,\n\n        /*\n         * String containing the custom branding's text\n         */\n        customDescriptionText: PropTypes.string,\n\n        /*\n         * String containing the custom branding's Site Name\n         */\n        siteName: PropTypes.string,\n\n        /*\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        const state = {};\n        state.team = {};\n        state.wizard = 'display_name';\n        this.state = state;\n    }\n\n    updateParent = (state) => {\n        this.setState(state);\n        this.props.history.push('/create_team/' + state.wizard);\n    }\n\n    render() {\n        const {\n            currentChannel,\n            currentTeam,\n            customDescriptionText,\n            match,\n            siteName,\n        } = this.props;\n\n        let url = '/select_team';\n        if (currentTeam) {\n            url = `/${currentTeam.name}`;\n            if (currentChannel) {\n                url += `/channels/${currentChannel.name}`;\n            }\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton url={url}/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        <div className='signup__content'>\n                            <Switch>\n                                <Route\n                                    path={`${this.props.match.url}/display_name`}\n                                    render={(props) => (\n                                        <DisplayName\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path={`${this.props.match.url}/team_url`}\n                                    render={(props) => (\n                                        <TeamUrl\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Redirect to={`${match.url}/display_name`}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport CreateTeam from './create_team';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentChannel = getCurrentChannel(state);\n    const currentTeam = getCurrentTeam(state);\n\n    const customDescriptionText = config.CustomDescriptionText;\n    const siteName = config.SiteName;\n\n    return {\n        currentChannel,\n        currentTeam,\n        customDescriptionText,\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(CreateTeam);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {intlShape} from 'react-intl';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class NextIcon extends React.PureComponent<Props> {\n    public static contextTypes = {\n        intl: intlShape.isRequired,\n    };\n\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const {formatMessage} = this.context.intl;\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <i\n                className={className}\n                title={formatMessage({id: 'generic_icons.next', defaultMessage: 'Next Icon'})}\n            />\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/77de51bb9d8c3e0ae1c9fba08495fcc7.png\";"],"sourceRoot":""}
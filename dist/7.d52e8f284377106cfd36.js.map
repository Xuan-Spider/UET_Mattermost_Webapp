{"version":3,"sources":["webpack:///./components/admin_console/admin_button_outline/admin_button_outline.jsx","webpack:///./components/admin_console/admin_button_outline/admin_button_outline.scss?86b9","webpack:///./components/admin_console/admin_console.jsx","webpack:///./components/admin_console/admin_definition.jsx","webpack:///./components/admin_console/admin_definition_constants.jsx","webpack:///./components/admin_console/admin_navbar_dropdown/admin_navbar_dropdown.jsx","webpack:///./components/admin_console/admin_navbar_dropdown/index.js","webpack:///./components/admin_console/admin_navbar_dropdown/menu_item_blockable_link.jsx","webpack:///./components/admin_console/admin_settings.tsx","webpack:///./components/admin_console/admin_sidebar/admin_sidebar.jsx","webpack:///./components/admin_console/admin_sidebar/index.js","webpack:///./components/admin_console/admin_sidebar_category.jsx","webpack:///./components/admin_console/admin_sidebar_header/admin_sidebar_header.jsx","webpack:///./components/admin_console/admin_sidebar_header/index.js","webpack:///./components/admin_console/admin_sidebar_section.jsx","webpack:///./components/admin_console/admin_user_card/admin_user_card.jsx","webpack:///./components/admin_console/admin_user_card/admin_user_card.scss?bbb7","webpack:///./components/admin_console/audits/audits.jsx","webpack:///./components/admin_console/audits/index.js","webpack:///./components/admin_console/banner.tsx","webpack:///./components/admin_console/blockable_link/blockable_link.jsx","webpack:///./components/admin_console/blockable_link/index.js","webpack:///./components/admin_console/boolean_setting.tsx","webpack:///./components/admin_console/brand_image_setting/brand_image_setting.jsx","webpack:///./components/admin_console/cluster_settings.jsx","webpack:///./components/admin_console/cluster_table.jsx","webpack:///./components/admin_console/cluster_table_container.jsx","webpack:///./components/admin_console/color_setting.tsx","webpack:///./components/admin_console/compliance_reports/compliance_reports.jsx","webpack:///./components/admin_console/compliance_reports/index.js","webpack:///./components/admin_console/custom_enable_disable_guest_accounts_setting.tsx","webpack:///./components/admin_console/custom_plugin_settings/custom_plugin_settings.jsx","webpack:///./components/admin_console/custom_plugin_settings/enable_plugin_setting.js","webpack:///./components/admin_console/custom_plugin_settings/index.js","webpack:///./components/admin_console/custom_terms_of_service_settings/custom_terms_of_service_settings.jsx","webpack:///./components/admin_console/custom_terms_of_service_settings/index.js","webpack:///./components/admin_console/custom_url_schemes_setting.jsx","webpack:///./components/admin_console/data_retention_settings.jsx","webpack:///./components/admin_console/database_settings.jsx","webpack:///./components/admin_console/dropdown_setting.jsx","webpack:///./components/admin_console/elasticsearch_settings.jsx","webpack:///./components/admin_console/file_upload_setting.jsx","webpack:///./components/admin_console/generated_setting.tsx","webpack:///./components/admin_console/group_settings/group_details/group_details.jsx","webpack:///./components/admin_console/group_settings/group_details/group_profile.jsx","webpack:///./components/admin_console/group_settings/group_details/group_teams_and_channels.jsx","webpack:///./components/admin_console/group_settings/group_details/group_teams_and_channels_row.jsx","webpack:///./components/admin_console/group_settings/group_details/group_users.jsx","webpack:///./components/admin_console/group_settings/group_details/group_users_row.jsx","webpack:///./components/admin_console/group_settings/group_details/index.jsx","webpack:///./components/admin_console/group_settings/group_row.jsx","webpack:///./components/admin_console/group_settings/group_settings.jsx","webpack:///./components/admin_console/group_settings/groups_list/groups_list.jsx","webpack:///./components/admin_console/group_settings/groups_list/index.js","webpack:///./components/admin_console/highlight.tsx","webpack:///./components/admin_console/index.js","webpack:///./components/admin_console/jobs/index.jsx","webpack:///./components/admin_console/jobs/table.jsx","webpack:///./components/admin_console/license_settings/index.js","webpack:///./components/admin_console/license_settings/license_settings.jsx","webpack:///./components/admin_console/manage_roles_modal/index.js","webpack:///./components/admin_console/manage_roles_modal/manage_roles_modal.jsx","webpack:///./components/admin_console/manage_teams_modal/index.jsx","webpack:///./components/admin_console/manage_teams_modal/manage_teams_dropdown.jsx","webpack:///./components/admin_console/manage_teams_modal/manage_teams_modal.jsx","webpack:///./components/admin_console/manage_teams_modal/remove_from_team_button.jsx","webpack:///./components/admin_console/manage_tokens_modal/index.js","webpack:///./components/admin_console/manage_tokens_modal/manage_tokens_modal.jsx","webpack:///./components/admin_console/message_export_settings.jsx","webpack:///./components/admin_console/multiselect_settings.jsx","webpack:///./components/admin_console/password_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_button/edit_post_time_limit_button.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_button/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_modal/edit_post_time_limit_modal.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_modal/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/guest_permissions_tree/guest_permissions_tree.jsx","webpack:///./components/admin_console/permission_schemes_settings/guest_permissions_tree/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_checkbox.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_description.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_group.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_row.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_schemes_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_system_scheme_settings/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/team_in_list/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/team_in_list/team_in_list.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_scheme_summary/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_scheme_summary/permissions_scheme_summary.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_tree/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_tree/permissions_tree.jsx","webpack:///./components/admin_console/plugin_management/index.js","webpack:///./components/admin_console/plugin_management/plugin_management.jsx","webpack:///./components/admin_console/push_settings.jsx","webpack:///./components/admin_console/radio_setting.tsx","webpack:///./components/admin_console/remove_file_setting.jsx","webpack:///./components/admin_console/request_button/request_button.jsx","webpack:///./components/admin_console/reset_email_modal/reset_email_modal.jsx","webpack:///./components/admin_console/reset_password_modal/index.js","webpack:///./components/admin_console/reset_password_modal/reset_password_modal.jsx","webpack:///./components/admin_console/revoke_token_button/index.js","webpack:///./components/admin_console/revoke_token_button/revoke_token_button.jsx","webpack:///./components/admin_console/schema_admin_settings.jsx","webpack:///./components/admin_console/schema_text.jsx","webpack:///./components/admin_console/server_logs/index.js","webpack:///./components/admin_console/server_logs/log_list.jsx","webpack:///./components/admin_console/server_logs/logs.jsx","webpack:///./components/admin_console/set_by_env.jsx","webpack:///./components/admin_console/setting.tsx","webpack:///./components/admin_console/settings_group.jsx","webpack:///./components/admin_console/system_user_detail/index.js","webpack:///./components/admin_console/system_user_detail/system_user_detail.jsx","webpack:///./components/admin_console/system_user_detail/system_user_detail.scss?6606","webpack:///./components/admin_console/system_user_detail/team_list/abstract_list.jsx","webpack:///./components/admin_console/system_user_detail/team_list/abstract_list.scss?349b","webpack:///./components/admin_console/system_user_detail/team_list/index.js","webpack:///./components/admin_console/system_user_detail/team_list/team_list.jsx","webpack:///./components/admin_console/system_user_detail/team_list/team_list_dropdown.jsx","webpack:///./components/admin_console/system_user_detail/team_list/team_row.jsx","webpack:///./components/admin_console/system_user_detail/team_list/team_row.scss?32ba","webpack:///./components/admin_console/system_users/index.js","webpack:///./components/admin_console/system_users/list/index.js","webpack:///./components/admin_console/system_users/list/selectors.jsx","webpack:///./components/admin_console/system_users/list/system_users_list.jsx","webpack:///./components/admin_console/system_users/system_users.jsx","webpack:///./components/admin_console/system_users/system_users_dropdown/index.js","webpack:///./components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx","webpack:///./components/admin_console/team_channel_settings/abstract_list.jsx","webpack:///./components/admin_console/team_channel_settings/channel/channel_settings.jsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_details.jsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_groups.jsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_modes.jsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_profile.jsx","webpack:///./components/admin_console/team_channel_settings/channel/details/index.js","webpack:///./components/admin_console/team_channel_settings/channel/index.js","webpack:///./components/admin_console/team_channel_settings/channel/list/channel_list.jsx","webpack:///./components/admin_console/team_channel_settings/channel/list/channel_row.jsx","webpack:///./components/admin_console/team_channel_settings/channel/list/index.js","webpack:///./components/admin_console/team_channel_settings/convert_and_remove_confirm_modal.jsx","webpack:///./components/admin_console/team_channel_settings/convert_confirm_modal.jsx","webpack:///./components/admin_console/team_channel_settings/errors.jsx","webpack:///./components/admin_console/team_channel_settings/group/group_list.jsx","webpack:///./components/admin_console/team_channel_settings/group/group_row.jsx","webpack:///./components/admin_console/team_channel_settings/group/group_users.jsx","webpack:///./components/admin_console/team_channel_settings/group/group_users_row.jsx","webpack:///./components/admin_console/team_channel_settings/group/index.js","webpack:///./components/admin_console/team_channel_settings/line_switch.jsx","webpack:///./components/admin_console/team_channel_settings/remove_confirm_modal.jsx","webpack:///./components/admin_console/team_channel_settings/save_changes_panel.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/index.js","webpack:///./components/admin_console/team_channel_settings/team/details/team_details.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_groups.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_modes.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_profile.jsx","webpack:///./components/admin_console/team_channel_settings/team/index.js","webpack:///./components/admin_console/team_channel_settings/team/list/index.js","webpack:///./components/admin_console/team_channel_settings/team/list/team_list.jsx","webpack:///./components/admin_console/team_channel_settings/team/list/team_row.jsx","webpack:///./components/admin_console/team_channel_settings/team/team_settings.jsx","webpack:///./components/admin_console/team_channel_settings/users_to_be_removed_modal.jsx","webpack:///./components/admin_console/text_setting.tsx","webpack:///./components/admin_console/user_autocomplete_setting.jsx","webpack:///./components/analytics/doughnut_chart.tsx","webpack:///./components/analytics/format.tsx","webpack:///./components/analytics/line_chart.tsx","webpack:///./components/analytics/statistic_count.tsx","webpack:///./components/analytics/system_analytics/index.js","webpack:///./components/analytics/system_analytics/system_analytics.jsx","webpack:///./components/analytics/table_chart.tsx","webpack:///./components/analytics/team_analytics/index.js","webpack:///./components/analytics/team_analytics/team_analytics.jsx","webpack:///./components/channel_selector_modal/channel_selector_modal.jsx","webpack:///./components/channel_selector_modal/index.js","webpack:///./components/discard_changes_modal.tsx","webpack:///./components/team_selector_modal/index.js","webpack:///./components/team_selector_modal/team_selector_modal.jsx","webpack:///./components/toggle.tsx","webpack:///./components/user_list_row_with_error/index.js","webpack:///./components/user_list_row_with_error/user_list_row_with_error.jsx","webpack:///./components/widgets/admin_console/admin_header.tsx","webpack:///./components/widgets/admin_console/admin_panel.scss?7b8b","webpack:///./components/widgets/admin_console/admin_panel.tsx","webpack:///./components/widgets/admin_console/admin_panel_togglable.tsx","webpack:///./components/widgets/admin_console/admin_panel_with_button.tsx","webpack:///./components/widgets/admin_console/admin_panel_with_link.tsx","webpack:///./components/widgets/admin_console/formatted_admin_header.tsx","webpack:///./components/widgets/icons/accordion_toggle_icon.jsx","webpack:///./components/widgets/icons/at_icon.jsx","webpack:///./components/widgets/icons/checkbox_checked_icon.jsx","webpack:///./components/widgets/icons/checkbox_partial_icon.jsx","webpack:///./components/widgets/icons/ellipsis_h_icon.jsx","webpack:///./components/widgets/icons/email_icon.jsx","webpack:///./components/widgets/icons/fa_next_icon.tsx","webpack:///./components/widgets/icons/fa_previous_icon.tsx","webpack:///./components/widgets/icons/fa_reload_icon.jsx","webpack:///./components/widgets/icons/shield_outline_icon.jsx","webpack:///./images/status_green.png","webpack:///./images/status_yellow.png","webpack:///./components/admin_console/admin_button_outline/admin_button_outline.scss","webpack:///./components/admin_console/admin_user_card/admin_user_card.scss","webpack:///./components/admin_console/system_user_detail/system_user_detail.scss","webpack:///./components/admin_console/system_user_detail/team_list/abstract_list.scss","webpack:///./components/admin_console/system_user_detail/team_list/team_row.scss","webpack:///./components/widgets/admin_console/admin_panel.scss","webpack:///./selectors/admin_console.jsx","webpack:///./utils/admin_console_index.jsx","webpack:///./utils/admin_console_plugin_index.js","webpack:///./utils/filter_users.js","webpack:///./utils/policy_roles_adapter.js","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":["AdminButtonOutline","React","Component","render","props","onClick","children","PropTypes","func","isRequired","string","AdminConsole","constructor","filter","setState","extraProps","schemas","Object","values","adminDefinition","reduce","acc","section","items","item","isHidden","config","license","buildEnterpriseReady","schema","concat","schemaRoutes","map","url","match","defaultUrl","state","componentDidMount","actions","getConfig","getEnvironmentConfig","loadRolesIfNeeded","mainRolesLoaded","roles","channel_admin","channel_user","team_admin","team_user","system_admin","system_user","environmentConfig","showNavigationPrompt","setNavigationBlocked","cancelNavigation","confirmNavigation","editRole","updateConfig","isCurrentUserSystemAdmin","unauthorizedRoute","keys","length","discardChangesModal","onFilterChange","renderRoutes","object","bool","shape","FILE_STORAGE_DRIVER_LOCAL","FILE_STORAGE_DRIVER_S3","MEBIBYTE","Math","pow","MINIMUM_IDLE_TIMEOUT","SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1","SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256","SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512","SAML_SETTINGS_CANONICAL_ALGORITHM_C14N","SAML_SETTINGS_CANONICAL_ALGORITHM_C14N11","it","isnt","enterpriseReady","both","funcs","either","stateMatches","key","regex","stateEquals","value","stateIsTrue","Boolean","stateIsFalse","configIsTrue","group","setting","configIsFalse","licensed","IsLicensed","licensedForFeature","feature","AdminDefinition","about","icon","sectionTitle","t","sectionTitleDefault","title","title_default","searchableStrings","id","component","LicenseSettings","reporting","system_analytics","SystemAnalytics","team_statistics","team","TeamAnalytics","server_logs","ServerLogs","user_management","system_user_detail","SystemUserDetail","system_users","siteName","SystemUsers","group_detail","GroupDetails","groups","GroupSettings","team_detail","TeamDetails","teams","TeamSettings","channel_detail","ChannelDetails","channel","ChannelSettings","systemScheme","PermissionSystemSchemeSettings","teamSchemeDetail","PermissionTeamSchemeSettings","teamScheme","permissions","PermissionSchemesSettings","environment","web_server","name","name_default","settings","type","Constants","SettingsTypes","TYPE_BANNER","label","label_default","banner_type","TYPE_TEXT","help_text","help_text_default","help_text_markdown","placeholder","placeholder_default","TYPE_BUTTON","action","testSiteURL","loading","loading_default","error_message","error_message_default","success_message","success_message_default","TYPE_BOOL","disabled_help_text","disabled_help_text_default","disabled_help_text_markdown","isDisabled","TYPE_DROPDOWN","DefinitionConstants","options","display_name","display_name_default","TYPE_NUMBER","reloadConfig","help_text_values","featureName","recycleDatabaseConnections","invalidateAllCaches","database","reloadConfiguration","DatabaseSettings","elasticsearch","documentationLink","ElasticSearchSettings","storage","onConfigLoad","configVal","onConfigSave","displayVal","testS3Connection","image_proxy","smtp","testSmtp","push_notification_server","PushNotificationsSettings","high_availability","ClusterSettings","rate_limiting","logging","boldedLogLevel","previousVal","trackEvent","session_lengths","metrics","developer","site","customization","max_length","MAX_SITENAME_LENGTH","TYPE_CUSTOM","BrandImageSetting","TYPE_LONG_TEXT","MAX_CUSTOM_BRAND_TEXT_LENGTH","localization","TYPE_LANGUAGE","multiple","no_result","no_result_default","not_present","not_present_default","users_and_teams","TYPE_PERMISSION","permissions_mapping_name","TEAMMATE_NAME_DISPLAY","SHOW_USERNAME","SHOW_NICKNAME_FULLNAME","SHOW_FULLNAME","notifications","announcement_banner","TYPE_COLOR","emoji","posts","CustomUrlSchemesSetting","file_sharing_downloads","public_links","TYPE_GENERATED","authentication","signup","invalidateAllEmailInvites","email","EmailSettings","SendEmailNotifications","password","max","min","PasswordSettings","mfa","label_markdown","ldap","siteURL","getSiteURL","ldapTest","TYPE_JOBSTABLE","job_type","JobTypes","LDAP_SYNC","render_job","job","ldapUsers","deleteCount","updateCount","linkedLdapGroupsCount","totalLdapGroupsCount","groupDeleteCount","groupMemberDeleteCount","groupMemberAddCount","data","ldap_users_count","delete_count","update_count","ldap_groups_count","total_ldap_groups_count","group_delete_count","group_member_delete_count","group_member_add_count","ldapGroups","saml","TYPE_FILE_UPLOAD","remove_help_text","remove_help_text_default","remove_button_text","remove_button_text_default","removing_text","removing_text_default","uploading_text","uploading_text_default","fileType","upload_action","uploadIdpSamlCertificate","remove_action","removeIdpSamlCertificate","siteUrl","ServiceSettings","SiteURL","addSlashIfNeeded","uploadPrivateSamlCertificate","removePrivateSamlCertificate","uploadPublicSamlCertificate","removePublicSamlCertificate","gitlab","newState","GitLabSettings","UserApiEndpoint","replace","newConfig","Url","dynamic_value","oauth","Enable","oauthType","GITLAB_SERVICE","Office365Settings","OFFICE365_SERVICE","GoogleSettings","GOOGLE_SERVICE","guest_access","CustomEnableDisableGuestAccountsSetting","plugins","plugin_management","PluginManagement","custom","CustomPluginSettings","integrations","integration_management","bot_accounts","gif","cors","compliance","data_retention","DataRetentionSettings","message_export","MessageExportSettings","audits","Audits","label_values","custom_terms_of_service","CustomTermsOfServiceSettings","experimental","experimental_features","SECTION_NONE","SECTION_TLS","SECTION_STARTTLS","CONNECTION_SECURITY_HELP_TEXT_EMAIL","CONNECTION_SECURITY_HELP_TEXT_LDAP","CONNECTION_SECURITY_HELP_TEXT_WEBSERVER","WEBSERVER_MODE_HELP_TEXT","LOG_LEVEL_OPTIONS","AdminNavbarDropdown","e","navigationBlocked","preventDefault","deferNavigation","GlobalActions","locale","formatMessage","context","intl","teamToRender","switchTeams","teamsArray","filterAndSortTeamsByDisplayName","push","Utils","ModalIdentifiers","ABOUT","AboutBuildModal","defaultMessage","appTitle","handleLogout","arrayOf","intlShape","mapStateToProps","getCurrentLocale","getMyTeams","SiteName","getNavigationBlocked","mapDispatchToProps","dispatch","bindActionCreators","connect","MenuItemBlockableLinkImpl","to","text","propTypes","oneOfType","node","MenuItemBlockableLink","menuItem","displayName","AdminSettings","errorTooltip","elm","currentTarget","querySelector","isElipsis","offsetWidth","scrollWidth","prevState","saveNeeded","doSubmit","callback","saving","serverError","JSON","parse","stringify","getConfigFromState","error","getStateFromConfig","handleSaved","message","serverErrorId","server_error_id","str","defaultValue","n","parseInt","isNaN","minimumValue","path","getConfigValue","stateInit","assign","pathParts","split","obj","pathPart","setConfigValue","setValue","part","slice","handleSubmit","renderTitle","renderSettings","canSave","localizeMessage","openTooltip","closeTooltip","refs","errorMessage","renderScrollView","renderScrollThumbHorizontal","renderScrollThumbVertical","AdminSidebar","contextTypes","target","sections","idx","generateIndex","query","term","trim","search","validSection","indexOf","browserHistory","location","pathname","visibleSections","has","currentSiteName","document","isVisible","result","Set","add","definition","sidebarSections","forEach","sectionIndex","sidebarItems","itemIndex","active","moreSidebarItems","renderPluginsMenu","customPlugins","PluginSettings","sort","a","b","nameCompare","localeCompare","p","hasSettings","settings_schema","header","footer","hasOwnProperty","searchRef","createRef","getPlugins","current","focus","updateTitle","componentDidUpdate","prevProps","isEqual","filterClearTooltip","handleClearFilter","OVERLAY_TIME_DELAY","renderRootMenu","getLicense","BuildEnterpriseReady","getAdminDefinition","entities","admin","pure","AdminSidebarCategory","sectionClass","parentLink","defaultProps","link","clonedChildren","Children","child","cloneElement","SidebarHeader","me","currentUser","profilePicture","last_picture_update","username","Client4","getProfilePictureUrl","getCurrentUser","AdminSidebarHeader","AdminSidebarSection","subsection","getLink","className","sidebarItem","Bullet","user","first_name","last_name","nickname","AdminUserCard","body","number","element","PureComponent","loadingAudits","getAudits","then","h4Style","display","marginBottom","divStyle","clear","reload","isLicensed","content","renderComplianceReports","activityLogHeader","Compliance","Selectors","Banner","description","BlockableLink","blocked","Reflect","deleteProperty","handleClick","BooleanSetting","onChange","helpText","disabled","disabledText","setByEnv","handleChange","trueText","falseText","HTTP_STATUS_OK","$","fileInput","prop","setSaveNeeded","brandImage","deleteBrandImage","brandImageExists","err","uploadBrandImage","brandImageTimestamp","Date","now","fetch","getBrandImageUrl","resp","status","registerSaveAction","handleSave","componentWillUnmount","unRegisterSaveAction","image","reader","FileReader","img","onload","attr","readAsDataURL","letbtnDefaultClass","overlay","handleDeleteButtonPressed","handleImageChange","ClusterName","OverrideHostname","UseIpAddress","UseExperimentalGossip","GossipPort","parseIntNonZero","StreamingPort","showWarning","licenseEnabled","Cluster","configLoadedFromCluster","clusterId","style","warning","clusterTableContainer","overrideHandleChange","isSetByEnv","ClusterTable","versionMismatch","statusGreen","configMismatch","version","configHash","singleItem","clusterInfos","config_hash","clusterInfo","statusYellow","hostname","ipaddress","clusterCell","clusterTable","array","margin","whiteSpace","ClusterTableContainer","getClusterStatus","load","interval","setInterval","clearInterval","ColorSetting","color","hex","showPicker","closest","getPickerClass","contains","addEventListener","closePicker","removeEventListener","picker","onTextInput","togglePicker","backgroundColor","ComplianceReports","loadingReports","getComplianceReports","runningReport","desc","descInput","emails","emailsInput","keywords","keywordsInput","start_at","fromInput","end_at","toInput","createComplianceReport","enabled","getDateTime","millis","date","list","i","reports","report","params","download","getBaseRoute","user_id","profile","users","dataCell","create_at","count","runReport","greenStatus","redStatus","marginTop","getUsersForReports","createSelector","profiles","complianceReports","usersMap","r","u","ComplianceSettings","requests","createCompliance","selectComplianceReports","confirm","showConfirm","SchemaAdminSettings","getEnablePluginSetting","plugin","escapedPluginId","escapePathPart","pluginEnabledConfigKey","makeGetPluginSchema","pluginId","getAdminConsoleCustomComponents","customComponents","toLowerCase","bannerType","translate","showTitle","unshift","makeMapStateToProps","getPluginSchema","ownProps","plugin_id","getRoles","SupportSettings","CustomTermsOfServiceEnabled","termsEnabled","CustomTermsOfServiceReAcceptancePeriod","reAcceptancePeriod","DEFAULT_TERMS_OF_SERVICE_RE_ACCEPTANCE_PERIOD","receivedTermsText","termsText","createTermsOfService","handleAPIError","loadingTermsText","res","getTermsOfService","CustomTermsOfService","handleTermsEnabledChange","handleTermsTextChange","MAX_TERMS_OF_SERVICE_TEXT_LENGTH","handleReAcceptancePeriodChange","s","arr","join","valueAsArray","stringToArray","arrayToString","EnableMessageDeletion","enableMessageDeletion","EnableFileDeletion","enableFileDeletion","MessageRetentionDays","messageRetentionDays","FileRetentionDays","fileRetentionDays","DeletionJobStartTime","deletionJobStartTime","showConfirmModal","messageList","days","index","confirmButton","handleSaveConfirmed","handleSaveCanceled","enableMessageDeletionOptions","enableFileDeletionOptions","messageRetentionDaysSetting","fileRetentionDaysSetting","confirmModal","renderConfirmModal","DATA_RETENTION","String","SqlSettings","MaxIdleConns","maxIdleConns","MaxOpenConns","maxOpenConns","Trace","trace","QueryTimeout","queryTimeout","ConnMaxLifetimeMilliseconds","parseIntNonNegative","connMaxLifetimeMilliseconds","MinimumHashtagLength","minimumHashtagLength","dataSource","substring","recycleDbButton","recycleDatabaseConnection","driverName","DriverName","DataSource","DropdownSetting","ElasticsearchSettings","ConnectionUrl","connectionUrl","SkipTLSVerification","skipTLSVerification","Username","Password","Sniff","sniff","EnableIndexing","enableIndexing","EnableSearching","enableSearching","EnableAutocomplete","enableAutocomplete","configTested","canPurgeAndIndex","success","elasticsearchTest","handleSettingChanged","doTestConfig","ELASTICSEARCH_POST_INDEXING","getExtraInfo","elasticsearchPurgeIndexes","JobStatuses","IN_PROGRESS","percent","Number","progress","FileUploadSetting","Setting","uploadingText","onSubmit","files","fileSelected","fileName","upload_button","button","btnClass","GeneratedSetting","crypto","randomBytes","toString","regenerateText","regenerateHelpText","regenerate","addChannelOpen","addTeamOpen","promises","groupID","Groups","SYNCABLE_TYPE_TEAM","auto_add","Promise","all","finally","getGroupSyncables","channels","SYNCABLE_TYPE_CHANNEL","members","groupTeams","groupChannels","memberCount","openAddTeam","openAddChannel","loadingTeamsAndChannels","unlink","closeAddTeam","addTeams","team_id","closeAddChannel","addChannels","channel_id","getMembers","getGroup","GroupProfile","GroupTeamsAndChannels","collapsed","entries","existingTeams","teamEntries","team_type","hasChildren","some","team_display_name","implicit","channelEntriesByTeam","channel_type","channel_display_name","teamChannels","teamsAndChannelsToEntries","entry","onRemoveItem","onToggleCollapse","GroupTeamsAndChannelsRow","showConfirmationModal","extraClasses","arrowIcon","toggleCollapse","teamIcon","channelIcon","displayType","removeItem","GROUP_MEMBERS_PAGE_SIZE","GroupUsers","page","total","member","startCount","endCount","lastPage","firstPage","previousPage","nextPage","renderRows","renderPagination","GroupUsersRow","userId","lastPictureUpdate","group_id","getGroupTeams","getGroupChannels","getGroupMembers","getGroupMemberCount","fetchGroup","fetchMembers","fetchGroupSyncables","linkGroupSyncable","unlinkGroupSyncable","GroupRow","onCheckToggle","primary_key","stopPropagation","mattermost_group_id","has_syncables","failed","unlinkHandler","linkHandler","checked","onRowClick","renderLinked","renderActions","LDAP_GROUPS_PAGE_SIZE","FILTER_STATE_SEARCH_KEY_MAPPING","filterIsConfigured","option","is_configured","filterIsUnconfigured","filterIsLinked","is_linked","filterIsUnlinked","GroupsList","showFilters","searchGroups","newChecked","hasSelectedLinked","selectionActionButtonType","linkSelectedGroups","unlinkSelectedGroups","RegExp","searchString","q","opts","re","test","getLdapGroups","KeyCodes","ENTER","k","stateKey","newSearchString","stringFilterPresent","updates","nativeEvent","stopImmediatePropagation","handleFilterCheck","handleGroupSearchKeyUp","resetFiltersAndSearch","closeFilters","once","renderSearchFilters","renderSelectionActionButton","getSortedListOfLdapGroups","getLdapGroupsCount","fetchLdapGroups","linkLdapGroup","unlinkLdapGroup","Highlight","debounce","markInstance","unmark","ref","Mark","mark","accuracy","leading","trailing","setTimeout","redrawHighlight","generalConfig","getGeneralConfig","teamId","LocalStorageStore","getPreviousTeamId","getCurrentUserId","getTeam","General","DEFAULT_CHANNEL","withRouter","jobs","jobType","getJobsByType","createJob","cancelJob","Table","JobTable","PENDING","SUCCESS","ERROR","CANCEL_REQUESTED","CANCELED","getExtraInfoText","last_activity_at","runningMillis","lastActivity","formatDate","year","month","day","formatTime","hour","minute","second","seconds","round","minutes","jobId","getAttribute","cancelButton","handleCancelJob","getCancelButton","getStatus","getFinishAt","getRunLength","handleCreateJob","createJobButtonText","createJobHelpText","injectIntl","getLicenseConfig","uploadLicense","removeLicense","file","uploading","removing","edition","licenseType","licenseKey","issued","IssuedAt","startsAt","StartsAt","expiresAt","ExpiresAt","sku","SkuShortName","Name","Company","Users","removeButtonText","handleRemove","uploadButtonText","userAccessTokensEnabled","EnableUserAccessTokens","updateUserRoles","ManageRolesModal","getStateFromProps","hasPostAllRole","UserUtils","hasPostAllPublicRole","hasUserAccessTokenRole","isSystemAdmin","oldRoles","role","SYSTEM_USER_ACCESS_TOKEN_ROLE","SYSTEM_POST_ALL_ROLE","SYSTEM_POST_ALL_PUBLIC_ROLE","SYSTEM_USER_ROLE","SYSTEM_ADMIN_ROLE","trackRoleChanges","onModalDismissed","handleError","additionalRoles","is_bot","handlePostAllChange","handlePostAllPublicChange","userAccessTokenContent","handleUserAccessTokenChange","handleSystemAdminChange","getDerivedStateFromProps","nextProps","prevUser","show","renderContents","getTeamMembersForUser","getTeamsForUser","updateTeamMemberSchemeRoles","removeUserFromTeam","ManageTeamsModal","ManageTeamsDropdown","teamMember","onError","onMemberChange","handleRemoveUserFromTeam","isTeamAdmin","scheme_admin","isSysAdmin","isGuest","makeTeamAdmin","makeMember","group_constrained","removeFromTeam","getTeamMembers","teamMembers","handleMemberRemove","teamList","find","handleMemberChange","systemAdminIndicator","loadTeamsAndTeamMembers","UNSAFE_componentWillReceiveProps","nextUserId","RemoveFromTeamButton","userAccessTokens","userAccessTokensByUser","getUserAccessTokensForUser","ManageTokensModal","tokenList","userAccessTokensList","token","prevUserId","exportFormats","EXPORT_FORMAT_CSV","EXPORT_FORMAT_ACTIANCE","EXPORT_FORMAT_GLOBALRELAY","EnableExport","enableComplianceExport","ExportFormat","exportFormat","DailyRunTime","exportJobStartTime","GlobalRelaySettings","CustomerType","globalRelayCustomerType","SmtpUsername","globalRelaySmtpUsername","SmtpPassword","globalRelaySmtpPassword","EmailAddress","globalRelayEmailAddress","messages_exported","exportFormatOptions","globalRelaySettings","globalRelayEmail","dropdownHelpText","MESSAGE_EXPORT","getJobDetails","MultiSelectSetting","newValue","selected","mustBePresent","notPresent","found","newProps","getOptionLabel","noResultText","calculateValue","errorText","MinimumLength","passwordMinimumLength","MIN_PASSWORD_LENGTH","Lowercase","lowercase","Uppercase","uppercase","Symbol","symbol","MaximumLoginAttempts","maximumLoginAttempts","minLength","MAX_PASSWORD_LENGTH","sampleErrorMsgId","sampleErrorMsg","getSampleErrorMsg","handlePasswordLengthChange","passwordLowercase","handleCheckboxChange","passwordUppercase","passwordNumber","passwordSymbol","EditPostTimeLimitButton","messageID","timeLimit","UNSET_POST_EDIT_TIME_LIMIT","PostEditTimeLimit","INT32_MAX","EditPostTimeLimitModal","val","postEditTimeLimit","onClose","ALLOW_EDIT_POST_ALWAYS","handleOptionChange","ALLOW_EDIT_POST_TIME_LIMIT","handleSecondsChange","save","GuestPermissionsTree","editTimeLimitModalIsVisible","ids","readOnly","onToggle","selectRow","ADDITIONAL_VALUES","parentRole","scope","toggleGroup","closePostTimeLimitModal","edit_post","editTimeLimitButton","openPostTimeLimitModal","Permissions","CREATE_PRIVATE_CHANNEL","EDIT_POST","DELETE_POST","combined","ADD_REACTION","REMOVE_REACTION","schemes","getSchemes","jobsAreEnabled","RunJobs","clusterIsEnabled","EnableCluster","loadSchemes","loadSchemeTeams","PermissionCheckbox","extraClass","PermissionDescription","open","isInheritLink","parentElement","generateId","inherited","rowType","additionalValues","tooltip","parentPermissionClicked","PermissionGroup","expanded","permission","getRecursivePermissions","permissionsToToggle","fromParent","prevPermissions","PermissionsScope","isInScope","comesFromParent","uniqId","toggleSelectRow","g","toggleSelectSubGroup","anyChecked","anyUnchecked","allPermissionsFromParent","root","hasPermissionsOnScope","permissionsRows","addVals","renderPermission","renderGroup","classes","toggleSelectGroup","toggleExpanded","UNSAFE_componentWillUpdate","PermissionRow","toggleSelect","PAGE_SIZE","PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE","loadingMore","scheme","phase2MigrationIsComplete","docLink","teamOverrideUnavalableView","defaultMsg","history","hasCustomSchemes","CustomPermissionsSchemes","teamOverrideView","teamOverrideSchemesMigrationView","loadMoreSchemes","renderTeamOverrideSchemes","UNSAFE_componentWillMount","status_code","rolesRequest","getRolesByNames","EXCLUDED_PERMISSIONS","VIEW_MEMBERS","JOIN_PUBLIC_TEAMS","LIST_PUBLIC_TEAMS","JOIN_PRIVATE_TEAMS","LIST_PRIVATE_TEAMS","GUEST_INCLUDED_PERMISSIONS","openRoles","all_users","scrollIntoView","behavior","block","toggleRole","selectedPermission","goToSelectedRow","system_guest","team_guest","channel_guest","includes","teamAdminPromise","channelAdminPromise","restoreExcludedPermissions","deriveRolesFromAllUsers","guestRoles","restoreGuestPermissions","deriveRolesFromGuests","guests","systemUserPromise","teamUserPromise","channelUserPromise","haveGuestAccountsPermissions","systemGuestPromise","teamGuestPromise","channelGuestPromise","results","roleId","newOpenRoles","newPermissions","splice","newRolesState","DefaultRolePermissions","roleName","GuestAccountsPermissions","loaded","EnableGuestAccounts","togglePermission","showResetDefaultModal","resetDefaults","rolesNeeded","GeneralConstants","TEAM_ADMIN_ROLE","TEAM_USER_ROLE","CHANNEL_ADMIN_ROLE","CHANNEL_USER_ROLE","SYSTEM_GUEST_ROLE","TEAM_GUEST_ROLE","CHANNEL_GUEST_ROLE","every","loadRolesIntoState","componentWillReceiveProps","getSchemeTeams","makeGetSchemeTeams","schemeId","scheme_id","getScheme","loadScheme","patchScheme","updateTeamScheme","createScheme","default_team_user_role","default_team_admin_role","default_channel_user_role","default_channel_admin_role","teamUser","teamAdmin","channelUser","channelAdmin","isLoaded","baseTeam","baseChannel","schemeName","schemeDescription","getStateRoles","allUsers","derived","newScheme","teamEditPromises","currentTeams","serverTeams","addedTeams","removedTeams","ADD_TEAMS_TO_SCHEME","handleNameChange","handleDescriptionChange","removeTeam","stats","getTeamStats","loadTeamStats","TeamInList","imageURLForTeam","onRemoveTeam","deleteScheme","PermissionsSchemeSummary","MAX_TEAMS_PER_SCHEME_SUMMARY","deleting","handleDeleteConfirmed","handleDeleteCanceled","extraTeams","goToEdit","delete","PermissionsTree","integrationsGroup","teamsGroup","EnableIncomingWebhooks","MANAGE_INCOMING_WEBHOOKS","EnableOutgoingWebhooks","MANAGE_OUTGOING_WEBHOOKS","EnableOAuthServiceProvider","MANAGE_OAUTH","EnableCommands","MANAGE_SLASH_COMMANDS","EnableCustomEmoji","CREATE_EMOJIS","DELETE_EMOJIS","DELETE_OTHERS_EMOJIS","INVITE_GUEST","INVITE_USER","GET_PUBLIC_LINK","ADD_USER_TO_TEAM","CREATE_TEAM","CREATE_PUBLIC_CHANNEL","MANAGE_PUBLIC_CHANNEL_PROPERTIES","MANAGE_PUBLIC_CHANNEL_MEMBERS","DELETE_PUBLIC_CHANNEL","MANAGE_PRIVATE_CHANNEL_PROPERTIES","MANAGE_PRIVATE_CHANNEL_MEMBERS","DELETE_PRIVATE_CHANNEL","EDIT_OTHERS_POSTS","DELETE_OTHERS_POSTS","updateGroups","pluginStatuses","uploadPlugin","installPluginFromUrl","removePlugin","getPluginStatuses","enablePlugin","disablePlugin","PluginItemState","PluginState","PLUGIN_STATE_NOT_RUNNING","PLUGIN_STATE_STARTING","PLUGIN_STATE_RUNNING","PLUGIN_STATE_FAILED_TO_START","PLUGIN_STATE_FAILED_TO_STAY_RUNNING","PLUGIN_STATE_STOPPING","PluginItemStateDescription","PluginItem","pluginStatus","handleEnable","handleDisable","showInstances","activateButton","activating","deactivating","settingsButton","removeButton","is_prepackaged","prepackagedLabel","notices","instances","instance","cluster_id","clusterSummary","enable","EnableUploads","enableUploads","AllowInsecureDownloadUrl","allowInsecureDownloadUrl","EnableMarketplace","enableMarketplace","MarketplaceUrl","marketplaceUrl","RequirePluginSignature","requirePluginSignature","lastMessage","force","confirmOverwriteUploadModal","overwritingUpload","msg","helpSubmitUpload","pluginDownloadUrl","installing","confirmOverwriteInstallModal","overwritingInstall","installFromUrl","showRemoveModal","onConfirm","onCancel","overwriteButton","hideEnablePlugins","ExperimentalSettings","RestrictSystemAdmin","enableUploadButton","pluginsList","pluginsContainer","pluginsListContainer","showRemovePluginModal","uploadHelpText","overwriteUploadPluginModal","renderOverwritePluginModal","handleOverwriteUploadPlugin","handleOverwriteUploadPluginCancel","removePluginModal","renderRemovePluginModal","handleRemovePlugin","handleRemovePluginCancel","renderEnablePluginsSetting","classNames","handleUpload","handleSubmitUpload","getMarketplaceUrlHelpText","resolveRemoveModal","PUSH_NOTIFICATIONS_OFF","PUSH_NOTIFICATIONS_MHPNS","PUSH_NOTIFICATIONS_MTPNS","PUSH_NOTIFICATIONS_CUSTOM","PushSettings","pushNotificationServerType","agree","pushNotificationServer","MHPNS","MTPNS","SendPushNotifications","PushNotificationServer","MaxNotificationsPerChannel","maxNotificationsPerChannel","pushNotificationServerTypes","sendHelpText","pushServerHelpText","tosCheckbox","handleAgreeChange","handleDropdownChange","isPushNotificationServerSetByEnv","RadioSetting","RemoveFileSetting","remove_button","removingText","RequestButton","busy","fail","doRequest","requestAction","errMsg","includeDetailedError","detailed_error","saveConfigAction","showSuccessMessage","successMessage","widgetClassNames","handleRequest","loadingText","buttonText","alternativeActionElement","ResetEmailModal","isEmail","adminResetEmail","onModalSubmit","urlClass","errorMsg","doCancel","passwordConfig","currentUserId","getPasswordConfig","ResetPasswordModal","currentPassword","serverErrorCurrentPass","valid","serverErrorNewPass","adminResetPassword","auth_service","newPasswordFocus","urlClassCurrentPass","revokeUserAccessToken","RevokeTokenButton","tokenId","rolesBinding","updatedRoles","rolesFromMapping","isMarkdown","helpTextValues","helpTextDefault","disabled_help_text_values","handleRequestAction","renderHelpText","renderLabel","inputType","handlePermissionChange","o","selectedValue","selectedOptionForHelpText","locales","I18n","l","order","changedId","renderBanner","regenerate_help_text","handleGeneratedChange","removeFile","successCallback","errorCallback","uploadFile","filename","idpCertificateFileError","CustomComponent","componentInstance","saveAction","indexOfSaveAction","saveActions","settingsList","buildSettingFunctions","hasSaveActionError","hasError","customComponentWrapperClass","hybridSchemaAndComponent","isPlugin","buildTextSetting","buildColorSetting","buildBoolSetting","buildPermissionSetting","buildDropdownSetting","TYPE_RADIO","buildRadioSetting","buildBannerSetting","buildGeneratedSetting","TYPE_USERNAME","buildUsernameSetting","buildButtonSetting","buildLanguageSetting","buildJobsTableSetting","buildFileUploadSetting","buildCustomSetting","prevSchemaId","getSettingValue","previousValue","mappingValueFromRoles","default","getSetting","unescapePathPart","SchemaText","textDefault","textValues","html","marked","breaks","sanitize","renderer","CustomRenderer","__html","isTranslated","renderTranslated","renderUntranslated","logs","getLogs","Logs","NEXT_BUTTON_TIMEOUT","nextDisabled","nextTimeoutId","logPanel","scrollTop","scrollHeight","nextButton","previousButton","perPage","fontFamily","loadingLogs","Settings","inputId","SettingsGroup","container","wrapperClass","contentClass","getUser","getProfiles","updateUserActive","addUserToTeam","teamIds","refreshTeams","showPasswordModal","onUpdateActiveResult","showDeactivateMemberModal","adminResetMfa","emailChanged","EMAIL_SERVICE","confirmButtonClass","deactivateMemberButton","handleDeactivateMember","handleDeactivateCancel","delete_at","handleMakeActive","handleShowDeactivateMemberModal","mfa_active","handleResetMfa","searching","deactivateMemberModal","currentRoles","renderDeactivateMemberModal","position","handleEmailChange","doPasswordReset","renderActivateDeactivate","renderRemoveMFA","setTeamsData","doPasswordResetSubmit","doPasswordResetDismiss","AbstractList","performSearch","getTeamsData","onPageChangedCallback","getPaging","headerLabels","headerLabel","emptyListTextId","emptyListTextDefaultMessage","pageStart","pageEnd","pageData","renderRow","renderHeaderLabels","removeGroup","TeamList","flexGrow","minWidth","marginLeft","width","memberships","mergeTeamsWithMemberships","teamsWithMemberships","userDetailCallback","getTeamsAndMemberships","doRemoveUserFromTeam","doMakeUserTeamAdmin","doMakeUserTeamMember","TeamListDropdown","isAdmin","isMember","scheme_user","scheme_guest","showMakeTeamAdmin","showMakeTeamMember","TeamRow","allow_open_invite","teamIconUrl","renderTeamType","renderTeamRole","mfaEnabled","EnableMultifactorAuthentication","enableUserAccessTokens","experimentalEnableAuthenticationTransfer","ExperimentalEnableAuthenticationTransfer","views","systemUsersSearch","totalUsers","searchTerm","SearchUserTeamFilter","ALL_USERS","analytics","Stats","TOTAL_USERS","TOTAL_INACTIVE_USERS","NO_TEAM","total_member_count","getTeamsList","getUsers","getTeams","getUserAccessToken","loadProfilesAndTeamMembers","setSystemUsersSearch","loadProfilesWithoutTeam","searchProfiles","revokeSessionsForAllUsers","logError","getNonBotUsers","SystemUsersList","USER_ID_LENGTH","filters","userSelectorOptionsFromFilter","searchProfilesInTeam","getProfilesWithoutTeam","getProfilesInTeam","showManageTeamsModal","showManageRolesModal","showManageTokensModal","showEmailModal","getInfoForUser","info","service","LDAP_SERVICE","SAML_SERVICE","toUpperCase","userID","renderCount","isSearch","extraInfo","SystemUsersDropdown","doEmailReset","doManageTeams","doManageRoles","doManageTokens","onTermChange","UserListRowWithError","doManageTeamsDismiss","doManageRolesDismiss","doManageTokensDismiss","doEmailResetSubmit","doEmailResetDismiss","usersPerPage","focusOnMount","renderFilterRow","USERS_PER_PAGE","doSearch","getUserOptionsFromFilter","PROFILE_CHUNK_SIZE","getStandardAnalytics","loadDataForTeam","emitUserLoggedOutEvent","showRevokeAllSessionsModal","searchUserOptionsFromFilter","UserSearchOptions","WITHOUT_TEAM","allow_inactive","getUserByTokenOrId","SEARCH_TIMEOUT_MILLISECONDS","getUserById","revokeAllButton","handleRevokeAllSessions","handleRevokeAllSessionsCancel","handleTeamChange","handleFilterChange","UserFilters","SYSTEM_ADMIN","SYSTEM_GUEST","INACTIVE","revokeAllUsersModal","renderRevokeAllUsersModal","handleTermChange","REVOKE_USER_ACCESS_TOKEN","handleShowRevokeAllSessionsModal","bots","getBotAccounts","revokeAllSessionsForUser","promoteGuestToUser","demoteUserToGuest","loadBots","ROWS_FROM_BOTTOM_TO_OPEN_UP","shouldDisableBotsWhenOwnerIsDeactivated","Integrations","START_PAGE_NUM","confirmationMessage","messageForUsersWithBotAccounts","bot","owner_id","showRevokeSessionsModal","showPromoteToUserModal","showDemoteToGuestModal","promoteUserButton","handlePromoteToUserConfirm","handlePromoteToUserCancel","demoteGuestButton","handleDemoteToGuestConfirm","handleDemoteToGuestCancel","revokeUserButtonButton","handleRevokeSessions","handleRevokeSessionsCancel","messageId","DisableBotsWhenOwnerIsDeactivated","showMakeActive","showMakeNotActive","showManageTeams","showRevokeSessions","showMfaReset","disableActivationToggle","revokeSessionsModal","renderRevokeSessionsModal","promoteToUserModal","renderPromoteToUserModal","demoteToGuestModal","renderDemoteToGuestModal","openUp","renderAccessToken","handleManageRoles","handleManageTeams","handleManageTokens","handleResetPassword","handleResetEmail","handlePromoteToUser","handleDemoteToGuest","handleShowRevokeSessionsModal","offset","getData","response","ChannelsSettings","isSynced","isPublic","isOriginallyPublic","OPEN_CHANNEL","isPrivacyChanging","processGroupsChange","gid","totalGroups","groupIDs","allGroups","showConvertConfirmModal","showRemoveConfirmModal","showConvertAndRemoveConfirmModal","usersToRemove","origGroups","channelID","convert","updateChannelPrivacy","PRIVATE_CHANNEL","patchChannel","resultWithError","getGroups","isDefault","missingGroup","og","removedGroups","hideConvertConfirmModal","hideRemoveConfirmModal","hideConvertAndRemoveConfirmModal","setToggles","handleGroupChange","handleGroupRemoved","onSave","getChannel","membersMinusGroupMembers","total_count","ex","ChannelGroups","onGroupRemoved","onAddCallback","synced","AddGroupsToChannelModal","skipCommit","includeGroups","excludeGroups","SyncGroupsToggle","AllowAllToggle","ChannelModes","ChannelProfile","getGroupsAssociatedToChannel","associatedGroups","groupsAssociatedToChannel","getAllGroups","totalCount","fetchChannel","fetchTeam","fetchAssociatedGroups","ChannelList","handleChannelSearchKeyUp","searchBarChangeHandler","resetSearch","searchAllChannels","searchMode","searchTotalCount","pageResetKey","Array","pagination","onChannelClick","searchBar","absProps","getDataBySearch","ChannelRow","handleRowClick","team_name","compareByDisplayName","getSortedListOfChannels","getAllChannels","c","List","ConvertAndRemoveConfirmModal","toPublic","removeAmount","toPublicMsg","toPrivateMsg","convertMessageId","toPublicTitle","toPrivateTitle","titleId","toPublicConfirmMsg","toPrivateConfirmMsg","confirmMsgId","amount","modalClass","ConvertConfirmModal","NeedGroupsError","NeedDomainsError","UsersWillBeRemovedError","UsersToBeRemovedModal","Header","GroupList","member_count","AdminGroupUsers","AdminGroupUsersRow","padding","renderRolesColumn","renderGroupsColumn","isModeSync","resolve","LineSwitch","subTitle","singleLine","toggled","offText","onText","last","RemoveConfirmModal","inChannel","messageChannel","messageGroup","buttonClass","SaveChangesPanel","cancelLink","teamID","getGroupsAssociatedToTeam","groupsAssociatedToTeam","patchTeam","showRemoveConfirmation","allAllowedChecked","allowedDomainsChecked","allowedDomains","syncChecked","patchTeamPromise","allowed_domains","hideRemoveUsersModal","showRemoveUsersModal","TeamGroups","AddGroupsToTeamModal","AllowedDomainsToggle","TeamModes","TeamProfile","TeamsSettings","getSortedListOfTeams","pageSize","fetchTeams","searchTeams","handleTeamSearchKeyUp","onTeamClick","cloneDeep","renderManagementMethodText","onHide","handleHide","handleExit","AdminTextSetting","sharedProps","isTextDisabled","UserAutocompleteSetting","userSuggestionProviders","GenericUserProvider","handleUserSelected","SuggestionList","DoughnutChart","update","canvas","el","ReactDOM","findDOMNode","ctx","getContext","dataCopy","chart","Chart","initChart","destroy","height","formatChannelDoughtnutData","totalPublic","totalPrivate","channelTypeData","labels","datasets","hoverBackgroundColor","formatPostDoughtnutData","filePosts","hashtagPosts","totalPosts","postTypeData","formatPostsPerDayData","chartData","fillColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","row","synchronizeChartData","chartDatas","formatUsersWithPostsPerDayData","LineChart","legend","chartOptions","currentData","hasData","hasChart","StatisticCount","StatTypes","AdminActions","skippedIntensiveQueries","TOTAL_POSTS","postCountsDay","POST_PER_DAY","botPostCountsDay","BOT_POST_PER_DAY","userCountsWithPostsDay","USERS_WITH_POSTS_PER_DAY","banner","postCount","postTotalGraph","botPostTotalGraph","activeUserGraph","advancedStats","advancedGraphs","sessionCount","commandCount","incomingCount","outgoingCount","TOTAL_SESSIONS","TOTAL_COMMANDS","TOTAL_IHOOKS","TOTAL_OHOOKS","TOTAL_WEBSOCKET_CONNECTIONS","TOTAL_MASTER_DB_CONNECTIONS","TOTAL_READ_DB_CONNECTIONS","TOTAL_PUBLIC_CHANNELS","TOTAL_PRIVATE_GROUPS","TOTAL_FILE_POSTS","TOTAL_HASHTAG_POSTS","postTypeGraph","userCount","teamCount","TOTAL_TEAMS","channelCount","dailyActiveUsers","DAILY_ACTIVE_USERS","monthlyActiveUsers","MONTHLY_ACTIVE_USERS","firstRow","secondRow","thirdRow","TableChart","tip","LAST_ANALYTICS_TEAM","BrowserStore","getGlobalItem","initialTeam","teamAnalytics","recentlyActiveUsers","newUsers","setGlobalItem","totalPostsCount","userActiveGraph","recentActiveUsers","formatRecentUsersData","newlyCreatedUsers","formatNewUsersData","aName","bName","formattedData","getMonthLong","CHANNELS_PER_PAGE","ChannelSelectorModal","setModalSearchTerm","onChannelsSelected","findIndex","v","loadingState","loadingChannels","prevPage","setChannelsLoadingState","loadChannels","stateChannelIDs","stateChannel","serverChannel","compareChannels","multiselectComponent","searchTimeoutId","clearTimeout","searchChannels","renderOption","isSelected","onAdd","rowSelected","renderValue","numRemainingText","buttonSubmitText","handlePageChange","handleDelete","addValue","modalSearch","DiscardChangesModal","startsWith","loadTeams","TeamSelectorModal","TEAMS_PER_PAGE","onTeamsSelected","confirmed","modalID","confirmAddModal","confirmAddTeam","loadingTeams","setTeamsLoadingState","confirmButtonText","currentSchemeId","alreadySelected","Toggle","getStatusForUserId","UserListRow","errorObj","buttons","Action","actionProps","actionUserProps","emailStyle","userCountID","userCountEmail","AdminHeader","AdminPanel","onHeaderClick","titleDefault","subtitleId","subtitleDefault","subtitleValues","AdminPanelTogglable","AdminPanelWithButton","onButtonClick","buttonTextId","buttonTextDefault","AdminPanelWithLink","linkTextId","linkTextDefault","FormattedAdminHeader","AccordionToggleIcon","AtIcon","CheckboxCheckedIcon","CheckboxPartialIcon","EllipsisHorizontalIcon","ariaLabel","EmailIcon","NextIcon","additionalClassName","PreviousIcon","ReloadIcon","ShieldOutlineIcon","adminConsoleReducers","reducers","reducer","adminConsoleCustomComponents","extractTextsFromSection","texts","searchableString","adminDefinitionsToUrlsAndTexts","FlexSearch","addToIndex","getPluginEntries","extractTextsFromPlugin","extractTextFromSetting","stripMarkdown","settingsTexts","pluginsObj","UserListOptions","ROLE","ALLOW_INACTIVE","MAPPING","enableTeamCreation","true","shouldHave","false","editOthersPosts","enableOnlyAdminIntegrations","mappingValues","rolesClone","purgeNonPertinentRoles","mappingKey","mutateRolesBasedOnMapping","roleClone","originalPermissionSet","newPermissionSet","difference","x","size","mappingPartIterator","allConditionsAreMet","Error","pertinentRoleNames","roleNamesInMapping","roleRules","addPermissionToRole","removePermissionFromRole","roleNames","v1","v2","names","mappingPart","hasUnmetCondition","permissionIndex"],"mappings":"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AEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMwD,yBAAyB,GAAG,OAAlC;AACA,MAAMC,sBAAsB,GAAG,UAA/B;AACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAjB;AACA,MAAMC,oBAAoB,GAAG,CAA7B;AAEA,MAAMC,sCAAsC,GAAG,aAA/C;AACA,MAAMC,wCAAwC,GAAG,eAAjD;AACA,MAAMC,wCAAwC,GAAG,eAAjD;AAEA,MAAMC,sCAAsC,GAAG,cAA/C;AACA,MAAMC,wCAAwC,GAAG,cAAjD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMC,EAAE,GAAG;AACdC,MAAI,EAAGvE,IAAD,IAAU,CAACkB,MAAD,EAASU,KAAT,EAAgBT,OAAhB,EAAyBqD,eAAzB,KAA6C,CAACxE,IAAI,CAACkB,MAAD,EAASU,KAAT,EAAgBT,OAAhB,EAAyBqD,eAAzB,CADpD;AAEdC,MAAI,EAAE,CAAC,GAAGC,KAAJ,KAAc,CAACxD,MAAD,EAASU,KAAT,EAAgBT,OAAhB,KAA4B;AAC5C,SAAK,MAAMnB,IAAX,IAAmB0E,KAAnB,EAA0B;AACtB,UAAI,CAAC1E,IAAI,CAACkB,MAAD,EAASU,KAAT,EAAgBT,OAA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","file":"7.d52e8f284377106cfd36.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './admin_button_outline.scss';\n\nexport default class AdminButtonOutline extends React.Component {\n    static propTypes = {\n        onClick: PropTypes.func.isRequired,\n        children: PropTypes.string.isRequired,\n    }\n    render() {\n        return (\n            <button\n                onClick={this.props.onClick}\n                className={'AdminButtonOutline btn btn-primary'}\n            >\n                {this.props.children}\n            </button>\n        );\n    }\n}","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./admin_button_outline.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport 'bootstrap';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport ModalController from 'components/modal_controller';\n\nimport SchemaAdminSettings from 'components/admin_console/schema_admin_settings';\nimport DiscardChangesModal from 'components/discard_changes_modal';\n\nimport AdminSidebar from './admin_sidebar';\nimport Highlight from './highlight';\n\nexport default class AdminConsole extends React.Component {\n    static propTypes = {\n        config: PropTypes.object.isRequired,\n        adminDefinition: PropTypes.object.isRequired,\n        environmentConfig: PropTypes.object,\n        license: PropTypes.object.isRequired,\n        unauthorizedRoute: PropTypes.string.isRequired,\n        buildEnterpriseReady: PropTypes.bool,\n        roles: PropTypes.object.isRequired,\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n        showNavigationPrompt: PropTypes.bool.isRequired,\n        isCurrentUserSystemAdmin: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n            getConfig: PropTypes.func.isRequired,\n            getEnvironmentConfig: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n            confirmNavigation: PropTypes.func.isRequired,\n            cancelNavigation: PropTypes.func.isRequired,\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n            editRole: PropTypes.func.isRequired,\n            updateConfig: PropTypes.func,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filter: '',\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getConfig();\n        this.props.actions.getEnvironmentConfig();\n        this.props.actions.loadRolesIfNeeded(['channel_user', 'team_user', 'system_user', 'channel_admin', 'team_admin', 'system_admin']);\n    }\n\n    onFilterChange = (filter) => {\n        this.setState({filter});\n    }\n\n    mainRolesLoaded(roles) {\n        return (\n            roles &&\n            roles.channel_admin &&\n            roles.channel_user &&\n            roles.team_admin &&\n            roles.team_user &&\n            roles.system_admin &&\n            roles.system_user\n        );\n    }\n\n    renderRoutes = (extraProps) => {\n        const schemas = Object.values(this.props.adminDefinition).reduce((acc, section) => {\n            const items = Object.values(section).filter((item) => {\n                if (item.isHidden && item.isHidden(this.props.config, {}, this.props.license, this.props.buildEnterpriseReady)) {\n                    return false;\n                }\n                if (!item.schema) {\n                    return false;\n                }\n                return true;\n            });\n            return acc.concat(items);\n        }, []);\n        const schemaRoutes = schemas.map((item) => {\n            return (\n                <Route\n                    key={item.url}\n                    path={`${this.props.match.url}/${item.url}`}\n                    render={(props) => (\n                        <SchemaAdminSettings\n                            {...extraProps}\n                            {...props}\n                            schema={item.schema}\n                        />\n                    )}\n                />\n            );\n        });\n        const defaultUrl = schemas[0].url;\n\n        return (\n            <Switch>\n                {schemaRoutes}\n                {<Redirect to={`${this.props.match.url}/${defaultUrl}`}/>}\n            </Switch>\n        );\n    }\n\n    render() {\n        const {\n            license,\n            config,\n            environmentConfig,\n            showNavigationPrompt,\n            roles,\n        } = this.props;\n        const {setNavigationBlocked, cancelNavigation, confirmNavigation, editRole, updateConfig} = this.props.actions;\n\n        if (!this.props.isCurrentUserSystemAdmin) {\n            return (\n                <Redirect to={this.props.unauthorizedRoute}/>\n            );\n        }\n\n        if (!this.mainRolesLoaded(this.props.roles)) {\n            return null;\n        }\n\n        if (Object.keys(config).length === 0) {\n            return <div/>;\n        }\n        if (config && Object.keys(config).length === 0 && config.constructor === 'Object') {\n            return (\n                <div className='admin-console__wrapper'>\n                    <AnnouncementBar/>\n                    <div className='admin-console'/>\n                </div>\n            );\n        }\n\n        const discardChangesModal = (\n            <DiscardChangesModal\n                show={showNavigationPrompt}\n                onConfirm={confirmNavigation}\n                onCancel={cancelNavigation}\n            />\n        );\n\n        // not every page in the system console will need the license and config, but the vast majority will\n        const extraProps = {\n            license,\n            config,\n            environmentConfig,\n            setNavigationBlocked,\n            roles,\n            editRole,\n            updateConfig,\n        };\n        return (\n            <div\n                className='admin-console__wrapper'\n                id='adminConsoleWrapper'\n            >\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <AdminSidebar onFilterChange={this.onFilterChange}/>\n                <div className='admin-console'>\n                    <Highlight filter={this.state.filter}>\n                        {this.renderRoutes(extraProps)}\n                    </Highlight>\n                </div>\n                {discardChangesModal}\n                <ModalController/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport {getSiteURL} from 'utils/url';\nimport {t} from 'utils/i18n';\nimport {\n    ldapTest, invalidateAllCaches, reloadConfig, testS3Connection,\n    removeIdpSamlCertificate, uploadIdpSamlCertificate,\n    removePrivateSamlCertificate, uploadPrivateSamlCertificate,\n    removePublicSamlCertificate, uploadPublicSamlCertificate,\n    invalidateAllEmailInvites, testSmtp, testSiteURL,\n} from 'actions/admin_actions';\nimport SystemAnalytics from 'components/analytics/system_analytics';\nimport TeamAnalytics from 'components/analytics/team_analytics';\nimport PluginManagement from 'components/admin_console/plugin_management';\nimport CustomPluginSettings from 'components/admin_console/custom_plugin_settings';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\n\nimport Audits from './audits';\nimport CustomUrlSchemesSetting from './custom_url_schemes_setting.jsx';\nimport CustomEnableDisableGuestAccountsSetting from './custom_enable_disable_guest_accounts_setting';\nimport LicenseSettings from './license_settings';\nimport PermissionSchemesSettings from './permission_schemes_settings';\nimport PermissionSystemSchemeSettings from './permission_schemes_settings/permission_system_scheme_settings';\nimport PermissionTeamSchemeSettings from './permission_schemes_settings/permission_team_scheme_settings';\nimport SystemUsers from './system_users';\nimport SystemUserDetail from './system_user_detail';\nimport ServerLogs from './server_logs';\nimport BrandImageSetting from './brand_image_setting/brand_image_setting.jsx';\nimport GroupSettings from './group_settings/group_settings.jsx';\nimport GroupDetails from './group_settings/group_details';\nimport TeamSettings from './team_channel_settings/team';\nimport TeamDetails from './team_channel_settings/team/details';\nimport ChannelSettings from './team_channel_settings/channel';\nimport ChannelDetails from './team_channel_settings/channel/details';\nimport PasswordSettings from './password_settings.jsx';\nimport PushNotificationsSettings from './push_settings.jsx';\nimport DataRetentionSettings from './data_retention_settings.jsx';\nimport MessageExportSettings from './message_export_settings.jsx';\nimport DatabaseSettings from './database_settings.jsx';\nimport ElasticSearchSettings from './elasticsearch_settings.jsx';\nimport ClusterSettings from './cluster_settings.jsx';\nimport CustomTermsOfServiceSettings from './custom_terms_of_service_settings';\n\nimport * as DefinitionConstants from './admin_definition_constants';\n\nconst FILE_STORAGE_DRIVER_LOCAL = 'local';\nconst FILE_STORAGE_DRIVER_S3 = 'amazons3';\nconst MEBIBYTE = Math.pow(1024, 2);\nconst MINIMUM_IDLE_TIMEOUT = 5;\n\nconst SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1 = 'RSAwithSHA1';\nconst SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256 = 'RSAwithSHA256';\nconst SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512 = 'RSAwithSHA512';\n\nconst SAML_SETTINGS_CANONICAL_ALGORITHM_C14N = 'Canonical1.0';\nconst SAML_SETTINGS_CANONICAL_ALGORITHM_C14N11 = 'Canonical1.1';\n\n// admin_definitions data structure define the autogenerated admin_console\n// section. It defines the structure of the menu based on sections, subsections\n// and pages. Each page contains an schema which defines a component to use for\n// render the entire section or the name of the section (name and\n// name_default), the section in the config file (id), and a list of options to\n// configure (settings).\n//\n// All text fiels contains a transation key, and the <field>_default string are the\n// default text when the translation is still not avaiable (the english version\n// of the text).\n//\n// We can define different types of settings configuration widgets:\n//\n// Widget:\n//   - type: which define the widget type.\n//   - label (and label_default): which define the main text of the setting.\n//   - isDisabled: a function which receive current config, the state of the page and the license.\n//   - isHidden: a function which receive current config, the state of the page and the license.\n//\n// Custom Widget (extends from Widget):\n//   - component: The component used to render the widget\n//\n// JobsTable Widget (extends from Widget):\n//   - job_type: The kind of job from Constants.JobTypes\n//   - render_job: Function to convert a job object into a react component.\n//\n// Banner Widget (extends from Widget):\n//   - banner_type: The type of banner (options: info or warning)\n//\n// Setting Widget (extends from Widget):\n//   - key: The key to store the configuration in the config file.\n//   - help_text (and help_text_default): Long description of the field.\n//   - help_text_markdown: True if the translation text contains markdown.\n//   - help_text_values: Values to fill the translation (if needed).\n//\n// Bool Widget (extends from Setting Widget)\n//\n// Number Widget (extends from Setting Widget)\n//\n// Color Widget (extends from Setting Widget)\n//\n// Text Widget (extends from Setting Widget)\n//   - placeholder (and placeholder_default): Placeholder text to show in the input.\n//   - dynamic_value: function that generate the value of the field based on the current value, the config, the state and the license.\n//   - default_value: function that generate the default value of the field based on the config, the state and the license.\n//   - max_length: The maximun length allowed\n//\n// Button Widget (extends from Setting Widget)\n//   - action: A redux action to execute on click.\n//   - error_message (and error_message_default): Error to show if action doesn't work.\n//   - success_message (and success_message_default): Success message to show if action doesn't work.\n//\n// Language Widget (extends from Setting Widget)\n//   - multiple: If you can select multiple languages.\n//   - no_result (and no_result_default): Text to show on not results found (only for multiple = true).\n//   - not_present (and not_present_default): Text to show when the default language is not present (only for multiple = true).\n//\n// Dropdown Widget (extends from Setting Widget)\n//   - options: List of options of the dropdown (each options has value, display_name, display_name_default and optionally help_text, help_text_default, help_text_values, help_text_markdown fields).\n//\n// Permissions Flag (extends from Setting Widget)\n//   - permissions_mapping_name: A permission name in the utils/policy_roles_adapter.js file.\n//\n// FileUpload (extends from Setting Widget)\n//   - remove_help_text (and remove_help_text_default):  Long description of the field when a file is uploaded.\n//   - remove_help_text_markdown: True if the translation text contains markdown.\n//   - remove_help_text_values: Values to fill the translation (if needed).\n//   - remove_button_text (and remove_button_text_default): Button text for remove when the file is uploaded.\n//   - removing_text (and removing_text_default): Text shown while the system is removing the file.\n//   - uploading_text (and uploading_text_default): Text shown while the system is uploading the file.\n//   - upload_action: An store action to upload the file.\n//   - remove_action: An store action to remove the file.\n//   - fileType: A list of extensions separated by \",\". E.g. \".jpg,.png,.gif\".\n\nexport const it = {\n    isnt: (func) => (config, state, license, enterpriseReady) => !func(config, state, license, enterpriseReady),\n    both: (...funcs) => (config, state, license) => {\n        for (const func of funcs) {\n            if (!func(config, state, license)) {\n                return false;\n            }\n        }\n        return true;\n    },\n    either: (...funcs) => (config, state, license, enterpriseReady) => {\n        for (const func of funcs) {\n            if (func(config, state, license, enterpriseReady)) {\n                return true;\n            }\n        }\n        return false;\n    },\n    stateMatches: (key, regex) => (config, state) => state[key].match(regex),\n    stateEquals: (key, value) => (config, state) => state[key] === value,\n    stateIsTrue: (key) => (config, state) => Boolean(state[key]),\n    stateIsFalse: (key) => (config, state) => !state[key],\n    configIsTrue: (group, setting) => (config) => Boolean(config[group][setting]),\n    configIsFalse: (group, setting) => (config) => !config[group][setting],\n    enterpriseReady: (config, state, license, enterpriseReady) => enterpriseReady,\n    licensed: (config, state, license) => license.IsLicensed === 'true',\n    licensedForFeature: (feature) => (config, state, license) => license.IsLicensed && license[feature] === 'true',\n};\n\nconst AdminDefinition = {\n    about: {\n        icon: 'fa-info-circle',\n        sectionTitle: t('admin.sidebar.about'),\n        sectionTitleDefault: 'About',\n        license: {\n            url: 'about/license',\n            title: t('admin.sidebar.license'),\n            title_default: 'Edition and License',\n            isHidden: it.either(\n                it.isnt(it.enterpriseReady),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            ),\n            searchableStrings: [\n                'admin.license.title',\n                'admin.license.uploadDesc',\n                'admin.license.keyRemove',\n                'admin.license.edition',\n                'admin.license.type',\n                'admin.license.key',\n                'Mattermost Enterprise Edition. Unlock enterprise features in this software through the purchase of a subscription from ',\n                'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.',\n            ],\n            schema: {\n                id: 'LicenseSettings',\n                component: LicenseSettings,\n            },\n        },\n    },\n    reporting: {\n        icon: 'fa-bar-chart',\n        sectionTitle: t('admin.sidebar.reporting'),\n        sectionTitleDefault: 'Reporting',\n        system_analytics: {\n            url: 'reporting/system_analytics',\n            title: t('admin.sidebar.siteStatistics'),\n            title_default: 'Site Statistics',\n            searchableStrings: [\n                'analytics.system.title',\n                'analytics.system.totalPosts',\n                'analytics.system.activeUsers',\n                'analytics.system.totalSessions',\n                'analytics.system.totalCommands',\n                'analytics.system.totalIncomingWebhooks',\n                'analytics.system.totalOutgoingWebhooks',\n                'analytics.system.totalWebsockets',\n                'analytics.system.totalMasterDbConnections',\n                'analytics.system.totalReadDbConnections',\n                'analytics.system.postTypes',\n                'analytics.system.channelTypes',\n                'analytics.system.totalUsers',\n                'analytics.system.totalTeams',\n                'analytics.system.totalChannels',\n                'analytics.system.dailyActiveUsers',\n                'analytics.system.monthlyActiveUsers',\n            ],\n            schema: {\n                id: 'SystemAnalytics',\n                component: SystemAnalytics,\n            },\n        },\n        team_statistics: {\n            url: 'reporting/team_statistics',\n            title: t('admin.sidebar.teamStatistics'),\n            title_default: 'Team Statistics',\n            searchableStrings: [\n                ['analytics.team.title', {team: ''}],\n                'analytics.system.info',\n                'analytics.team.totalPosts',\n                'analytics.team.activeUsers',\n                'analytics.team.totalUsers',\n                'analytics.team.publicChannels',\n                'analytics.team.privateGroups',\n                'analytics.team.recentUsers',\n                'analytics.team.newlyCreated',\n            ],\n            schema: {\n                id: 'TeamAnalytics',\n                component: TeamAnalytics,\n            },\n        },\n        server_logs: {\n            url: 'reporting/server_logs',\n            title: t('admin.sidebar.logs'),\n            title_default: 'Server Logs',\n            searchableStrings: [\n                'admin.logs.bannerDesc',\n                'admin.logs.title',\n            ],\n            schema: {\n                id: 'ServerLogs',\n                component: ServerLogs,\n            },\n        },\n    },\n    user_management: {\n        icon: 'fa-users',\n        sectionTitle: t('admin.sidebar.userManagement'),\n        sectionTitleDefault: 'User Management',\n        system_user_detail: {\n            url: 'user_management/user/:user_id',\n            schema: {\n                id: 'SystemUserDetail',\n                component: SystemUserDetail,\n            },\n        },\n        system_users: {\n            url: 'user_management/users',\n            title: t('admin.sidebar.users'),\n            title_default: 'Users',\n            searchableStrings: [\n                ['admin.system_users.title', {siteName: ''}],\n            ],\n            schema: {\n                id: 'SystemUsers',\n                component: SystemUsers,\n            },\n        },\n        group_detail: {\n            url: 'user_management/groups/:group_id',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'GroupDetail',\n                component: GroupDetails,\n            },\n        },\n        groups: {\n            url: 'user_management/groups',\n            title: t('admin.sidebar.groups'),\n            title_default: 'Groups',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'Groups',\n                component: GroupSettings,\n            },\n        },\n        team_detail: {\n            url: 'user_management/teams/:team_id',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'TeamDetail',\n                component: TeamDetails,\n            },\n        },\n        teams: {\n            url: 'user_management/teams',\n            title: t('admin.sidebar.teams'),\n            title_default: 'Teams',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'Teams',\n                component: TeamSettings,\n            },\n        },\n        channel_detail: {\n            url: 'user_management/channels/:channel_id',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'ChannelDetail',\n                component: ChannelDetails,\n            },\n        },\n        channel: {\n            url: 'user_management/channels',\n            title: t('admin.sidebar.channels'),\n            title_default: 'Channels',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'Channels',\n                component: ChannelSettings,\n            },\n        },\n        systemScheme: {\n            url: 'user_management/permissions/system_scheme',\n            isHidden: it.isnt(it.licensed),\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionSystemSchemeSettings,\n            },\n        },\n        teamSchemeDetail: {\n            url: 'user_management/permissions/team_override_scheme/:scheme_id',\n            isHidden: it.either(\n                it.isnt(it.licensed),\n                it.isnt(it.licensedForFeature('CustomPermissionsSchemes'))\n            ),\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionTeamSchemeSettings,\n            },\n        },\n        teamScheme: {\n            url: 'user_management/permissions/team_override_scheme',\n            isHidden: it.either(\n                it.isnt(it.licensed),\n                it.isnt(it.licensedForFeature('CustomPermissionsSchemes'))\n            ),\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionTeamSchemeSettings,\n            },\n        },\n        permissions: {\n            url: 'user_management/permissions/',\n            title: t('admin.sidebar.permissions'),\n            title_default: 'Permissions',\n            isHidden: it.isnt(it.licensed),\n            searchableStrings: [\n                'admin.permissions.documentationLinkText',\n                'admin.permissions.teamOverrideSchemesNoSchemes',\n                'admin.permissions.loadMoreSchemes',\n                'admin.permissions.introBanner',\n                'admin.permissions.systemSchemeBannerTitle',\n                'admin.permissions.systemSchemeBannerText',\n                'admin.permissions.systemSchemeBannerButton',\n                'admin.permissions.teamOverrideSchemesTitle',\n                'admin.permissions.teamOverrideSchemesBannerText',\n                'admin.permissions.teamOverrideSchemesNewButton',\n            ],\n            schema: {\n                id: 'PermissionSchemes',\n                component: PermissionSchemesSettings,\n            },\n        },\n    },\n    environment: {\n        icon: 'fa-server',\n        sectionTitle: t('admin.sidebar.environment'),\n        sectionTitleDefault: 'Environment',\n        web_server: {\n            url: 'environment/web_server',\n            title: t('admin.sidebar.webServer'),\n            title_default: 'Web Server',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.environment.webServer'),\n                name_default: 'Web Server',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.rate.noteDescription'),\n                        label_default: 'Changing properties in this section will require a server restart before taking effect.',\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.SiteURL',\n                        label: t('admin.service.siteURL'),\n                        label_default: 'Site URL:',\n                        help_text: t('admin.service.siteURLDescription'),\n                        help_text_default: 'The URL that users will use to access Mattermost. Standard ports, such as 80 and 443, can be omitted, but non-standard ports are required. For example: http://example.com:8065. This setting is required.\\n \\nMattermost may be hosted at a subpath. For example: http://example.com:8065/company/mattermost. A restart is required before the server will work correctly.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.service.siteURLExample'),\n                        placeholder_default: 'E.g.: \"http://example.com:8065\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'TestSiteURL',\n                        action: testSiteURL,\n                        label: t('admin.service.testSiteURL'),\n                        label_default: 'Test Live URL',\n                        loading: t('admin.service.testSiteURLTesting'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.service.testSiteURLFail'),\n                        error_message_default: 'Test unsuccessful: {error}',\n                        success_message: t('admin.service.testSiteURLSuccess'),\n                        success_message_default: 'Test successful. This is a valid URL.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.ListenAddress',\n                        label: t('admin.service.listenAddress'),\n                        label_default: 'Listen Address:',\n                        placeholder: t('admin.service.listenExample'),\n                        placeholder_default: 'E.g.: \":8065\"',\n                        help_text: t('admin.service.listenDescription'),\n                        help_text_default: 'The address and port to which to bind and listen. Specifying \":8065\" will bind to all network interfaces. Specifying \"127.0.0.1:8065\" will only bind to the network interface having that IP address. If you choose a port of a lower level (called \"system ports\" or \"well-known ports\", in the range of 0-1023), you must have permissions to bind to that port. On Linux you can use: \"sudo setcap cap_net_bind_service=+ep ./bin/mattermost\" to allow Mattermost to bind to well-known ports.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.Forward80To443',\n                        label: t('admin.service.forward80To443'),\n                        label_default: 'Forward port 80 to 443:',\n                        help_text: t('admin.service.forward80To443Description'),\n                        help_text_default: 'Forwards all insecure traffic from port 80 to secure port 443. Not recommended when using a proxy server.',\n                        disabled_help_text: t('admin.service.forward80To443Description.disabled'),\n                        disabled_help_text_default: 'Forwards all insecure traffic from port 80 to secure port 443. Not recommended when using a proxy server.\\n \\nThis setting cannot be enabled until your server is [listening](#ListenAddress) on port 443.',\n                        disabled_help_text_markdown: true,\n                        isDisabled: it.isnt(it.stateMatches('ServiceSettings.ListenAddress', /:443$/)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ServiceSettings.ConnectionSecurity',\n                        label: t('admin.connectionSecurityTitle'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_WEBSERVER,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.connectionSecurityNone'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.connectionSecurityTls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.TLSCertFile',\n                        label: t('admin.service.tlsCertFile'),\n                        label_default: 'TLS Certificate File:',\n                        help_text: t('admin.service.tlsCertFileDescription'),\n                        help_text_default: 'The certificate file to use.',\n                        isDisabled: it.stateIsTrue('ServiceSettings.UseLetsEncrypt'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.TLSKeyFile',\n                        label: t('admin.service.tlsKeyFile'),\n                        label_default: 'TLS Key File:',\n                        help_text: t('admin.service.tlsKeyFileDescription'),\n                        help_text_default: 'The private key file to use.',\n                        isDisabled: it.stateIsTrue('ServiceSettings.UseLetsEncrypt'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.UseLetsEncrypt',\n                        label: t('admin.service.useLetsEncrypt'),\n                        label_default: 'Use Let\\'s Encrypt:',\n                        help_text: t('admin.service.useLetsEncryptDescription'),\n                        help_text_default: 'Enable the automatic retrieval of certificates from Let\\'s Encrypt. The certificate will be retrieved when a client attempts to connect from a new domain. This will work with multiple domains.',\n                        disabled_help_text: t('admin.service.useLetsEncryptDescription.disabled'),\n                        disabled_help_text_default: 'Enable the automatic retrieval of certificates from Let\\'s Encrypt. The certificate will be retrieved when a client attempts to connect from a new domain. This will work with multiple domains.\\n \\nThis setting cannot be enabled unless the [Forward port 80 to 443](#Forward80To443) setting is set to true.',\n                        disabled_help_text_markdown: true,\n                        isDisabled: it.stateIsFalse('ServiceSettings.Forward80To443'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.LetsEncryptCertificateCacheFile',\n                        label: t('admin.service.letsEncryptCertificateCacheFile'),\n                        label_default: 'Let\\'s Encrypt Certificate Cache File:',\n                        help_text: t('admin.service.letsEncryptCertificateCacheFileDescription'),\n                        help_text_default: 'Certificates retrieved and other data about the Let\\'s Encrypt service will be stored in this file.',\n                        isDisabled: it.stateIsFalse('ServiceSettings.UseLetsEncrypt'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.ReadTimeout',\n                        label: t('admin.service.readTimeout'),\n                        label_default: 'Read Timeout:',\n                        help_text: t('admin.service.readTimeoutDescription'),\n                        help_text_default: 'Maximum time allowed from when the connection is accepted to when the request body is fully read.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.WriteTimeout',\n                        label: t('admin.service.writeTimeout'),\n                        label_default: 'Write Timeout:',\n                        help_text: t('admin.service.writeTimeoutDescription'),\n                        help_text_default: 'If using HTTP (insecure), this is the maximum time allowed from the end of reading the request headers until the response is written. If using HTTPS, it is the total time from when the connection is accepted until the response is written.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ServiceSettings.WebserverMode',\n                        label: t('admin.webserverModeTitle'),\n                        label_default: 'Webserver Mode:',\n                        help_text: DefinitionConstants.WEBSERVER_MODE_HELP_TEXT,\n                        options: [\n                            {\n                                value: 'gzip',\n                                display_name: t('admin.webserverModeGzip'),\n                                display_name_default: 'gzip',\n                            },\n                            {\n                                value: 'uncompressed',\n                                display_name: t('admin.webserverModeUncompressed'),\n                                display_name_default: 'Uncompressed',\n                            },\n                            {\n                                value: 'disabled',\n                                display_name: t('admin.webserverModeDisabled'),\n                                display_name_default: 'Disabled',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableInsecureOutgoingConnections',\n                        label: t('admin.service.insecureTlsTitle'),\n                        label_default: 'Enable Insecure Outgoing Connections: ',\n                        help_text: t('admin.service.insecureTlsDesc'),\n                        help_text_default: 'When true, any outgoing HTTPS requests will accept unverified, self-signed certificates. For example, outgoing webhooks to a server with a self-signed TLS certificate, using any domain, will be allowed. Note that this makes these connections susceptible to man-in-the-middle attacks.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: reloadConfig,\n                        key: 'ReloadConfigButton',\n                        label: t('admin.reload.button'),\n                        label_default: 'Reload Configuration From Disk',\n                        help_text: t('admin.reload.reloadDescription'),\n                        help_text_default: 'Deployments using multiple databases can switch from one master database to another without restarting the Mattermost server by updating \"config.json\" to the new desired configuration and using the {featureName} feature to load the new settings while the server is running. The administrator should then use the {recycleDatabaseConnections} feature to recycle the database connections based on the new settings.',\n                        help_text_values: {\n                            featureName: (\n                                <b>\n                                    <FormattedMessage\n                                        id='admin.reload.reloadDescription.featureName'\n                                        defaultMessage='Reload Configuration from Disk'\n                                    />\n                                </b>\n                            ),\n                            recycleDatabaseConnections: (\n                                <a href='../environment/database'>\n                                    <b>\n                                        <FormattedMessage\n                                            id='admin.reload.reloadDescription.recycleDatabaseConnections'\n                                            defaultMessage='Environment > Database > Recycle Database Connections'\n                                        />\n                                    </b>\n                                </a>\n                            ),\n                        },\n                        error_message: t('admin.reload.reloadFail'),\n                        error_message_default: 'Reload unsuccessful: {error}',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'PurgeButton',\n                        action: invalidateAllCaches,\n                        label: t('admin.purge.button'),\n                        label_default: 'Purge All Caches',\n                        help_text: t('admin.purge.purgeDescription'),\n                        help_text_default: 'This will purge all the in-memory caches for things like sessions, accounts, channels, etc. Deployments using High Availability will attempt to purge all the servers in the cluster.  Purging the caches may adversely impact performance.',\n                        error_message: t('admin.purge.purgeFail'),\n                        error_message_default: 'Purging unsuccessful: {error}',\n                    },\n                ],\n            },\n        },\n        database: {\n            url: 'environment/database',\n            title: t('admin.sidebar.database'),\n            title_default: 'Database',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            searchableStrings: [\n                'admin.database.title',\n                ['admin.recycle.recycleDescription', {featureName: '', reloadConfiguration: ''}],\n                'admin.recycle.recycleDescription.featureName',\n                'admin.recycle.recycleDescription.reloadConfiguration',\n                'admin.recycle.button',\n                'admin.sql.noteDescription',\n                'admin.sql.driverName',\n                'admin.sql.driverNameDescription',\n                'admin.sql.dataSource',\n                'admin.sql.dataSourceDescription',\n                'admin.sql.maxConnectionsTitle',\n                'admin.sql.maxConnectionsDescription',\n                'admin.sql.maxOpenTitle',\n                'admin.sql.maxOpenDescription',\n                'admin.sql.queryTimeoutTitle',\n                'admin.sql.queryTimeoutDescription',\n                'admin.sql.connMaxLifetimeTitle',\n                'admin.sql.connMaxLifetimeDescription',\n                'admin.sql.traceTitle',\n                'admin.sql.traceDescription',\n            ],\n            schema: {\n                id: 'DatabaseSettings',\n                component: DatabaseSettings,\n            },\n        },\n        elasticsearch: {\n            url: 'environment/elasticsearch',\n            title: t('admin.sidebar.elasticsearch'),\n            title_default: 'Elasticsearch',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('Elasticsearch')),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin')\n            ),\n            searchableStrings: [\n                'admin.elasticsearch.title',\n                'admin.elasticsearch.enableIndexingTitle',\n                ['admin.elasticsearch.enableIndexingDescription', {documentationLink: ''}],\n                'admin.elasticsearch.enableIndexingDescription.documentationLinkText',\n                'admin.elasticsearch.connectionUrlTitle',\n                ['admin.elasticsearch.connectionUrlDescription', {documentationLink: ''}],\n                'admin.elasticsearch.connectionUrlExample.documentationLinkText',\n                'admin.elasticsearch.skipTLSVerificationTitle',\n                'admin.elasticsearch.skipTLSVerificationDescription',\n                'admin.elasticsearch.usernameTitle',\n                'admin.elasticsearch.usernameDescription',\n                'admin.elasticsearch.passwordTitle',\n                'admin.elasticsearch.passwordDescription',\n                'admin.elasticsearch.sniffTitle',\n                'admin.elasticsearch.sniffDescription',\n                'admin.elasticsearch.testHelpText',\n                'admin.elasticsearch.elasticsearch_test_button',\n                'admin.elasticsearch.bulkIndexingTitle',\n                'admin.elasticsearch.createJob.help',\n                'admin.elasticsearch.purgeIndexesHelpText',\n                'admin.elasticsearch.purgeIndexesButton',\n                'admin.elasticsearch.purgeIndexesButton.label',\n                'admin.elasticsearch.enableSearchingTitle',\n                'admin.elasticsearch.enableSearchingDescription',\n            ],\n            schema: {\n                id: 'ElasticSearchSettings',\n                component: ElasticSearchSettings,\n            },\n        },\n        storage: {\n            url: 'environment/file_storage',\n            title: t('admin.sidebar.fileStorage'),\n            title_default: 'File Storage',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'FileSettings',\n                name: t('admin.environment.fileStorage'),\n                name_default: 'File Storage',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'FileSettings.DriverName',\n                        label: t('admin.image.storeTitle'),\n                        label_default: 'File Storage System:',\n                        help_text: t('admin.image.storeDescription'),\n                        help_text_default: 'Storage system where files and image attachments are saved.\\n \\nSelecting \"Amazon S3\" enables fields to enter your Amazon credentials and bucket details.\\n \\nSelecting \"Local File System\" enables the field to specify a local file directory.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: FILE_STORAGE_DRIVER_LOCAL,\n                                display_name: t('admin.image.storeLocal'),\n                                display_name_default: 'Local File System',\n                            },\n                            {\n                                value: FILE_STORAGE_DRIVER_S3,\n                                display_name: t('admin.image.storeAmazonS3'),\n                                display_name_default: 'Amazon S3',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.Directory',\n                        label: t('admin.image.localTitle'),\n                        label_default: 'Local Storage Directory:',\n                        help_text: t('admin.image.localDescription'),\n                        help_text_default: 'Directory to which files and images are written. If blank, defaults to ./data/.',\n                        placeholder: t('admin.image.localExample'),\n                        placeholder_default: 'E.g.: \"./data/\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_LOCAL)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'FileSettings.MaxFileSize',\n                        label: t('admin.image.maxFileSizeTitle'),\n                        label_default: 'Maximum File Size:',\n                        help_text: t('admin.image.maxFileSizeDescription'),\n                        help_text_default: 'Maximum file size for message attachments in megabytes. Caution: Verify server memory can support your setting choice. Large file sizes increase the risk of server crashes and failed uploads due to network interruptions.',\n                        placeholder: t('admin.image.maxFileSizeExample'),\n                        placeholder_default: '50',\n                        onConfigLoad: (configVal) => configVal / MEBIBYTE,\n                        onConfigSave: (displayVal) => displayVal * MEBIBYTE,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Bucket',\n                        label: t('admin.image.amazonS3BucketTitle'),\n                        label_default: 'Amazon S3 Bucket:',\n                        help_text: t('admin.image.amazonS3BucketDescription'),\n                        help_text_default: 'Name you selected for your S3 bucket in AWS.',\n                        placeholder: t('admin.image.amazonS3BucketExample'),\n                        placeholder_default: 'E.g.: \"mattermost-media\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Region',\n                        label: t('admin.image.amazonS3RegionTitle'),\n                        label_default: 'Amazon S3 Region:',\n                        help_text: t('admin.image.amazonS3RegionDescription'),\n                        help_text_default: 'AWS region you selected when creating your S3 bucket. If no region is set, Mattermost attempts to get the appropriate region from AWS, or sets it to \"us-east-1\" if none found.',\n                        placeholder: t('admin.image.amazonS3RegionExample'),\n                        placeholder_default: 'E.g.: \"us-east-1\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3AccessKeyId',\n                        label: t('admin.image.amazonS3IdTitle'),\n                        label_default: 'Amazon S3 Access Key ID:',\n                        help_text: t('admin.image.amazonS3IdDescription'),\n                        help_text_markdown: true,\n                        help_text_default: '(Optional) Only required if you do not want to authenticate to S3 using an [IAM role](!https://about.mattermost.com/default-iam-role). Enter the Access Key ID provided by your Amazon EC2 administrator.',\n                        placeholder: t('admin.image.amazonS3IdExample'),\n                        placeholder_default: 'E.g.: \"AKIADTOVBGERKLCBV\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Endpoint',\n                        label: t('admin.image.amazonS3EndpointTitle'),\n                        label_default: 'Amazon S3 Endpoint:',\n                        help_text: t('admin.image.amazonS3EndpointDescription'),\n                        help_text_default: 'Hostname of your S3 Compatible Storage provider. Defaults to \"s3.amazonaws.com\".',\n                        placeholder: t('admin.image.amazonS3EndpointExample'),\n                        placeholder_default: 'E.g.: \"s3.amazonaws.com\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3SecretAccessKey',\n                        label: t('admin.image.amazonS3SecretTitle'),\n                        label_default: 'Amazon S3 Secret Access Key:',\n                        help_text: t('admin.image.amazonS3SecretDescription'),\n                        help_text_default: '(Optional) The secret access key associated with your Amazon S3 Access Key ID.',\n                        placeholder: t('admin.image.amazonS3SecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3SSL',\n                        label: t('admin.image.amazonS3SSLTitle'),\n                        label_default: 'Enable Secure Amazon S3 Connections:',\n                        help_text: t('admin.image.amazonS3SSLDescription'),\n                        help_text_default: 'When false, allow insecure connections to Amazon S3. Defaults to secure connections only.',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3SSE',\n                        label: t('admin.image.amazonS3SSETitle'),\n                        label_default: 'Enable Server-Side Encryption for Amazon S3:',\n                        help_text: t('admin.image.amazonS3SSEDescription'),\n                        help_text_markdown: true,\n                        help_text_default: 'When true, encrypt files in Amazon S3 using server-side encryption with Amazon S3-managed keys. See [documentation](!https://about.mattermost.com/default-server-side-encryption) to learn more.',\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3Trace',\n                        label: t('admin.image.amazonS3TraceTitle'),\n                        label_default: 'Enable Amazon S3 Debugging:',\n                        help_text: t('admin.image.amazonS3TraceDescription'),\n                        help_text_default: '(Development Mode) When true, log additional debugging information to the system logs.',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: testS3Connection,\n                        key: 'TestS3Connection',\n                        label: t('admin.s3.connectionS3Test'),\n                        label_default: 'Test Connection',\n                        loading: t('admin.s3.testing'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.s3.s3Fail'),\n                        error_message_default: 'Connection unsuccessful: {error}',\n                        success_message: t('admin.s3.s3Success'),\n                        success_message_default: 'Connection was successful',\n                    },\n                ],\n            },\n        },\n        image_proxy: {\n            url: 'environment/image_proxy',\n            title: t('admin.sidebar.imageProxy'),\n            title_default: 'Image Proxy',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ImageProxy',\n                name: t('admin.environment.imageProxy'),\n                name_default: 'Image Proxy',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ImageProxySettings.Enable',\n                        label: t('admin.image.enableProxy'),\n                        label_default: 'Enable Image Proxy:',\n                        help_text: t('admin.image.enableProxyDescription'),\n                        help_text_default: 'When true, enables an image proxy for loading all Markdown images.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ImageProxySettings.ImageProxyType',\n                        label: t('admin.image.proxyType'),\n                        label_default: 'Image Proxy Type:',\n                        help_text: t('admin.image.proxyTypeDescription'),\n                        help_text_default: 'Configure an image proxy to load all Markdown images through a proxy. The image proxy prevents users from making insecure image requests, provides caching for increased performance, and automates image adjustments such as resizing. See [documentation](!https://about.mattermost.com/default-image-proxy-documentation) to learn more.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'atmos/camo',\n                                display_name: t('atmos/camo'),\n                                display_name_default: 'atmos/camo',\n                            },\n                            {\n                                value: 'local',\n                                display_name: t('local'),\n                                display_name_default: 'local',\n                            },\n                        ],\n                        isDisabled: it.stateIsFalse('ImageProxySettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ImageProxySettings.RemoteImageProxyURL',\n                        label: t('admin.image.proxyURL'),\n                        label_default: 'Remote Image Proxy URL:',\n                        help_text: t('admin.image.proxyURLDescription'),\n                        help_text_default: 'URL of your remote image proxy server.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('ImageProxySettings.Enable'),\n                            it.stateEquals('ImageProxySettings.ImageProxyType', 'local'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ImageProxySettings.RemoteImageProxyOptions',\n                        label: t('admin.image.proxyOptions'),\n                        label_default: 'Remote Image Proxy Options:',\n                        help_text: t('admin.image.proxyOptionsDescription'),\n                        help_text_default: 'Additional options such as the URL signing key. Refer to your image proxy documentation to learn more about what options are supported.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('ImageProxySettings.Enable'),\n                            it.stateEquals('ImageProxySettings.ImageProxyType', 'local'),\n                        ),\n                    },\n                ],\n            },\n        },\n        smtp: {\n            url: 'environment/smtp',\n            title: t('admin.sidebar.smtp'),\n            title_default: 'SMTP',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'SMTP',\n                name: t('admin.environment.smtp'),\n                name_default: 'SMTP',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPServer',\n                        label: t('admin.environment.smtp.smtpServer.title'),\n                        label_default: 'SMTP Server:',\n                        placeholder: t('admin.environment.smtp.smtpServer.placeholder'),\n                        placeholder_default: 'Ex: \"smtp.yourcompany.com\", \"email-smtp.us-east-1.amazonaws.com\"',\n                        help_text: t('admin.environment.smtp.smtpServer.description'),\n                        help_text_default: 'Location of SMTP email server.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPPort',\n                        label: t('admin.environment.smtp.smtpPort.title'),\n                        label_default: 'SMTP Server Port:',\n                        placeholder: t('admin.environment.smtp.smtpPort.placeholder'),\n                        placeholder_default: 'Ex: \"25\", \"465\", \"587\"',\n                        help_text: t('admin.environment.smtp.smtpPort.description'),\n                        help_text_default: 'Port of SMTP email server.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSMTPAuth',\n                        label: t('admin.environment.smtp.smtpAuth.title'),\n                        label_default: 'Enable SMTP Authentication:',\n                        help_text: t('admin.environment.smtp.smtpAuth.description'),\n                        help_text_default: 'When true, SMTP Authentication is enabled.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPUsername',\n                        label: t('admin.environment.smtp.smtpUsername.title'),\n                        label_default: 'SMTP Server Username:',\n                        placeholder: t('admin.environment.smtp.smtpUsername.placeholder'),\n                        placeholder_default: 'Ex: \"admin@yourcompany.com\", \"AKIADTOVBGERKLCBV\"',\n                        help_text: t('admin.environment.smtp.smtpUsername.description'),\n                        help_text_default: 'Obtain this credential from administrator setting up your email server.',\n                        isDisabled: it.stateIsFalse('EmailSettings.EnableSMTPAuth'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPPassword',\n                        label: t('admin.environment.smtp.smtpPassword.title'),\n                        label_default: 'SMTP Server Password:',\n                        placeholder: t('admin.environment.smtp.smtpPassword.placeholder'),\n                        placeholder_default: 'Ex: \"yourpassword\", \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        help_text: t('admin.environment.smtp.smtpPassword.description'),\n                        help_text_default: 'Obtain this credential from administrator setting up your email server.',\n                        isDisabled: it.stateIsFalse('EmailSettings.EnableSMTPAuth'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.ConnectionSecurity',\n                        label: t('admin.environment.smtp.connectionSecurity.title'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_EMAIL,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.none'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.tls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                            {\n                                value: 'STARTTLS',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.starttls'),\n                                display_name_default: 'STARTTLS',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: testSmtp,\n                        key: 'TestSmtpConnection',\n                        label: t('admin.environment.smtp.connectionSmtpTest'),\n                        label_default: 'Test Connection',\n                        loading: t('admin.environment.smtp.testing'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.environment.smtp.smtpFail'),\n                        error_message_default: 'Connection unsuccessful: {error}',\n                        success_message: t('admin.environment.smtp.smtpSuccess'),\n                        success_message_default: 'No errors were reported while sending an email. Please check your inbox to make sure.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.SkipServerCertificateVerification',\n                        label: t('admin.environment.smtp.skipServerCertificateVerification.title'),\n                        label_default: 'Skip Server Certificate Verification:',\n                        help_text: t('admin.environment.smtp.skipServerCertificateVerification.description'),\n                        help_text_default: 'When true, Mattermost will not verify the email server certificate.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableSecurityFixAlert',\n                        label: t('admin.environment.smtp.enableSecurityFixAlert.title'),\n                        label_default: 'Enable Security Alerts:',\n                        help_text: t('admin.environment.smtp.enableSecurityFixAlert.description'),\n                        help_text_default: 'When true, System Administrators are notified by email if a relevant security fix alert has been announced in the last 12 hours. Requires email to be enabled.',\n                    },\n                ],\n            },\n        },\n        push_notification_server: {\n            url: 'environment/push_notification_server',\n            title: t('admin.sidebar.pushNotificationServer'),\n            title_default: 'Push Notification Server',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            searchableStrings: [\n                'admin.environment.pushNotificationServer',\n                'admin.email.pushTitle',\n                'admin.email.pushServerTitle',\n                'admin.email.pushContentTitle',\n                'admin.email.pushContentDesc',\n            ],\n            schema: {\n                id: 'PushNotificationsSettings',\n                component: PushNotificationsSettings,\n            },\n        },\n        high_availability: {\n            url: 'environment/high_availability',\n            title: t('admin.sidebar.highAvailability'),\n            title_default: 'High Availability',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('Cluster')),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin')\n            ),\n            searchableStrings: [\n                'admin.advance.cluster',\n                'admin.cluster.noteDescription',\n                'admin.cluster.enableTitle',\n                'admin.cluster.enableDescription',\n                'admin.cluster.ClusterName',\n                'admin.cluster.ClusterNameDesc',\n                'admin.cluster.OverrideHostname',\n                'admin.cluster.OverrideHostnameDesc',\n                'admin.cluster.UseIpAddress',\n                'admin.cluster.UseIpAddressDesc',\n                'admin.cluster.UseExperimentalGossip',\n                'admin.cluster.UseExperimentalGossipDesc',\n                'admin.cluster.GossipPort',\n                'admin.cluster.GossipPortDesc',\n                'admin.cluster.StreamingPort',\n                'admin.cluster.StreamingPortDesc',\n            ],\n            schema: {\n                id: 'ClusterSettings',\n                component: ClusterSettings,\n            },\n        },\n        rate_limiting: {\n            url: 'environment/rate_limiting',\n            title: t('admin.sidebar.rateLimiting'),\n            title_default: 'Rate Limiting',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.rate.title'),\n                name_default: 'Rate Limiting',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.rate.noteDescription'),\n                        label_default: 'Changing properties other than Site URL in this section will require a server restart before taking effect.',\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.Enable',\n                        label: t('admin.rate.enableLimiterTitle'),\n                        label_default: 'Enable Rate Limiting:',\n                        help_text: t('admin.rate.enableLimiterDescription'),\n                        help_text_default: 'When true, APIs are throttled at rates specified below.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.PerSec',\n                        label: t('admin.rate.queriesTitle'),\n                        label_default: 'Maximum Queries per Second:',\n                        placeholder: t('admin.rate.queriesExample'),\n                        placeholder_default: 'E.g.: \"10\"',\n                        help_text: t('admin.rate.queriesDescription'),\n                        help_text_default: 'Throttles API at this number of requests per second.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.MaxBurst',\n                        label: t('admin.rate.maxBurst'),\n                        label_default: 'Maximum Burst Size:',\n                        placeholder: t('admin.rate.maxBurstExample'),\n                        placeholder_default: 'E.g.: \"100\"',\n                        help_text: t('admin.rate.maxBurstDescription'),\n                        help_text_default: 'Maximum number of requests allowed beyond the per second query limit.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.MemoryStoreSize',\n                        label: t('admin.rate.memoryTitle'),\n                        label_default: 'Memory Store Size:',\n                        placeholder: t('admin.rate.memoryExample'),\n                        placeholder_default: 'E.g.: \"10000\"',\n                        help_text: t('admin.rate.memoryDescription'),\n                        help_text_default: 'Maximum number of users sessions connected to the system as determined by \"Vary rate limit by remote address\" and \"Vary rate limit by HTTP header\".',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.VaryByRemoteAddr',\n                        label: t('admin.rate.remoteTitle'),\n                        label_default: 'Vary rate limit by remote address:',\n                        help_text: t('admin.rate.remoteDescription'),\n                        help_text_default: 'When true, rate limit API access by IP address.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.VaryByUser',\n                        label: t('admin.rate.varyByUser'),\n                        label_default: 'Vary rate limit by user:',\n                        help_text: t('admin.rate.varyByUserDescription'),\n                        help_text_default: 'When true, rate limit API access by user athentication token.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'RateLimitSettings.VaryByHeader',\n                        label: t('admin.rate.httpHeaderTitle'),\n                        label_default: 'Vary rate limit by HTTP header:',\n                        placeholder: t('admin.rate.httpHeaderExample'),\n                        placeholder_default: 'E.g.: \"X-Real-IP\", \"X-Forwarded-For\"',\n                        help_text: t('admin.rate.httpHeaderDescription'),\n                        help_text_default: 'When filled in, vary rate limiting by HTTP header field specified (e.g. when configuring NGINX set to \"X-Real-IP\", when configuring AmazonELB set to \"X-Forwarded-For\").',\n                        isDisabled: it.either(\n                            it.stateEquals('RateLimitSettings.Enable', false),\n                            it.stateEquals('RateLimitSettings.VaryByRemoteAddr', true),\n                        ),\n                    },\n                ],\n            },\n        },\n        logging: {\n            url: 'environment/logging',\n            title: t('admin.sidebar.logging'),\n            title_default: 'Logging',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'LogSettings',\n                name: t('admin.general.log'),\n                name_default: 'Logging',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableConsole',\n                        label: t('admin.log.consoleTitle'),\n                        label_default: 'Output logs to console: ',\n                        help_text: t('admin.log.consoleDescription'),\n                        help_text_default: 'Typically set to false in production. Developers may set this field to true to output log messages to console based on the console level option.  If true, server writes messages to the standard output stream (stdout). Changing this setting requires a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LogSettings.ConsoleLevel',\n                        label: t('admin.log.levelTitle'),\n                        label_default: 'Console Log Level:',\n                        help_text: t('admin.log.levelDescription'),\n                        help_text_default: 'This setting determines the level of detail at which log events are written to the console. ERROR: Outputs only error messages. INFO: Outputs error messages and information around startup and initialization. DEBUG: Prints high detail for developers working on debugging issues.',\n                        options: DefinitionConstants.LOG_LEVEL_OPTIONS,\n                        isDisabled: it.stateIsFalse('LogSettings.EnableConsole'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.ConsoleJson',\n                        label: t('admin.log.consoleJsonTitle'),\n                        label_default: 'Output console logs as JSON:',\n                        help_text: t('admin.log.jsonDescription'),\n                        help_text_default: 'When true, logged events are written in a machine readable JSON format. Otherwise they are printed as plain text. Changing this setting requires a server restart before taking effect.',\n                        isDisabled: it.stateIsFalse('LogSettings.EnableConsole'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableFile',\n                        label: t('admin.log.fileTitle'),\n                        label_default: 'Output logs to file: ',\n                        help_text: t('admin.log.fileDescription'),\n                        help_text_default: 'Typically set to true in production. When true, logged events are written to the mattermost.log file in the directory specified in the File Log Directory field. The logs are rotated at 10,000 lines and archived to a file in the same directory, and given a name with a datestamp and serial number. For example, mattermost.2017-03-31.001. Changing this setting requires a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LogSettings.FileLevel',\n                        label: t('admin.log.fileLevelTitle'),\n                        label_default: 'File Log Level:',\n                        help_text: t('admin.log.fileLevelDescription'),\n                        help_text_default: 'This setting determines the level of detail at which log events are written to the log file. ERROR: Outputs only error messages. INFO: Outputs error messages and information around startup and initialization. DEBUG: Prints high detail for developers working on debugging issues.',\n                        options: DefinitionConstants.LOG_LEVEL_OPTIONS,\n                        isDisabled: it.stateIsFalse('LogSettings.EnableFile'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.FileJson',\n                        label: t('admin.log.fileJsonTitle'),\n                        label_default: 'Output file logs as JSON:',\n                        help_text: t('admin.log.jsonDescription'),\n                        help_text_default: 'When true, logged events are written in a machine readable JSON format. Otherwise they are printed as plain text. Changing this setting requires a server restart before taking effect.',\n                        isDisabled: it.stateIsFalse('LogSettings.EnableFile'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LogSettings.FileLocation',\n                        label: t('admin.log.locationTitle'),\n                        label_default: 'File Log Directory:',\n                        help_text: t('admin.log.locationDescription'),\n                        help_text_default: 'The location of the log files. If blank, they are stored in the ./logs directory. The path that you set must exist and Mattermost must have write permissions in it. Changing this setting requires a server restart before taking effect.',\n                        placeholder: t('admin.log.locationPlaceholder'),\n                        placeholder_default: 'Enter your file location',\n                        isDisabled: it.stateIsFalse('LogSettings.EnableFile'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableWebhookDebugging',\n                        label: t('admin.log.enableWebhookDebugging'),\n                        label_default: 'Enable Webhook Debugging:',\n                        help_text: t('admin.log.enableWebhookDebuggingDescription'),\n                        help_text_default: 'When true, sends webhook debug messages to the server logs. To also output the request body of incoming webhooks, set {boldedLogLevel} to \"DEBUG\".',\n                        help_text_values: {\n                            boldedLogLevel: (\n                                <strong>\n                                    <FormattedMessage\n                                        id='admin.log.logLevel'\n                                        defaultMessage='Log Level'\n                                    />\n                                </strong>\n                            ),\n                        },\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableDiagnostics',\n                        label: t('admin.log.enableDiagnostics'),\n                        label_default: 'Enable Diagnostics and Error Reporting:',\n                        help_text: t('admin.log.enableDiagnosticsDescription'),\n                        help_text_default: 'Enable this feature to improve the quality and performance of Mattermost by sending error reporting and diagnostic information to Mattermost, Inc. Read our [privacy policy](!https://about.mattermost.com/default-privacy-policy/) to learn more.',\n                        help_text_markdown: true,\n                        onConfigSave: (displayVal, previousVal) => {\n                            if (previousVal && previousVal !== displayVal) {\n                                trackEvent('ui', 'diagnostics_disabled');\n                            }\n                            return displayVal;\n                        },\n                    },\n                ],\n            },\n        },\n        session_lengths: {\n            url: 'environment/session_lengths',\n            title: t('admin.sidebar.sessionLengths'),\n            title_default: 'Session Lengths',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'SessionLengths',\n                name: t('admin.environment.sessionLengths'),\n                name_default: 'Session Lengths',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.SessionLengthWebInDays',\n                        label: t('admin.service.webSessionDays'),\n                        label_default: 'Session Length AD/LDAP and Email (days):',\n                        help_text: t('admin.service.webSessionDaysDesc'),\n                        help_text_default: 'The number of days from the last time a user entered their credentials to the expiry of the users session. After changing this setting, the new session length will take effect after the next time the user enters their credentials.',\n                        placeholder: t('admin.service.sessionDaysEx'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.SessionLengthMobileInDays',\n                        label: t('admin.service.mobileSessionDays'),\n                        label_default: 'Session Length Mobile (days):',\n                        help_text: t('admin.service.mobileSessionDaysDesc'),\n                        help_text_default: 'The number of days from the last time a user entered their credentials to the expiry of the users session. After changing this setting, the new session length will take effect after the next time the user enters their credentials.',\n                        placeholder: t('admin.service.sessionDaysEx'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.SessionLengthSSOInDays',\n                        label: t('admin.service.ssoSessionDays'),\n                        label_default: 'Session Length SSO (days):',\n                        help_text: t('admin.service.ssoSessionDaysDesc'),\n                        help_text_default: 'The number of days from the last time a user entered their credentials to the expiry of the users session. If the authentication method is SAML or GitLab, the user may automatically be logged back in to Mattermost if they are already logged in to SAML or GitLab. After changing this setting, the setting will take effect after the next time the user enters their credentials.',\n                        placeholder: t('admin.service.sessionDaysEx'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.SessionCacheInMinutes',\n                        label: t('admin.service.sessionCache'),\n                        label_default: 'Session Cache (minutes):',\n                        help_text: t('admin.service.sessionCacheDesc'),\n                        help_text_default: 'The number of minutes to cache a session in memory.',\n                        placeholder: t('admin.service.sessionDaysEx'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.SessionIdleTimeoutInMinutes',\n                        label: t('admin.service.sessionIdleTimeout'),\n                        label_default: 'Session Idle Timeout (minutes):',\n                        help_text: t('admin.service.sessionIdleTimeoutDesc'),\n                        help_text_default: 'The number of minutes from the last time a user was active on the system to the expiry of the user\\'s session. Once expired, the user will need to log in to continue. Minimum is 5 minutes, and 0 is unlimited.\\n \\nApplies to the desktop app and browsers. For mobile apps, use an EMM provider to lock the app when not in use. In High Availability mode, enable IP hash load balancing for reliable timeout measurement.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.service.sessionIdleTimeoutEx'),\n                        placeholder_default: 'E.g.: \"60\"',\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                        onConfigSave: (value) => {\n                            if (value !== 0 && value < MINIMUM_IDLE_TIMEOUT) {\n                                return MINIMUM_IDLE_TIMEOUT;\n                            }\n                            return value;\n                        },\n                    },\n                ],\n            },\n        },\n        metrics: {\n            url: 'environment/performance_monitoring',\n            title: t('admin.sidebar.metrics'),\n            title_default: 'Performance Monitoring',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('Metrics')),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin')\n            ),\n            schema: {\n                id: 'MetricsSettings',\n                name: t('admin.advance.metrics'),\n                name_default: 'Performance Monitoring',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'MetricsSettings.Enable',\n                        label: t('admin.metrics.enableTitle'),\n                        label_default: 'Enable Performance Monitoring:',\n                        help_text: t('admin.metrics.enableDescription'),\n                        help_text_default: 'When true, Mattermost will enable performance monitoring collection and profiling. Please see [documentation](!http://docs.mattermost.com/deployment/metrics.html) to learn more about configuring performance monitoring for Mattermost.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'MetricsSettings.ListenAddress',\n                        label: t('admin.metrics.listenAddressTitle'),\n                        label_default: 'Listen Address:',\n                        placeholder: t('admin.metrics.listenAddressEx'),\n                        placeholder_default: 'E.g.: \":8067\"',\n                        help_text: t('admin.metrics.listenAddressDesc'),\n                        help_text_default: 'The address the server will listen on to expose performance metrics.',\n                    },\n                ],\n            },\n        },\n        developer: {\n            url: 'environment/developer',\n            title: t('admin.sidebar.developer'),\n            title_default: 'Developer',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.developer.title'),\n                name_default: 'Developer Settings',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableTesting',\n                        label: t('admin.service.testingTitle'),\n                        label_default: 'Enable Testing Commands:',\n                        help_text: t('admin.service.testingDescription'),\n                        help_text_default: 'When true, /test slash command is enabled to load test accounts, data and text formatting. Changing this requires a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableDeveloper',\n                        label: t('admin.service.developerTitle'),\n                        label_default: 'Enable Developer Mode: ',\n                        help_text: t('admin.service.developerDesc'),\n                        help_text_default: 'When true, JavaScript errors are shown in a purple bar at the top of the user interface. Not recommended for use in production.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.AllowedUntrustedInternalConnections',\n                        label: t('admin.service.internalConnectionsTitle'),\n                        label_default: 'Allow untrusted internal connections to: ',\n                        placeholder: t('admin.service.internalConnectionsEx'),\n                        placeholder_default: 'webhooks.internal.example.com 127.0.0.1 10.0.16.0/28',\n                        help_text: t('admin.service.internalConnectionsDesc'),\n                        help_text_default: 'A whitelist of local network addresses that can be requested by the Mattermost server on behalf of a client. Care should be used when configuring this setting to prevent unintended access to your local network. See [documentation](!https://mattermost.com/pl/default-allow-untrusted-internal-connections) to learn more.',\n                        help_text_markdown: true,\n                    },\n                ],\n            },\n        },\n    },\n    site: {\n        icon: 'fa-cogs',\n        sectionTitle: t('admin.sidebar.site'),\n        sectionTitleDefault: 'Site Configuration',\n        customization: {\n            url: 'site_config/customization',\n            title: t('admin.sidebar.customization'),\n            title_default: 'Customization',\n            schema: {\n                id: 'Customization',\n                name: t('admin.site.customization'),\n                name_default: 'Customization',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.SiteName',\n                        label: t('admin.team.siteNameTitle'),\n                        label_default: 'Site Name:',\n                        help_text: t('admin.team.siteNameDescription'),\n                        help_text_default: 'Name of service shown in login screens and UI. When not specified, it defaults to \"Mattermost\".',\n                        placeholder: t('admin.team.siteNameExample'),\n                        placeholder_default: 'E.g.: \"Mattermost\"',\n                        max_length: Constants.MAX_SITENAME_LENGTH,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.CustomDescriptionText',\n                        label: t('admin.team.brandDescriptionTitle'),\n                        label_default: 'Site Description: ',\n                        help_text: t('admin.team.brandDescriptionHelp'),\n                        help_text_default: 'Description of service shown in login screens and UI. When not specified, \"All team communication in one place, searchable and accessible anywhere\" is displayed.',\n                        placeholder: t('web.root.signup_info'),\n                        placeholder_default: 'All team communication in one place, searchable and accessible anywhere',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableCustomBrand',\n                        label: t('admin.team.brandTitle'),\n                        label_default: 'Enable Custom Branding: ',\n                        help_text: t('admin.team.brandDesc'),\n                        help_text_default: 'Enable custom branding to show an image of your choice, uploaded below, and some help text, written below, on the login page.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: BrandImageSetting,\n                        isDisabled: it.stateIsFalse('TeamSettings.EnableCustomBrand'),\n                        key: 'CustomBrandImage',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LONG_TEXT,\n                        key: 'TeamSettings.CustomBrandText',\n                        label: t('admin.team.brandTextTitle'),\n                        label_default: 'Custom Brand Text:',\n                        help_text: t('admin.team.brandTextDescription'),\n                        help_text_default: 'Text that will appear below your custom brand image on your login screen. Supports Markdown-formatted text. Maximum 500 characters allowed.',\n                        isDisabled: it.stateIsFalse('TeamSettings.EnableCustomBrand'),\n                        max_length: Constants.MAX_CUSTOM_BRAND_TEXT_LENGTH,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.HelpLink',\n                        label: t('admin.support.helpTitle'),\n                        label_default: 'Help Link:',\n                        help_text: t('admin.support.helpDesc'),\n                        help_text_default: 'The URL for the Help link on the Mattermost login page, sign-up pages, and Main Menu. If this field is empty, the Help link is hidden from users.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.SupportEmail',\n                        label: t('admin.support.emailTitle'),\n                        label_default: 'Support Email:',\n                        help_text: t('admin.support.emailHelp'),\n                        help_text_default: 'Email address displayed on email notifications and during tutorial for end users to ask support questions.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.TermsOfServiceLink',\n                        label: t('admin.support.termsTitle'),\n                        label_default: 'Terms of Service Link:',\n                        help_text: t('admin.support.termsDesc'),\n                        help_text_default: 'Link to the terms under which users may use your online service. By default, this includes the \"Mattermost Conditions of Use (End Users)\" explaining the terms under which Mattermost software is provided to end users. If you change the default link to add your own terms for using the service you provide, your new terms must include a link to the default terms so end users are aware of the Mattermost Conditions of Use (End User) for Mattermost software.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.PrivacyPolicyLink',\n                        label: t('admin.support.privacyTitle'),\n                        label_default: 'Privacy Policy Link:',\n                        help_text: t('admin.support.privacyDesc'),\n                        help_text_default: 'The URL for the Privacy link on the login and sign-up pages. If this field is empty, the Privacy link is hidden from users.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.AboutLink',\n                        label: t('admin.support.aboutTitle'),\n                        label_default: 'About Link:',\n                        help_text: t('admin.support.aboutDesc'),\n                        help_text_default: 'The URL for the About link on the Mattermost login and sign-up pages. If this field is empty, the About link is hidden from users.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.ReportAProblemLink',\n                        label: t('admin.support.problemTitle'),\n                        label_default: 'Report a Problem Link:',\n                        help_text: t('admin.support.problemDesc'),\n                        help_text_default: 'The URL for the Report a Problem link in the Main Menu. If this field is empty, the link is removed from the Main Menu.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.AppDownloadLink',\n                        label: t('admin.customization.appDownloadLinkTitle'),\n                        label_default: 'Mattermost Apps Download Page Link:',\n                        help_text: t('admin.customization.appDownloadLinkDesc'),\n                        help_text_default: 'Add a link to a download page for the Mattermost apps. When a link is present, an option to \"Download Mattermost Apps\" will be added in the Main Menu so users can find the download page. Leave this field blank to hide the option from the Main Menu.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.AndroidAppDownloadLink',\n                        label: t('admin.customization.androidAppDownloadLinkTitle'),\n                        label_default: 'Android App Download Link:',\n                        help_text: t('admin.customization.androidAppDownloadLinkDesc'),\n                        help_text_default: 'Add a link to download the Android app. Users who access the site on a mobile web browser will be prompted with a page giving them the option to download the app. Leave this field blank to prevent the page from appearing.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.IosAppDownloadLink',\n                        label: t('admin.customization.iosAppDownloadLinkTitle'),\n                        label_default: 'iOS App Download Link:',\n                        help_text: t('admin.customization.iosAppDownloadLinkDesc'),\n                        help_text_default: 'Add a link to download the iOS app. Users who access the site on a mobile web browser will be prompted with a page giving them the option to download the app. Leave this field blank to prevent the page from appearing.',\n                    },\n                ],\n            },\n        },\n        localization: {\n            url: 'site_config/localization',\n            title: t('admin.sidebar.localization'),\n            title_default: 'Localization',\n            schema: {\n                id: 'LocalizationSettings',\n                name: t('admin.site.localization'),\n                name_default: 'Localization',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.DefaultServerLocale',\n                        label: t('admin.general.localization.serverLocaleTitle'),\n                        label_default: 'Default Server Language:',\n                        help_text: t('admin.general.localization.serverLocaleDescription'),\n                        help_text_default: 'Default language for system messages. Changing this will require a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.DefaultClientLocale',\n                        label: t('admin.general.localization.clientLocaleTitle'),\n                        label_default: 'Default Client Language:',\n                        help_text: t('admin.general.localization.clientLocaleDescription'),\n                        help_text_default: 'Default language for newly created users and pages where the user hasn\\'t logged in.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.AvailableLocales',\n                        label: t('admin.general.localization.availableLocalesTitle'),\n                        label_default: 'Available Languages:',\n                        help_text: t('admin.general.localization.availableLocalesDescription'),\n                        help_text_markdown: true,\n                        help_text_default: 'Set which languages are available for users in Account Settings (leave this field blank to have all supported languages available). If you\\'re manually adding new languages, the **Default Client Language** must be added before saving this setting.\\n \\nWould like to help with translations? Join the [Mattermost Translation Server](!http://translate.mattermost.com/) to contribute.',\n                        multiple: true,\n                        no_result: t('admin.general.localization.availableLocalesNoResults'),\n                        no_result_default: 'No results found',\n                        not_present: t('admin.general.localization.availableLocalesNotPresent'),\n                        not_present_default: 'The default client language must be included in the available list',\n                    },\n                ],\n            },\n        },\n        users_and_teams: {\n            url: 'site_config/users_and_teams',\n            title: t('admin.sidebar.usersAndTeams'),\n            title_default: 'Users and Teams',\n            schema: {\n                id: 'UserAndTeamsSettings',\n                name: t('admin.site.usersAndTeams'),\n                name_default: 'Users and Teams',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'TeamSettings.EnableTeamCreation',\n                        label: t('admin.team.teamCreationTitle'),\n                        label_default: 'Enable Team Creation: ',\n                        help_text: t('admin.team.teamCreationDescription'),\n                        help_text_default: 'When false, only System Administrators can create teams.',\n                        permissions_mapping_name: 'enableTeamCreation',\n                        isHidden: it.licensed,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.MaxUsersPerTeam',\n                        label: t('admin.team.maxUsersTitle'),\n                        label_default: 'Max Users Per Team:',\n                        help_text: t('admin.team.maxUsersDescription'),\n                        help_text_default: 'Maximum total number of users per team, including both active and inactive users.',\n                        placeholder: t('admin.team.maxUsersExample'),\n                        placeholder_default: 'E.g.: \"25\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.MaxChannelsPerTeam',\n                        label: t('admin.team.maxChannelsTitle'),\n                        label_default: 'Max Channels Per Team:',\n                        help_text: t('admin.team.maxChannelsDescription'),\n                        help_text_default: 'Maximum total number of channels per team, including both active and archived channels.',\n                        placeholder: t('admin.team.maxChannelsExample'),\n                        placeholder_default: 'E.g.: \"100\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'TeamSettings.RestrictDirectMessage',\n                        label: t('admin.team.restrictDirectMessage'),\n                        label_default: 'Enable users to open Direct Message channels with:',\n                        help_text: t('admin.team.restrictDirectMessageDesc'),\n                        help_text_default: '\"Any user on the Mattermost server\" enables users to open a Direct Message channel with any user on the server, even if they are not on any teams together. \"Any member of the team\" limits the ability in the Direct Messages \"More\" menu to only open Direct Message channels with users who are in the same team.\\n \\nNote: This setting only affects the UI, not permissions on the server.',\n                        options: [\n                            {\n                                value: 'any',\n                                display_name: t('admin.team.restrict_direct_message_any'),\n                                display_name_default: 'Any user on the Mattermost server',\n                            },\n                            {\n                                value: 'team',\n                                display_name: t('admin.team.restrict_direct_message_team'),\n                                display_name_default: 'Any member of the team',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'TeamSettings.TeammateNameDisplay',\n                        label: t('admin.team.teammateNameDisplay'),\n                        label_default: 'Teammate Name Display:',\n                        help_text: t('admin.team.teammateNameDisplayDesc'),\n                        help_text_default: 'Set how to display users\\' names in posts and the Direct Messages list.',\n                        options: [\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_USERNAME,\n                                display_name: t('admin.team.showUsername'),\n                                display_name_default: 'Show username (default)',\n                            },\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_NICKNAME_FULLNAME,\n                                display_name: t('admin.team.showNickname'),\n                                display_name_default: 'Show nickname if one exists, otherwise show first and last name',\n                            },\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_FULLNAME,\n                                display_name: t('admin.team.showFullname'),\n                                display_name_default: 'Show first and last name',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.LockTeammateNameDisplay',\n                        label: t('admin.lockTeammateNameDisplay'),\n                        label_default: 'Lock Teammate Name Display for all users: ',\n                        help_text: t('admin.lockTeammateNameDisplayHelpText'),\n                        help_text_default: 'When true, disables users\\' ability to change settings under Main Menu > Account Settings > Display > Teammate Name Display.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'TeamSettings.EditOthersPosts',\n                        label: t('admin.team.editOthersPostsTitle'),\n                        label_default: 'Allow Team Administrators to edit others posts:',\n                        help_text: t('admin.team.editOthersPostsDesc'),\n                        help_text_default: 'When true, Team Administrators and System Administrators can edit other user\\'s posts.  When false, only System Administrators can edit other user\\'s posts.',\n                        permissions_mapping_name: 'editOthersPosts',\n                        isHidden: it.licensed,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalViewArchivedChannels',\n                        label: t('admin.viewArchivedChannelsTitle'),\n                        label_default: 'Allow users to view archived channels: ',\n                        help_text: t('admin.viewArchivedChannelsHelpText'),\n                        help_text_default: '(Beta) When true, allows users to view, share and search for content of channels that have been archived. Users can only view the content in channels of which they were a member before the channel was archived.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'PrivacySettings.ShowEmailAddress',\n                        label: t('admin.privacy.showEmailTitle'),\n                        label_default: 'Show Email Address:',\n                        help_text: t('admin.privacy.showEmailDescription'),\n                        help_text_default: 'When false, hides the email address of members from everyone except System Administrators.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'PrivacySettings.ShowFullName',\n                        label: t('admin.privacy.showFullNameTitle'),\n                        label_default: 'Show Full Name:',\n                        help_text: t('admin.privacy.showFullNameDescription'),\n                        help_text_default: 'When false, hides the full name of members from everyone except System Administrators. Username is shown in place of full name.',\n                    },\n                ],\n            },\n        },\n        notifications: {\n            url: 'environment/notifications',\n            title: t('admin.sidebar.notifications'),\n            title_default: 'Notifications',\n            schema: {\n                id: 'notifications',\n                name: t('admin.environment.notifications'),\n                name_default: 'Notifications',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableConfirmNotificationsToChannel',\n                        label: t('admin.environment.notifications.enableConfirmNotificationsToChannel.label'),\n                        label_default: 'Show @channel and @all confirmation dialog:',\n                        help_text: t('admin.environment.notifications.enableConfirmNotificationsToChannel.help'),\n                        help_text_default: 'When true, users will be prompted to confirm when posting @channel and @all in channels with over five members. When false, no confirmation is required.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.SendEmailNotifications',\n                        label: t('admin.environment.notifications.enable.label'),\n                        label_default: 'Enable Email Notifications:',\n                        help_text: t('admin.environment.notifications.enable.help'),\n                        help_text_default: 'Typically set to true in production. When true, Mattermost attempts to send email notifications. When false, email invitations and user account setting change emails are still sent as long as the SMTP server is configured. Developers may set this field to false to skip email setup for faster development.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnablePreviewModeBanner',\n                        label: t('admin.environment.notifications.enablePreviewModeBanner.label'),\n                        label_default: 'Enable Preview Mode Banner:',\n                        help_text: t('admin.environment.notifications.enablePreviewModeBanner.help'),\n                        help_text_default: 'When true, the Preview Mode banner is displayed so users are aware that email notifications are disabled. When false, the Preview Mode banner is not displayed to users.',\n                        isDisabled: it.either(\n                            it.stateIsTrue('EmailSettings.SendEmailNotifications'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableEmailBatching',\n                        label: t('admin.environment.notifications.enableEmailBatching.label'),\n                        label_default: 'Enable Email Batching:',\n                        help_text: t('admin.environment.notifications.enableEmailBatching.help'),\n                        help_text_default: 'When true, users will have email notifications for multiple direct messages and mentions combined into a single email. Batching will occur at a default interval of 15 minutes, configurable in Account Settings > Notifications.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                            it.configIsTrue('ClusterSettings', 'Enable'),\n                            it.configIsFalse('ServiceSettings', 'SiteURL'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.EmailNotificationContentsType',\n                        label: t('admin.environment.notifications.contents.label'),\n                        label_default: 'Email Notification Contents:',\n                        help_text: t('admin.environment.notifications.contents.help'),\n                        help_text_default: '**Send full message contents** - Sender name and channel are included in email notifications. Typically used for compliance reasons if Mattermost contains confidential information and policy dictates it cannot be stored in email.\\n  **Send generic description with only sender name** - Only the name of the person who sent the message, with no information about channel name or message contents are included in email notifications. Typically used for compliance reasons if Mattermost contains confidential information and policy dictates it cannot be stored in email.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('EmailNotificationContents')),\n                        options: [\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.contents.full'),\n                                display_name_default: 'Send full message contents',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.contents.generic'),\n                                display_name_default: 'Send generic description with only sender name',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackName',\n                        label: t('admin.environment.notifications.notificationDisplay.label'),\n                        label_default: 'Notification Display Name:',\n                        placeholder: t('admin.environment.notifications.notificationDisplay.placeholder'),\n                        placeholder_default: 'Ex: \"Mattermost Notification\", \"System\", \"No-Reply\"',\n                        help_text: t('admin.environment.notifications.notificationDisplay.help'),\n                        help_text_default: 'Display name on email account used when sending notification emails from Mattermost.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackEmail',\n                        label: t('admin.environment.notifications.feedbackEmail.label'),\n                        label_default: 'Notification From Address:',\n                        placeholder: t('admin.environment.notifications.feedbackEmail.placeholder'),\n                        placeholder_default: 'Ex: \"mattermost@yourcompany.com\", \"admin@yourcompany.com\"',\n                        help_text: t('admin.environment.notifications.feedbackEmail.help'),\n                        help_text_default: 'Email address displayed on email account used when sending notification emails from Mattermost.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.ReplyToAddress',\n                        label: t('admin.environment.notifications.replyToAddress.label'),\n                        label_default: 'Notification Reply-To Address:',\n                        placeholder: t('admin.environment.notifications.replyToAddress.placeholder'),\n                        placeholder_default: 'Ex: \"mattermost@yourcompany.com\", \"admin@yourcompany.com\"',\n                        help_text: t('admin.environment.notifications.replyToAddress.help'),\n                        help_text_default: 'Email address used in the Reply-To header when sending notification emails from Mattermost.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackOrganization',\n                        label: t('admin.environment.notifications.feedbackOrganization.label'),\n                        label_default: 'Notification Footer Mailing Address:',\n                        placeholder: t('admin.environment.notifications.feedbackOrganization.placeholder'),\n                        placeholder_default: 'Ex: \"© ABC Corporation, 565 Knight Way, Palo Alto, California, 94305, USA\"',\n                        help_text: t('admin.environment.notifications.feedbackOrganization.help'),\n                        help_text_default: 'Organization name and address displayed on email notifications from Mattermost, such as \"© ABC Corporation, 565 Knight Way, Palo Alto, California, 94305, USA\". If the field is left empty, the organization name and address will not be displayed.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.PushNotificationContents',\n                        label: t('admin.environment.notifications.pushContents.label'),\n                        label_default: 'Push Notification Contents:',\n                        help_text: t('admin.environment.notifications.pushContents.help'),\n                        help_text_default: '**Generic description with only sender name** - Includes only the name of the person who sent the message in push notifications, with no information about channel name or message contents.\\n **Generic description with sender and channel names** - Includes the name of the person who sent the message and the channel it was sent in, but not the message contents.\\n **Full message content sent in the notification payload** - Includes the message contents in the push notification payload that is relayed through Apple\\'s Push Notification Service (APNS) or Google\\'s Firebase Cloud Messaging (FCM). It is **highly recommended** this option only be used with an \"https\" protocol to encrypt the connection and protect confidential information sent in messages.',\n                        help_text_markdown: true,\n                        isHidden: it.licensedForFeature('IDLoadedPushNotifications'),\n                        options: [\n                            {\n                                value: 'generic_no_channel',\n                                display_name: t('admin.environment.notifications.pushContents.genericNoChannel'),\n                                display_name_default: 'Generic description with only sender name',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.pushContents.generic'),\n                                display_name_default: 'Generic description with sender and channel names',\n                            },\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.pushContents.full'),\n                                display_name_default: 'Full message content sent in the notification payload',\n                            }\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.PushNotificationContents',\n                        label: t('admin.environment.notifications.pushContents.label'),\n                        label_default: 'Push Notification Contents:',\n                        help_text: t('admin.environment.notifications.pushContents.withIdLoaded.help'),\n                        help_text_default: '**Generic description with only sender name** - Includes only the name of the person who sent the message in push notifications, with no information about channel name or message contents.\\n **Generic description with sender and channel names** - Includes the name of the person who sent the message and the channel it was sent in, but not the message contents.\\n **Full message content sent in the notification payload** - Includes the message contents in the push notification payload that is relayed through Apple\\'s Push Notification Service (APNS) or Google\\'s Firebase Cloud Messaging (FCM). It is **highly recommended** this option only be used with an \"https\" protocol to encrypt the connection and protect confidential information sent in messages.\\n **Full message content fetched from the server on receipt** - The notification payload relayed through APNS or FCM contains no message content, instead it contains a unique message ID used to fetch message content from the server when a push notification is received by a device. If the server cannot be reached, a generic notification will be displayed.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('IDLoadedPushNotifications')),\n                        options: [\n                            {\n                                value: 'generic_no_channel',\n                                display_name: t('admin.environment.notifications.pushContents.genericNoChannel'),\n                                display_name_default: 'Generic description with only sender name',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.pushContents.generic'),\n                                display_name_default: 'Generic description with sender and channel names',\n                            },\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.pushContents.full'),\n                                display_name_default: 'Full message content sent in the notification payload',\n                            },\n                            {\n                                value: 'id_loaded',\n                                display_name: t('admin.environment.notifications.pushContents.idLoaded'),\n                                display_name_default: 'Full message content fetched from the server on receipt',\n                            },\n                        ],\n                    },\n                ],\n            },\n        },\n        announcement_banner: {\n            url: 'site_config/announcement_banner',\n            title: t('admin.sidebar.announcement'),\n            title_default: 'Announcement Banner',\n            isHidden: it.isnt(it.licensed),\n            schema: {\n                id: 'AnnouncementSettings',\n                name: t('admin.site.announcementBanner'),\n                name_default: 'Announcement Banner',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'AnnouncementSettings.EnableBanner',\n                        label: t('admin.customization.announcement.enableBannerTitle'),\n                        label_default: 'Enable Announcement Banner:',\n                        help_text: t('admin.customization.announcement.enableBannerDesc'),\n                        help_text_default: 'Enable an announcement banner across all teams.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'AnnouncementSettings.BannerText',\n                        label: t('admin.customization.announcement.bannerTextTitle'),\n                        label_default: 'Banner Text:',\n                        help_text: t('admin.customization.announcement.bannerTextDesc'),\n                        help_text_default: 'Text that will appear in the announcement banner.',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'AnnouncementSettings.BannerColor',\n                        label: t('admin.customization.announcement.bannerColorTitle'),\n                        label_default: 'Banner Color:',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'AnnouncementSettings.BannerTextColor',\n                        label: t('admin.customization.announcement.bannerTextColorTitle'),\n                        label_default: 'Banner Text Color:',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'AnnouncementSettings.AllowBannerDismissal',\n                        label: t('admin.customization.announcement.allowBannerDismissalTitle'),\n                        label_default: 'Allow Banner Dismissal:',\n                        help_text: t('admin.customization.announcement.allowBannerDismissalDesc'),\n                        help_text_default: 'When true, users can dismiss the banner until its next update. When false, the banner is permanently visible until it is turned off by the System Admin.',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                ],\n            },\n        },\n        emoji: {\n            url: 'site_config/emoji',\n            title: t('admin.sidebar.emoji'),\n            title_default: 'Emoji',\n            schema: {\n                id: 'EmojiSettings',\n                name: t('admin.site.emoji'),\n                name_default: 'Emoji',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableEmojiPicker',\n                        label: t('admin.customization.enableEmojiPickerTitle'),\n                        label_default: 'Enable Emoji Picker:',\n                        help_text: t('admin.customization.enableEmojiPickerDesc'),\n                        help_text_default: 'The emoji picker allows users to select emoji to add as reactions or use in messages. Enabling the emoji picker with a large number of custom emoji may slow down performance.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableCustomEmoji',\n                        label: t('admin.customization.enableCustomEmojiTitle'),\n                        label_default: 'Enable Custom Emoji:',\n                        help_text: t('admin.customization.enableCustomEmojiDesc'),\n                        help_text_default: 'Enable users to create custom emoji for use in messages. When enabled, Custom Emoji settings can be accessed by switching to a team and clicking the three dots above the channel sidebar, and selecting \"Custom Emoji\".',\n                    },\n                ],\n            },\n        },\n        posts: {\n            url: 'site_config/posts',\n            title: t('admin.sidebar.posts'),\n            title_default: 'Posts',\n            schema: {\n                id: 'PostSettings',\n                name: t('admin.site.posts'),\n                name_default: 'Posts',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableLinkPreviews',\n                        label: t('admin.customization.enableLinkPreviewsTitle'),\n                        label_default: 'Enable Link Previews:',\n                        help_text: t('admin.customization.enableLinkPreviewsDesc'),\n                        help_text_default: 'Display a preview of website content, image links and YouTube links below the message when available. The server must be connected to the internet and have access through the firewall (if applicable) to the websites from which previews are expected. Users can disable these previews from Account Settings > Display > Website Link Previews.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableSVGs',\n                        label: t('admin.customization.enableSVGsTitle'),\n                        label_default: 'Enable SVGs:',\n                        help_text: t('admin.customization.enableSVGsDesc'),\n                        help_text_default: 'Enable previews for SVG file attachments and allow them to appear in messages.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableLatex',\n                        label: t('admin.customization.enableLatexTitle'),\n                        label_default: 'Enable Latex Rendering:',\n                        help_text: t('admin.customization.enableLatexDesc'),\n                        help_text_default: 'Enable rending of Latex code. If false, Latex code will be highlighted only.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: CustomUrlSchemesSetting,\n                        key: 'DisplaySettings.CustomUrlSchemes',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GoogleDeveloperKey',\n                        label: t('admin.service.googleTitle'),\n                        label_default: 'Google API Key:',\n                        placeholder: t('admin.service.googleExample'),\n                        placeholder_default: 'E.g.: \"7rAh6iwQCkV4cA1Gsg3fgGOXJAQ43QV\"',\n                        help_text: t('admin.service.googleDescription'),\n                        help_text_default: 'Set this key to enable the display of titles for embedded YouTube video previews. Without the key, YouTube previews will still be created based on hyperlinks appearing in messages or comments but they will not show the video title. View a [Google Developers Tutorial](!https://www.youtube.com/watch?v=Im69kzhpR3I) for instructions on how to obtain a key and add YouTube Data API v3 as a service to your key.',\n                        help_text_markdown: true,\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                ],\n            },\n        },\n        file_sharing_downloads: {\n            url: 'site_config/file_sharing_downloads',\n            title: t('admin.sidebar.fileSharingDownloads'),\n            title_default: 'File Sharing and Downloads',\n            schema: {\n                id: 'FileSharingDownloads',\n                name: t('admin.site.fileSharingDownloads'),\n                name_default: 'File Sharing and Downloads',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableFileAttachments',\n                        label: t('admin.file.enableFileAttachments'),\n                        label_default: 'Allow File Sharing:',\n                        help_text: t('admin.file.enableFileAttachmentsDesc'),\n                        help_text_default: 'When false, disables file sharing on the server. All file and image uploads on messages are forbidden across clients and devices, including mobile.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableMobileUpload',\n                        label: t('admin.file.enableMobileUploadTitle'),\n                        label_default: 'Allow File Uploads on Mobile:',\n                        help_text: t('admin.file.enableMobileUploadDesc'),\n                        help_text_default: 'When false, disables file uploads on mobile apps. If Allow File Sharing is set to true, users can still upload files from a mobile web browser.',\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableMobileDownload',\n                        label: t('admin.file.enableMobileDownloadTitle'),\n                        label_default: 'Allow File Downloads on Mobile:',\n                        help_text: t('admin.file.enableMobileDownloadDesc'),\n                        help_text_default: 'When false, disables file downloads on mobile apps. Users can still download files from a mobile web browser.',\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                ],\n            },\n        },\n        public_links: {\n            url: 'site_config/public_links',\n            title: t('admin.sidebar.publicLinks'),\n            title_default: 'Public Links',\n            schema: {\n                id: 'PublicLinkSettings',\n                name: t('admin.site.public_links'),\n                name_default: 'Public Links',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnablePublicLink',\n                        label: t('admin.image.shareTitle'),\n                        label_default: 'Enable Public File Links: ',\n                        help_text: t('admin.image.shareDescription'),\n                        help_text_default: 'Allow users to share public links to files and images.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_GENERATED,\n                        key: 'FileSettings.PublicLinkSalt',\n                        label: t('admin.image.publicLinkTitle'),\n                        label_default: 'Public Link Salt:',\n                        help_text: t('admin.image.publicLinkDescription'),\n                        help_text_default: '32-character salt added to signing of public image links. Randomly generated on install. Click \"Regenerate\" to create new salt.',\n                    },\n                ],\n            },\n        },\n    },\n    authentication: {\n        icon: 'fa-shield',\n        sectionTitle: t('admin.sidebar.authentication'),\n        sectionTitleDefault: 'Authentication',\n        signup: {\n            url: 'authentication/signup',\n            title: t('admin.sidebar.signup'),\n            title_default: 'Signup',\n            schema: {\n                id: 'SignupSettings',\n                name: t('admin.authentication.signup'),\n                name_default: 'Signup',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableUserCreation',\n                        label: t('admin.team.userCreationTitle'),\n                        label_default: 'Enable Account Creation: ',\n                        help_text: t('admin.team.userCreationDescription'),\n                        help_text_default: 'When false, the ability to create accounts is disabled. The create account button displays error when pressed.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.RestrictCreationToDomains',\n                        label: t('admin.team.restrictTitle'),\n                        label_default: 'Restrict account creation to specified email domains:',\n                        help_text: t('admin.team.restrictDescription'),\n                        help_text_default: 'User accounts can only be created from a specific domain (e.g. \"mattermost.org\") or list of comma-separated domains (e.g. \"corp.mattermost.com, mattermost.org\"). This setting only affects email login for users.',\n                        placeholder: t('admin.team.restrictExample'),\n                        placeholder_default: 'E.g.: \"corp.mattermost.com, mattermost.org\"',\n                        isHidden: it.licensed,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.RestrictCreationToDomains',\n                        label: t('admin.team.restrictTitle'),\n                        label_default: 'Restrict account creation to specified email domains:',\n                        help_text: t('admin.team.restrictGuestDescription'),\n                        help_text_default: 'User accounts can only be created from a specific domain (e.g. \"mattermost.org\") or list of comma-separated domains (e.g. \"corp.mattermost.com, mattermost.org\"). This setting only affects email login for users. For Guest users, please add domains under Signup > Guest Access.',\n                        placeholder: t('admin.team.restrictExample'),\n                        placeholder_default: 'E.g.: \"corp.mattermost.com, mattermost.org\"',\n                        isHidden: it.isnt(it.licensed),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableOpenServer',\n                        label: t('admin.team.openServerTitle'),\n                        label_default: 'Enable Open Server: ',\n                        help_text: t('admin.team.openServerDescription'),\n                        help_text_default: 'When true, anyone can signup for a user account on this server without the need to be invited.',\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableEmailInvitations',\n                        label: t('admin.team.emailInvitationsTitle'),\n                        label_default: 'Enable Email Invitations: ',\n                        help_text: t('admin.team.emailInvitationsDescription'),\n                        help_text_default: 'When true users can invite others to the system using email.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'InvalidateEmailInvitesButton',\n                        action: invalidateAllEmailInvites,\n                        label: t('admin.team.invalidateEmailInvitesTitle'),\n                        label_default: 'Invalidate pending email invites',\n                        help_text: t('admin.team.invalidateEmailInvitesDescription'),\n                        help_text_default: 'This will invalidate active email invitations that have not been accepted by the user.  By default email invitations expire after 48 hours.',\n                        error_message: t('admin.team.invalidateEmailInvitesFail'),\n                        error_message_default: 'Unable to invalidate pending email invites: {error}',\n                        success_message: t('admin.team.invalidateEmailInvitesSuccess'),\n                        success_message_default: 'Pending email invitations invalidated successfully',\n                    },\n                ],\n            },\n        },\n        email: {\n            url: 'authentication/email',\n            title: t('admin.sidebar.email'),\n            title_default: 'Email',\n            schema: {\n                id: 'EmailSettings',\n                name: t('admin.authentication.email'),\n                name_default: 'Email',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignUpWithEmail',\n                        label: t('admin.email.allowSignupTitle'),\n                        label_default: 'Enable account creation with email:',\n                        help_text: t('admin.email.allowSignupDescription'),\n                        help_text_default: 'When true, Mattermost allows account creation using email and password. This value should be false only when you want to limit sign up to a single sign-on service like AD/LDAP, SAML or GitLab.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.RequireEmailVerification',\n                        label: t('admin.email.requireVerificationTitle'),\n                        label_default: 'Require Email Verification: ',\n                        help_text: t('admin.email.requireVerificationDescription'),\n                        help_text_default: 'Typically set to true in production. When true, Mattermost requires email verification after account creation prior to allowing login. Developers may set this field to false to skip sending verification emails for faster development.',\n                        disabled_help_text: t('admin.security.requireEmailVerification.disabled'),\n                        disabled_help_text_default: 'Email verification cannot be changed while sending emails is disabled.',\n                        isDisabled: (config) => !config.EmailSettings.SendEmailNotifications,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignInWithEmail',\n                        label: t('admin.email.allowEmailSignInTitle'),\n                        label_default: 'Enable sign-in with email:',\n                        help_text: t('admin.email.allowEmailSignInDescription'),\n                        help_text_default: 'When true, Mattermost allows users to sign in using their email and password.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignInWithUsername',\n                        label: t('admin.email.allowUsernameSignInTitle'),\n                        label_default: 'Enable sign-in with username:',\n                        help_text: t('admin.email.allowUsernameSignInDescription'),\n                        help_text_default: 'When true, users with email login can sign in using their username and password. This setting does not affect AD/LDAP login.',\n                    },\n                ],\n            },\n        },\n        password: {\n            url: 'authentication/password',\n            title: t('admin.sidebar.password'),\n            title_default: 'Password',\n            searchableStrings: [\n                'user.settings.security.passwordMinLength',\n                'admin.security.password',\n                ['admin.password.minimumLength', {max: '', min: ''}],\n                ['admin.password.minimumLengthDescription', {max: '', min: ''}],\n                'passwordRequirements',\n                'admin.password.lowercase',\n                'admin.password.uppercase',\n                'admin.password.number',\n                'admin.password.symbol',\n                'admin.password.preview',\n                'admin.service.attemptTitle',\n                'admin.service.attemptDescription',\n            ],\n            schema: {\n                id: 'PasswordSettings',\n                component: PasswordSettings,\n            },\n        },\n        mfa: {\n            url: 'authentication/mfa',\n            title: t('admin.sidebar.mfa'),\n            title_default: 'MFA',\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.authentication.mfa'),\n                name_default: 'Multi-factor Authentication',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.mfa.bannerDesc'),\n                        label_default: '[Multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) is available for accounts with AD/LDAP or email login. If other login methods are used, MFA should be configured with the authentication provider.',\n                        label_markdown: true,\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableMultifactorAuthentication',\n                        label: t('admin.service.mfaTitle'),\n                        label_default: 'Enable Multi-factor Authentication:',\n                        help_text: t('admin.service.mfaDesc'),\n                        help_text_default: 'When true, users with AD/LDAP or email login can add multi-factor authentication to their account using Google Authenticator.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.service.enforceMfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication:',\n                        help_text: t('admin.service.enforceMfaDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'When true, [multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) is required for login. New users will be required to configure MFA on signup. Logged in users without MFA configured are redirected to the MFA setup page until configuration is complete.\\n \\nIf your system has users with login methods other than AD/LDAP and email, MFA must be enforced with the authentication provider outside of Mattermost.',\n                        isDisabled: it.stateIsFalse('ServiceSettings.EnableMultifactorAuthentication'),\n                        isHidden: it.isnt(it.licensedForFeature('MFA')),\n                    },\n                ],\n            },\n        },\n        ldap: {\n            url: 'authentication/ldap',\n            title: t('admin.sidebar.ldap'),\n            title_default: 'AD/LDAP',\n            isHidden: it.isnt(it.licensedForFeature('LDAP')),\n            schema: {\n                id: 'LdapSettings',\n                name: t('admin.authentication.ldap'),\n                name_default: 'AD/LDAP',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.Enable',\n                        label: t('admin.ldap.enableTitle'),\n                        label_default: 'Enable sign-in with AD/LDAP:',\n                        help_text: t('admin.ldap.enableDesc'),\n                        help_text_default: 'When true, Mattermost allows login using AD/LDAP',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.EnableSync',\n                        label: t('admin.ldap.enableSyncTitle'),\n                        label_default: 'Enable Synchronization with AD/LDAP:',\n                        help_text: t('admin.ldap.enableSyncDesc'),\n                        help_text_default: 'When true, Mattermost periodically synchronizes users from AD/LDAP. When false, user attributes are updated from AD/LDAP during user login only.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LdapServer',\n                        label: t('admin.ldap.serverTitle'),\n                        label_default: 'AD/LDAP Server:',\n                        help_text: t('admin.ldap.serverDesc'),\n                        help_text_default: 'The domain or IP address of AD/LDAP server.',\n                        placeholder: t('admin.ldap.serverEx'),\n                        placeholder_default: 'E.g.: \"10.0.0.23\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.LdapPort',\n                        label: t('admin.ldap.portTitle'),\n                        label_default: 'AD/LDAP Port:',\n                        help_text: t('admin.ldap.portDesc'),\n                        help_text_default: 'The port Mattermost will use to connect to the AD/LDAP server. Default is 389.',\n                        placeholder: t('admin.ldap.portEx'),\n                        placeholder_default: 'E.g.: \"389\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LdapSettings.ConnectionSecurity',\n                        label: t('admin.connectionSecurityTitle'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_LDAP,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.connectionSecurityNone'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.connectionSecurityTls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                            {\n                                value: 'STARTTLS',\n                                display_name: t('admin.connectionSecurityStart'),\n                                display_name_default: 'STARTTLS',\n                            },\n                        ],\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.SkipCertificateVerification',\n                        label: t('admin.ldap.skipCertificateVerification'),\n                        label_default: 'Skip Certificate Verification:',\n                        help_text: t('admin.ldap.skipCertificateVerificationDesc'),\n                        help_text_default: 'Skips the certificate verification step for TLS or STARTTLS connections. Skipping certificate verification is not recommended for production environments where TLS is required.',\n                        isDisabled: it.stateIsFalse('LdapSettings.ConnectionSecurity'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BaseDN',\n                        label: t('admin.ldap.baseTitle'),\n                        label_default: 'BaseDN:',\n                        help_text: t('admin.ldap.baseDesc'),\n                        help_text_default: 'The Base DN is the Distinguished Name of the location where Mattermost should start its search for user and group objects in the AD/LDAP tree.',\n                        placeholder: t('admin.ldap.baseEx'),\n                        placeholder_default: 'E.g.: \"ou=Unit Name,dc=corp,dc=example,dc=com\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BindUsername',\n                        label: t('admin.ldap.bindUserTitle'),\n                        label_default: 'Bind Username:',\n                        help_text: t('admin.ldap.bindUserDesc'),\n                        help_text_default: 'The username used to perform the AD/LDAP search. This should typically be an account created specifically for use with Mattermost. It should have access limited to read the portion of the AD/LDAP tree specified in the BaseDN field.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BindPassword',\n                        label: t('admin.ldap.bindPwdTitle'),\n                        label_default: 'Bind Password:',\n                        help_text: t('admin.ldap.bindPwdDesc'),\n                        help_text_default: 'Password of the user given in \"Bind Username\".',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.UserFilter',\n                        label: t('admin.ldap.userFilterTitle'),\n                        label_default: 'User Filter:',\n                        help_text: t('admin.ldap.userFilterDisc'),\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use when searching for user objects. Only the users selected by the query will be able to access Mattermost. For Active Directory, the query to filter out disabled users is (&(objectCategory=Person)(!(UserAccountControl:1.2.840.113556.1.4.803:=2))).',\n                        placeholder: t('admin.ldap.userFilterEx'),\n                        placeholder_default: 'Ex. \"(objectClass=user)\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GuestFilter',\n                        label: t('admin.ldap.guestFilterTitle'),\n                        label_default: 'Guest Filter:',\n                        help_text: t('admin.ldap.guestFilterFilterDesc'),\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use when searching for guest objects. Only the users selected by the query will be able to access Mattermost as Guests. Guests are prevented from accessing teams or channels upon logging in until they are assigned a team and at least one channel.\\n \\nNote: If this filter is removed/changed, active guests will not be promoted to a member and will retain their Guest role. Guests can be promoted in **System Console > User Management**.\\n \\n \\nExisting members that are identified by this attribute as a guest will be demoted from a member to a guest when they are asked to login next. The next login is based upon Session lengths set in **System Console > Session Lengths**. It is highly recommend to manually demote users to guests in **System Console > User Management ** to ensure access is restricted immediately.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.ldap.guestFilterEx'),\n                        placeholder_default: 'E.g.: \"(objectClass=guests)\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupFilter',\n                        label: t('admin.ldap.groupFilterTitle'),\n                        label_default: 'Group Filter:',\n                        help_text: t('admin.ldap.groupFilterFilterDesc'),\n                        help_text_markdown: true,\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use when searching for group objects. Only the groups selected by the query will be available to Mattermost. From [User Management > Groups]({siteURL}/admin_console/user_management/groups), select which AD/LDAP groups should be linked and configured.',\n                        help_text_values: {siteURL: getSiteURL()},\n                        placeholder: t('admin.ldap.groupFilterEx'),\n                        placeholder_default: 'E.g.: \"(objectClass=group)\"',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupDisplayNameAttribute',\n                        label: t('admin.ldap.groupDisplayNameAttributeTitle'),\n                        label_default: 'Group Display Name Attribute:',\n                        help_text: t('admin.ldap.groupDisplayNameAttributeDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the group display names.',\n                        placeholder: t('admin.ldap.groupDisplayNameAttributeEx'),\n                        placeholder_default: 'E.g.: \"cn\"',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupIdAttribute',\n                        label: t('admin.ldap.groupIdAttributeTitle'),\n                        label_default: 'Group ID Attribute:',\n                        help_text: t('admin.ldap.groupIdAttributeDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used as a unique identifier for Groups. This should be a AD/LDAP attribute with a value that does not change such as `entryUUID` for LDAP or `objectGUID` for Active Directory.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.ldap.groupIdAttributeEx'),\n                        placeholder_default: 'E.g.: \"objectGUID\" or \"entryUUID\"',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.FirstNameAttribute',\n                        label: t('admin.ldap.firstnameAttrTitle'),\n                        label_default: 'First Name Attribute:',\n                        placeholder: t('admin.ldap.firstnameAttrEx'),\n                        placeholder_default: 'E.g.: \"givenName\"',\n                        help_text: t('admin.ldap.firstnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the first name of users in Mattermost. When set, users cannot edit their first name, since it is synchronized with the LDAP server. When left blank, users can set their first name in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LastNameAttribute',\n                        label: t('admin.ldap.lastnameAttrTitle'),\n                        label_default: 'Last Name Attribute:',\n                        placeholder: t('admin.ldap.lastnameAttrEx'),\n                        placeholder_default: 'E.g.: \"sn\"',\n                        help_text: t('admin.ldap.lastnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the last name of users in Mattermost. When set, users cannot edit their last name, since it is synchronized with the LDAP server. When left blank, users can set their last name in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.NicknameAttribute',\n                        label: t('admin.ldap.nicknameAttrTitle'),\n                        label_default: 'Nickname Attribute:',\n                        placeholder: t('admin.ldap.nicknameAttrEx'),\n                        placeholder_default: 'E.g.: \"nickname\"',\n                        help_text: t('admin.ldap.nicknameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the nickname of users in Mattermost. When set, users cannot edit their nickname, since it is synchronized with the LDAP server. When left blank, users can set their nickname in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.PositionAttribute',\n                        label: t('admin.ldap.positionAttrTitle'),\n                        label_default: 'Position Attribute:',\n                        placeholder: t('admin.ldap.positionAttrEx'),\n                        placeholder_default: 'E.g.: \"title\"',\n                        help_text: t('admin.ldap.positionAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the position field in Mattermost. When set, users cannot edit their position, since it is synchronized with the LDAP server. When left blank, users can set their position in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.EmailAttribute',\n                        label: t('admin.ldap.emailAttrTitle'),\n                        label_default: 'Email Attribute:',\n                        placeholder: t('admin.ldap.emailAttrEx'),\n                        placeholder_default: 'E.g.: \"mail\" or \"userPrincipalName\"',\n                        help_text: t('admin.ldap.emailAttrDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the email address field in Mattermost.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.UsernameAttribute',\n                        label: t('admin.ldap.usernameAttrTitle'),\n                        label_default: 'Username Attribute:',\n                        placeholder: t('admin.ldap.usernameAttrEx'),\n                        placeholder_default: 'E.g.: \"sAMAccountName\"',\n                        help_text: t('admin.ldap.usernameAttrDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the username field in Mattermost. This may be the same as the Login ID Attribute.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.IdAttribute',\n                        label: t('admin.ldap.idAttrTitle'),\n                        label_default: 'ID Attribute: ',\n                        placeholder: t('admin.ldap.idAttrEx'),\n                        placeholder_default: 'E.g.: \"objectGUID\" or \"entryUUID\"',\n                        help_text: t('admin.ldap.idAttrDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'The attribute in the AD/LDAP server used as a unique identifier in Mattermost. It should be an AD/LDAP attribute with a value that does not change such as `entryUUID` for LDAP or `objectGUID` for Active Directory. If a user\\'s ID Attribute changes, it will create a new Mattermost account unassociated with their old one.\\n \\nIf you need to change this field after users have already logged in, use the [mattermost ldap idmigrate](!https://about.mattermost.com/default-mattermost-ldap-idmigrate) CLI tool.',\n                        isDisabled: it.both(\n                            it.stateEquals('LdapSettings.Enable', false),\n                            it.stateEquals('LdapSettings.EnableSync', false),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginIdAttribute',\n                        label: t('admin.ldap.loginAttrTitle'),\n                        label_default: 'Login ID Attribute: ',\n                        placeholder: t('admin.ldap.loginIdAttrEx'),\n                        placeholder_default: 'E.g.: \"sAMAccountName\"',\n                        help_text: t('admin.ldap.loginAttrDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'The attribute in the AD/LDAP server used to log in to Mattermost. Normally this attribute is the same as the \"Username Attribute\" field above.\\n \\nIf your team typically uses domain/username to log in to other services with AD/LDAP, you may enter domain/username in this field to maintain consistency between sites.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginFieldName',\n                        label: t('admin.ldap.loginNameTitle'),\n                        label_default: 'Sign-in Field Default Text:',\n                        placeholder: t('admin.ldap.loginNameEx'),\n                        placeholder_default: 'E.g.: \"AD/LDAP Username\"',\n                        help_text: t('admin.ldap.loginNameDesc'),\n                        help_text_default: 'The placeholder text that appears in the login field on the login page. Defaults to \"AD/LDAP Username\".',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.SyncIntervalMinutes',\n                        label: t('admin.ldap.syncIntervalTitle'),\n                        label_default: 'Synchronization Interval (minutes):',\n                        help_text: t('admin.ldap.syncIntervalHelpText'),\n                        help_text_default: 'AD/LDAP Synchronization updates Mattermost user information to reflect updates on the AD/LDAP server. For example, when a user\\'s name changes on the AD/LDAP server, the change updates in Mattermost when synchronization is performed. Accounts removed from or disabled in the AD/LDAP server have their Mattermost accounts set to \"Inactive\" and have their account sessions revoked. Mattermost performs synchronization on the interval entered. For example, if 60 is entered, Mattermost synchronizes every 60 minutes.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.MaxPageSize',\n                        label: t('admin.ldap.maxPageSizeTitle'),\n                        label_default: 'Maximum Page Size:',\n                        placeholder: t('admin.ldap.maxPageSizeEx'),\n                        placeholder_default: 'E.g.: \"2000\"',\n                        help_text: t('admin.ldap.maxPageSizeHelpText'),\n                        help_text_default: 'The maximum number of users the Mattermost server will request from the AD/LDAP server at one time. 0 is unlimited.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.QueryTimeout',\n                        label: t('admin.ldap.queryTitle'),\n                        label_default: 'Query Timeout (seconds):',\n                        placeholder: t('admin.ldap.queryEx'),\n                        placeholder_default: 'E.g.: \"60\"',\n                        help_text: t('admin.ldap.queryDesc'),\n                        help_text_default: 'The timeout value for queries to the AD/LDAP server. Increase if you are getting timeout errors caused by a slow AD/LDAP server.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: ldapTest,\n                        key: 'LdapSettings.LdapTest',\n                        label: t('admin.ldap.ldap_test_button'),\n                        label_default: 'AD/LDAP Test',\n                        help_text: t('admin.ldap.testHelpText'),\n                        help_text_markdown: true,\n                        help_text_default: 'Tests if the Mattermost server can connect to the AD/LDAP server specified. Please review \"System Console > Logs\" and [documentation](!https://mattermost.com/default-ldap-docs) to troubleshoot errors.',\n                        error_message: t('admin.ldap.testFailure'),\n                        error_message_default: 'AD/LDAP Test Failure: {error}',\n                        success_message: t('admin.ldap.testSuccess'),\n                        success_message_default: 'AD/LDAP Test Successful',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_JOBSTABLE,\n                        job_type: Constants.JobTypes.LDAP_SYNC,\n                        label: t('admin.ldap.sync_button'),\n                        label_default: 'AD/LDAP Synchronize Now',\n                        help_text: t('admin.ldap.syncNowHelpText'),\n                        help_text_markdown: true,\n                        help_text_default: 'Initiates an AD/LDAP synchronization immediately. See the table below for status of each synchronization. Please review \"System Console > Logs\" and [documentation](!https://mattermost.com/default-ldap-docs) to troubleshoot errors.',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                        render_job: (job) => {\n                            let ldapUsers = 0;\n                            let deleteCount = 0;\n                            let updateCount = 0;\n                            let linkedLdapGroupsCount; // Deprecated.\n                            let totalLdapGroupsCount = 0;\n                            let groupDeleteCount = 0;\n                            let groupMemberDeleteCount = 0;\n                            let groupMemberAddCount = 0;\n\n                            if (job && job.data) {\n                                if (job.data.ldap_users_count && job.data.ldap_users_count.length > 0) {\n                                    ldapUsers = job.data.ldap_users_count;\n                                }\n\n                                if (job.data.delete_count && job.data.delete_count.length > 0) {\n                                    deleteCount = job.data.delete_count;\n                                }\n\n                                if (job.data.update_count && job.data.update_count.length > 0) {\n                                    updateCount = job.data.update_count;\n                                }\n\n                                // Deprecated groups count representing the number of linked LDAP groups.\n                                if (job.data.ldap_groups_count) {\n                                    linkedLdapGroupsCount = job.data.ldap_groups_count;\n                                }\n\n                                // Groups count representing the total number of LDAP groups available based on\n                                // the configured based DN and groups filter.\n                                if (job.data.total_ldap_groups_count) {\n                                    totalLdapGroupsCount = job.data.total_ldap_groups_count;\n                                }\n\n                                if (job.data.group_delete_count) {\n                                    groupDeleteCount = job.data.group_delete_count;\n                                }\n\n                                if (job.data.group_member_delete_count) {\n                                    groupMemberDeleteCount = job.data.group_member_delete_count;\n                                }\n\n                                if (job.data.group_member_add_count) {\n                                    groupMemberAddCount = job.data.group_member_add_count;\n                                }\n                            }\n\n                            return (\n                                <span>\n                                    <FormattedMessage\n                                        id={linkedLdapGroupsCount ? 'admin.ldap.jobExtraInfo' : 'admin.ldap.jobExtraInfoTotal'}\n                                        defaultMessage={linkedLdapGroupsCount ? 'Scanned {ldapUsers, number} LDAP users and {ldapGroups, number} linked groups.' : 'Scanned {ldapUsers, number} LDAP users and {ldapGroups, number} groups.'}\n                                        values={{\n                                            ldapUsers,\n                                            ldapGroups: linkedLdapGroupsCount || totalLdapGroupsCount, // Show the old count for jobs records containing the old JSON key.\n                                        }}\n                                    />\n                                    <ul>\n                                        {updateCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.updatedUsers'\n                                                    defaultMessage='Updated {updateCount, number} users.'\n                                                    values={{\n                                                        updateCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {deleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deactivatedUsers'\n                                                    defaultMessage='Deactivated {deleteCount, number} users.'\n                                                    values={{\n                                                        deleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupDeleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deletedGroups'\n                                                    defaultMessage='Deleted {groupDeleteCount, number} groups.'\n                                                    values={{\n                                                        groupDeleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupMemberDeleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deletedGroupMembers'\n                                                    defaultMessage='Deleted {groupMemberDeleteCount, number} group members.'\n                                                    values={{\n                                                        groupMemberDeleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupMemberAddCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.addedGroupMembers'\n                                                    defaultMessage='Added {groupMemberAddCount, number} group members.'\n                                                    values={{\n                                                        groupMemberAddCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                    </ul>\n                                </span>\n                            );\n                        },\n                    },\n                ],\n            },\n        },\n        saml: {\n            url: 'authentication/saml',\n            title: t('admin.sidebar.saml'),\n            title_default: 'SAML 2.0',\n            isHidden: it.isnt(it.licensedForFeature('SAML')),\n            schema: {\n                id: 'SamlSettings',\n                name: t('admin.authentication.saml'),\n                name_default: 'SAML 2.0',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Enable',\n                        label: t('admin.saml.enableTitle'),\n                        label_default: 'Enable Login With SAML 2.0:',\n                        help_text: t('admin.saml.enableDescription'),\n                        help_text_default: 'When true, Mattermost allows login using SAML 2.0. Please see [documentation](!http://docs.mattermost.com/deployment/sso-saml.html) to learn more about configuring SAML for Mattermost.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.EnableSyncWithLdap',\n                        label: t('admin.saml.enableSyncWithLdapTitle'),\n                        label_default: 'Enable Synchronizing SAML Accounts With AD/LDAP:',\n                        help_text: t('admin.saml.enableSyncWithLdapDescription'),\n                        help_text_default: 'When true, Mattermost periodically synchronizes SAML user attributes, including user deactivation and removal, from AD/LDAP. Enable and configure synchronization settings at **Authentication > AD/LDAP**. When false, user attributes are updated from SAML during user login. See [documentation](!https://about.mattermost.com/default-saml-ldap-sync) to learn more.',\n                        help_text_markdown: true,\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.EnableSyncWithLdapIncludeAuth',\n                        label: t('admin.saml.enableSyncWithLdapIncludeAuthTitle'),\n                        label_default: 'Override SAML bind data with AD/LDAP information:',\n                        help_text: t('admin.saml.enableSyncWithLdapIncludeAuthDescription'),\n                        help_text_default: 'When true, Mattermost will override the SAML ID attribute with the AD/LDAP ID attribute if configured or override the SAML Email attribute with the AD/LDAP Email attribute if SAML ID attribute is not present.  This will allow you automatically migrate users from Email binding to ID binding to prevent creation of new users when an email address changes for a user. Moving from true to false, will remove the override from happening.\\n \\n**Note:** SAML IDs must match the LDAP IDs to prevent disabling of user accounts.  Please review [documentation](!https://docs.mattermost.com/deployment/sso-saml-ldapsync.html) for more information.',\n                        help_text_markdown: true,\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.EnableSyncWithLdap'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdpUrl',\n                        label: t('admin.saml.idpUrlTitle'),\n                        label_default: 'SAML SSO URL:',\n                        help_text: t('admin.saml.idpUrlDesc'),\n                        help_text_default: 'The URL where Mattermost sends a SAML request to start login sequence.',\n                        placeholder: t('admin.saml.idpUrlEx'),\n                        placeholder_default: 'E.g.: \"https://idp.example.org/SAML2/SSO/Login\"',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdpDescriptorUrl',\n                        label: t('admin.saml.idpDescriptorUrlTitle'),\n                        label_default: 'Identity Provider Issuer URL:',\n                        help_text: t('admin.saml.idpDescriptorUrlDesc'),\n                        help_text_default: 'The issuer URL for the Identity Provider you use for SAML requests.',\n                        placeholder: t('admin.saml.idpDescriptorUrlEx'),\n                        placeholder_default: 'E.g.: \"https://idp.example.org/SAML2/issuer\"',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.IdpCertificateFile',\n                        label: t('admin.saml.idpCertificateFileTitle'),\n                        label_default: 'Identity Provider Public Certificate:',\n                        help_text: t('admin.saml.idpCertificateFileDesc'),\n                        help_text_default: 'The public authentication certificate issued by your Identity Provider.',\n                        remove_help_text: t('admin.saml.idpCertificateFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the public authentication certificate issued by your Identity Provider.',\n                        remove_button_text: t('admin.saml.remove.idp_certificate'),\n                        remove_button_text_default: 'Remove Identity Provider Certificate',\n                        removing_text: t('admin.saml.removing.certificate'),\n                        removing_text_default: 'Removing Certificate...',\n                        uploading_text: t('admin.saml.uploading.certificate'),\n                        uploading_text_default: 'Uploading Certificate...',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                        fileType: '.crt,.cer,.cert,.pem',\n                        upload_action: uploadIdpSamlCertificate,\n                        remove_action: removeIdpSamlCertificate,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Verify',\n                        label: t('admin.saml.verifyTitle'),\n                        label_default: 'Verify Signature:',\n                        help_text: t('admin.saml.verifyDescription'),\n                        help_text_default: 'When false, Mattermost will not verify that the signature sent from a SAML Response matches the Service Provider Login URL. Disabling verification is not recommended for production environments.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.AssertionConsumerServiceURL',\n                        label: t('admin.saml.assertionConsumerServiceURLTitle'),\n                        label_default: 'Service Provider Login URL:',\n                        help_text: t('admin.saml.assertionConsumerServiceURLPopulatedDesc'),\n                        help_text_default: 'This field is also known as the Assertion Consumer Service URL.',\n                        placeholder: t('admin.saml.assertionConsumerServiceURLEx'),\n                        placeholder_default: 'E.g.: \"https://<your-mattermost-url>/login/sso/saml\"',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Verify'),\n                        ),\n                        onConfigLoad: (value, config) => {\n                            const siteUrl = config.ServiceSettings.SiteURL;\n                            if (siteUrl.length > 0 && value.length === 0) {\n                                const addSlashIfNeeded = siteUrl[siteUrl.length - 1] === '/' ? '' : '/';\n                                return `${siteUrl}${addSlashIfNeeded}login/sso/saml`;\n                            }\n                            return value;\n                        },\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Encrypt',\n                        label: t('admin.saml.encryptTitle'),\n                        label_default: 'Enable Encryption:',\n                        help_text: t('admin.saml.encryptDescription'),\n                        help_text_default: 'When false, Mattermost will not decrypt SAML Assertions encrypted with your Service Provider Public Certificate. Disabling encryption is not recommended for production environments.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.PrivateKeyFile',\n                        label: t('admin.saml.privateKeyFileTitle'),\n                        label_default: 'Service Provider Private Key:',\n                        help_text: t('admin.saml.privateKeyFileFileDesc'),\n                        help_text_default: 'The private key used to decrypt SAML Assertions from the Identity Provider.',\n                        remove_help_text: t('admin.saml.privateKeyFileFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the private key used to decrypt SAML Assertions from the Identity Provider.',\n                        remove_button_text: t('admin.saml.remove.privKey'),\n                        remove_button_text_default: 'Remove Service Provider Private Key',\n                        removing_text: t('admin.saml.removing.privKey'),\n                        removing_text_default: 'Removing Private Key...',\n                        uploading_text: t('admin.saml.uploading.privateKey'),\n                        uploading_text_default: 'Uploading Private Key...',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                        ),\n                        fileType: '.key',\n                        upload_action: uploadPrivateSamlCertificate,\n                        remove_action: removePrivateSamlCertificate,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.PublicCertificateFile',\n                        label: t('admin.saml.publicCertificateFileTitle'),\n                        label_default: 'Service Provider Public Certificate:',\n                        help_text: t('admin.saml.publicCertificateFileDesc'),\n                        help_text_default: 'The certificate used to generate the signature on a SAML request to the Identity Provider for a service provider initiated SAML login, when Mattermost is the Service Provider.',\n                        remove_help_text: t('admin.saml.publicCertificateFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the certificate used to generate the signature on a SAML request to the Identity Provider for a service provider initiated SAML login, when Mattermost is the Service Provider.',\n                        remove_button_text: t('admin.saml.remove.sp_certificate'),\n                        remove_button_text_default: 'Remove Service Provider Certificate',\n                        removing_text: t('admin.saml.removing.certificate'),\n                        removing_text_default: 'Removing Certificate...',\n                        uploading_text: t('admin.saml.uploading.certificate'),\n                        uploading_text_default: 'Uploading Certificate...',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                        ),\n                        fileType: '.crt,.cer',\n                        upload_action: uploadPublicSamlCertificate,\n                        remove_action: removePublicSamlCertificate,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.SignRequest',\n                        label: t('admin.saml.signRequestTitle'),\n                        label_default: 'Sign Request:',\n                        help_text: t('admin.saml.signRequestDescription'),\n                        help_text_default: 'When true, Mattermost will sign the SAML request using your private key. When false, Mattermost will not sign the SAML request.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                            it.stateIsFalse('SamlSettings.PrivateKeyFile'),\n                            it.stateIsFalse('SamlSettings.PublicCertificateFile')\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'SamlSettings.SignatureAlgorithm',\n                        label: t('admin.saml.signatureAlgorithmTitle'),\n                        label_default: 'Signature Algorithm',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                            it.stateIsFalse('SamlSettings.SignRequest'),\n                        ),\n                        options: [\n                            {\n                                value: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1,\n                                display_name: t('admin.saml.signatureAlgorithmDisplay.sha1'),\n                                display_name_default: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1,\n                                help_text: t('admin.saml.signatureAlgorithmDescription.sha1'),\n                                help_text_default: 'Specify the Signature algorithm used to sign the request (RSAwithSHA1). Please see more information provided at http://www.w3.org/2000/09/xmldsig#rsa-sha1',\n                            },\n                            {\n                                value: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256,\n                                display_name: t('admin.saml.signatureAlgorithmDisplay.sha256'),\n                                display_name_default: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256,\n                                help_text: t('admin.saml.signatureAlgorithmDescription.sha256'),\n                                help_text_default: 'Specify the Signature algorithm used to sign the request (RSAwithSHA256). Please see more information provided at http://www.w3.org/2001/04/xmldsig-more#rsa-sha256 [section 6.4.2 RSA (PKCS#1 v1.5)]',\n                            },\n                            {\n                                value: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512,\n                                display_name: t('admin.saml.signatureAlgorithmDisplay.sha512'),\n                                display_name_default: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512,\n                                help_text: t('admin.saml.signatureAlgorithmDescription.sha512'),\n                                help_text_default: 'Specify the Signature algorithm used to sign the request (RSAwithSHA512). Please see more information provided at http://www.w3.org/2001/04/xmldsig-more#rsa-sha512',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'SamlSettings.CanonicalAlgorithm',\n                        label: t('admin.saml.canonicalAlgorithmTitle'),\n                        label_default: 'Canonicalization Algorithm',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                            it.stateIsFalse('SamlSettings.SignRequest'),\n                        ),\n                        options: [\n                            {\n                                value: SAML_SETTINGS_CANONICAL_ALGORITHM_C14N,\n                                display_name: t('admin.saml.canonicalAlgorithmDisplay.n10'),\n                                display_name_default: 'Exclusive XML Canonicalization 1.0 (omit comments)',\n                                help_text: t('admin.saml.canonicalAlgorithmDescription.exc'),\n                                help_text_default: 'Specify the Canonicalization algorithm (Exclusive XML Canonicalization 1.0).  Please see more information provided at http://www.w3.org/2001/10/xml-exc-c14n#',\n                            },\n                            {\n                                value: SAML_SETTINGS_CANONICAL_ALGORITHM_C14N11,\n                                display_name: t('admin.saml.canonicalAlgorithmDisplay.n11'),\n                                display_name_default: 'Canonical XML 1.1 (omit comments)',\n                                help_text: t('admin.saml.canonicalAlgorithmDescription.c14'),\n                                help_text_default: 'Specify the Canonicalization algorithm (Canonical XML 1.1).  Please see more information provided at http://www.w3.org/2006/12/xml-c14n11',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.EmailAttribute',\n                        label: t('admin.saml.emailAttrTitle'),\n                        label_default: 'Email Attribute:',\n                        placeholder: t('admin.saml.emailAttrEx'),\n                        placeholder_default: 'E.g.: \"Email\" or \"PrimaryEmail\"',\n                        help_text: t('admin.saml.emailAttrDesc'),\n                        help_text_default: 'The attribute in the SAML Assertion that will be used to populate the email addresses of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.UsernameAttribute',\n                        label: t('admin.saml.usernameAttrTitle'),\n                        label_default: 'Username Attribute:',\n                        placeholder: t('admin.saml.usernameAttrEx'),\n                        placeholder_default: 'E.g.: \"Username\"',\n                        help_text: t('admin.saml.usernameAttrDesc'),\n                        help_text_default: 'The attribute in the SAML Assertion that will be used to populate the username field in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdAttribute',\n                        label: t('admin.saml.idAttrTitle'),\n                        label_default: 'Id Attribute:',\n                        placeholder: t('admin.saml.idAttrEx'),\n                        placeholder_default: 'E.g.: \"Id\"',\n                        help_text: t('admin.saml.idAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to bind users from SAML to users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.GuestAttribute',\n                        label: t('admin.saml.guestAttrTitle'),\n                        label_default: 'Guest Attribute:',\n                        placeholder: t('admin.saml.guestAttrEx'),\n                        placeholder_default: 'E.g.: \"usertype=Guest\" or \"isGuest=true\"',\n                        help_text: t('admin.saml.guestAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to apply a guest role to users in Mattermost. Guests are prevented from accessing teams or channels upon logging in until they are assigned a team and at least one channel.\\n \\nNote: If this attribute is removed/changed from your guest user in SAML and the user is still active, they will not be promoted to a member and will retain their Guest role. Guests can be promoted in **System Console > User Management**.\\n \\n \\nExisting members that are identified by this attribute as a guest will be demoted from a member to a guest when they are asked to login next. The next login is based upon Session lengths set in **System Console > Session Lengths**. It is highly recommend to manually demote users to guests in **System Console > User Management ** to ensure access is restricted immediately.',\n                        help_text_markdown: true,\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.FirstNameAttribute',\n                        label: t('admin.saml.firstnameAttrTitle'),\n                        label_default: 'First Name Attribute:',\n                        placeholder: t('admin.saml.firstnameAttrEx'),\n                        placeholder_default: 'E.g.: \"FirstName\"',\n                        help_text: t('admin.saml.firstnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the first name of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LastNameAttribute',\n                        label: t('admin.saml.lastnameAttrTitle'),\n                        label_default: 'Last Name Attribute:',\n                        placeholder: t('admin.saml.lastnameAttrEx'),\n                        placeholder_default: 'E.g.: \"LastName\"',\n                        help_text: t('admin.saml.lastnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the last name of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.NicknameAttribute',\n                        label: t('admin.saml.nicknameAttrTitle'),\n                        label_default: 'Nickname Attribute:',\n                        placeholder: t('admin.saml.nicknameAttrEx'),\n                        placeholder_default: 'E.g.: \"Nickname\"',\n                        help_text: t('admin.saml.nicknameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the nickname of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.PositionAttribute',\n                        label: t('admin.saml.positionAttrTitle'),\n                        label_default: 'Position Attribute:',\n                        placeholder: t('admin.saml.positionAttrEx'),\n                        placeholder_default: 'E.g.: \"Role\"',\n                        help_text: t('admin.saml.positionAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the position of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LocaleAttribute',\n                        label: t('admin.saml.localeAttrTitle'),\n                        label_default: 'Preferred Language Attribute:',\n                        placeholder: t('admin.saml.localeAttrEx'),\n                        placeholder_default: 'E.g.: \"Locale\" or \"PrimaryLanguage\"',\n                        help_text: t('admin.saml.localeAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the language of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonText',\n                        label: t('admin.saml.loginButtonTextTitle'),\n                        label_default: 'Login Button Text:',\n                        placeholder: t('admin.saml.loginButtonTextEx'),\n                        placeholder_default: 'E.g.: \"OKTA\"',\n                        help_text: t('admin.saml.loginButtonTextDesc'),\n                        help_text_default: '(Optional) The text that appears in the login button on the login page. Defaults to \"SAML\".',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                ],\n            },\n        },\n        gitlab: {\n            url: 'authentication/gitlab',\n            title: t('admin.sidebar.gitlab'),\n            title_default: 'GitLab',\n            isHidden: it.licensed,\n            schema: {\n                id: 'GitLabSettings',\n                name: t('admin.authentication.gitlab'),\n                name_default: 'GitLab',\n                onConfigLoad: (config) => {\n                    const newState = {};\n                    newState['GitLabSettings.Url'] = config.GitLabSettings.UserApiEndpoint.replace('/api/v4/user', '');\n                    return newState;\n                },\n                onConfigSave: (config) => {\n                    const newConfig = {...config};\n                    newConfig.GitLabSettings.UserApiEndpoint = config.GitLabSettings.Url.replace(/\\/$/, '') + '/api/v4/user';\n                    return newConfig;\n                },\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GitLabSettings.Enable',\n                        label: t('admin.gitlab.enableTitle'),\n                        label_default: 'Enable authentication with GitLab: ',\n                        help_text: t('admin.gitlab.enableDescription'),\n                        help_text_default: 'When true, Mattermost allows team creation and account signup using GitLab OAuth.\\n \\n1. Log in to your GitLab account and go to Profile Settings -> Applications.\\n2. Enter Redirect URIs \"<your-mattermost-url>/login/gitlab/complete\" (example: http://localhost:8065/login/gitlab/complete) and \"<your-mattermost-url>/signup/gitlab/complete\".\\n3. Then use \"Application Secret Key\" and \"Application ID\" fields from GitLab to complete the options below.\\n4. Complete the Endpoint URLs below.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Id',\n                        label: t('admin.gitlab.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.gitlab.clientIdDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientIdExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.stateIsFalse('GitLabSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Secret',\n                        label: t('admin.gitlab.clientSecretTitle'),\n                        label_default: 'Application Secret Key:',\n                        help_text: t('admin.gitlab.clientSecretDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.stateIsFalse('GitLabSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Url',\n                        label: t('admin.gitlab.siteUrl'),\n                        label_default: 'GitLab Site URL:',\n                        help_text: t('admin.gitlab.siteUrlDescription'),\n                        help_text_default: 'Enter the URL of your GitLab instance, e.g. https://example.com:3000. If your GitLab instance is not set up with SSL, start the URL with http:// instead of https://.',\n                        placeholder: t('admin.gitlab.siteUrlExample'),\n                        placeholder_default: 'E.g.: https://',\n                        isDisabled: it.stateIsFalse('GitLabSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.UserApiEndpoint',\n                        label: t('admin.gitlab.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/api/v4/user';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.AuthEndpoint',\n                        label: t('admin.gitlab.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/authorize';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.TokenEndpoint',\n                        label: t('admin.gitlab.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/token';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                ],\n            },\n        },\n        oauth: {\n            url: 'authentication/oauth',\n            title: t('admin.sidebar.oauth'),\n            title_default: 'OAuth 2.0',\n            isHidden: it.isnt(it.licensed),\n            schema: {\n                id: 'OAuthSettings',\n                name: t('admin.authentication.oauth'),\n                name_default: 'OAuth 2.0',\n                onConfigLoad: (config) => {\n                    const newState = {};\n                    if (config.GitLabSettings && config.GitLabSettings.Enable) {\n                        newState.oauthType = Constants.GITLAB_SERVICE;\n                    }\n                    if (config.Office365Settings && config.Office365Settings.Enable) {\n                        newState.oauthType = Constants.OFFICE365_SERVICE;\n                    }\n                    if (config.GoogleSettings && config.GoogleSettings.Enable) {\n                        newState.oauthType = Constants.GOOGLE_SERVICE;\n                    }\n\n                    newState['GitLabSettings.Url'] = config.GitLabSettings.UserApiEndpoint.replace('/api/v4/user', '');\n\n                    return newState;\n                },\n                onConfigSave: (config) => {\n                    const newConfig = {...config};\n                    newConfig.GitLabSettings = config.GitLabSettings || {};\n                    newConfig.Office365Settings = config.Office365Settings || {};\n                    newConfig.GoogleSettings = config.GoogleSettings || {};\n\n                    newConfig.GitLabSettings.Enable = false;\n                    newConfig.Office365Settings.Enable = false;\n                    newConfig.GoogleSettings.Enable = false;\n                    newConfig.GitLabSettings.UserApiEndpoint = config.GitLabSettings.Url.replace(/\\/$/, '') + '/api/v4/user';\n\n                    if (config.oauthType === Constants.GITLAB_SERVICE) {\n                        newConfig.GitLabSettings.Enable = true;\n                    }\n                    if (config.oauthType === Constants.OFFICE365_SERVICE) {\n                        newConfig.Office365Settings.Enable = true;\n                    }\n                    if (config.oauthType === Constants.GOOGLE_SERVICE) {\n                        newConfig.GoogleSettings.Enable = true;\n                    }\n                    delete newConfig.oauthType;\n                    return newConfig;\n                },\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'oauthType',\n                        label: t('admin.oauth.select'),\n                        label_default: 'Select OAuth 2.0 Service Provider:',\n                        options: [\n                            {\n                                value: 'off',\n                                display_name: t('admin.oauth.off'),\n                                display_name_default: 'Do not allow sign-in via an OAuth 2.0 provider.',\n                            },\n                            {\n                                value: Constants.GITLAB_SERVICE,\n                                display_name: t('admin.oauth.gitlab'),\n                                display_name_default: 'GitLab',\n                                help_text: t('admin.gitlab.EnableMarkdownDesc'),\n                                help_text_default: '1. Log in to your GitLab account and go to Profile Settings -> Applications.\\n2. Enter Redirect URIs \"<your-mattermost-url>/login/gitlab/complete\" (example: http://localhost:8065/login/gitlab/complete) and \"<your-mattermost-url>/signup/gitlab/complete\".\\n3. Then use \"Application Secret Key\" and \"Application ID\" fields from GitLab to complete the options below.\\n4. Complete the Endpoint URLs below.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.GOOGLE_SERVICE,\n                                display_name: t('admin.oauth.google'),\n                                display_name_default: 'Google Apps',\n                                isHidden: it.isnt(it.licensedForFeature('GoogleOAuth')),\n                                help_text: t('admin.google.EnableMarkdownDesc'),\n                                help_text_default: '1. [Log in](!https://accounts.google.com/login) to your Google account.\\n2. Go to [https://console.developers.google.com](!https://console.developers.google.com), click **Credentials** in the left hand sidebar and enter \"Mattermost - your-company-name\" as the **Project Name**, then click **Create**.\\n3. Click the **OAuth consent screen** header and enter \"Mattermost\" as the **Product name shown to users**, then click **Save**.\\n4. Under the **Credentials** header, click **Create credentials**, choose **OAuth client ID** and select **Web Application**.\\n5. Under **Restrictions** and **Authorized redirect URIs** enter **your-mattermost-url/signup/google/complete** (example: http://localhost:8065/signup/google/complete). Click **Create**.\\n6. Paste the **Client ID** and **Client Secret** to the fields below, then click **Save**.\\n7. Finally, go to [Google+ API](!https://console.developers.google.com/apis/api/plus/overview\") and click *Enable*. This might take a few minutes to propagate through Google`s systems.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.OFFICE365_SERVICE,\n                                display_name: t('admin.oauth.office365'),\n                                display_name_default: 'Office 365',\n                                isHidden: it.isnt(it.licensedForFeature('Office365OAuth')),\n                                help_text: t('admin.office365.EnableMarkdownDesc'),\n                                help_text_default: '1. [Log in](!https://login.microsoftonline.com/) to your Microsoft or Office 365 account. Make sure it`s the account on the same [tenant](!https://msdn.microsoft.com/en-us/library/azure/jj573650.aspx#Anchor_0) that you would like users to log in with.\\n2. Go to [https://apps.dev.microsoft.com](!https://apps.dev.microsoft.com), click **Go to app list** > **Add an app** and use \"Mattermost - your-company-name\" as the **Application Name**.\\n3. Under **Application Secrets**, click **Generate New Password** and paste it to the **Application Secret Password** field below.\\n4. Under **Platforms**, click **Add Platform**, choose **Web** and enter **your-mattermost-url/signup/office365/complete** (example: http://localhost:8065/signup/office365/complete) under **Redirect URIs**. Also uncheck **Allow Implicit Flow**.\\n5. Finally, click **Save** and then paste the **Application ID** below.',\n                                help_text_markdown: true,\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Id',\n                        label: t('admin.gitlab.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.gitlab.clientIdDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientIdExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Secret',\n                        label: t('admin.gitlab.clientSecretTitle'),\n                        label_default: 'Application Secret Key:',\n                        help_text: t('admin.gitlab.clientSecretDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Url',\n                        label: t('admin.gitlab.siteUrl'),\n                        label_default: 'GitLab Site URL:',\n                        help_text: t('admin.gitlab.siteUrlDescription'),\n                        help_text_default: 'Enter the URL of your GitLab instance, e.g. https://example.com:3000. If your GitLab instance is not set up with SSL, start the URL with http:// instead of https://.',\n                        placeholder: t('admin.gitlab.siteUrlExample'),\n                        placeholder_default: 'E.g.: https://',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.UserApiEndpoint',\n                        label: t('admin.gitlab.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/api/v4/user';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.AuthEndpoint',\n                        label: t('admin.gitlab.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/authorize';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.TokenEndpoint',\n                        label: t('admin.gitlab.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/token';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.Id',\n                        label: t('admin.google.clientIdTitle'),\n                        label_default: 'Client ID:',\n                        help_text: t('admin.google.clientIdDescription'),\n                        help_text_default: 'The Client ID you received when registering your application with Google.',\n                        placeholder: t('admin.google.clientIdExample'),\n                        placeholder_default: 'E.g.: \"7602141235235-url0fhs1mayfasbmop5qlfns8dh4.apps.googleusercontent.com\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.Secret',\n                        label: t('admin.google.clientSecretTitle'),\n                        label_default: 'Client Secret:',\n                        help_text: t('admin.google.clientSecretDescription'),\n                        help_text_default: 'The Client Secret you received when registering your application with Google.',\n                        placeholder: t('admin.google.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"H8sz0Az-dDs2p15-7QzD231\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.UserApiEndpoint',\n                        label: t('admin.google.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: () => 'https://people.googleapis.com/v1/people/me?personFields=names,emailAddresses,nicknames,metadata',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.AuthEndpoint',\n                        label: t('admin.google.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: () => 'https://accounts.google.com/o/oauth2/v2/auth',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.TokenEndpoint',\n                        label: t('admin.google.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: () => 'https://www.googleapis.com/oauth2/v4/token',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.Id',\n                        label: t('admin.office365.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.office365.clientIdDescription'),\n                        help_text_default: 'The Application/Client ID you received when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.clientIdExample'),\n                        placeholder_default: 'E.g.: \"adf3sfa2-ag3f-sn4n-ids0-sh1hdax192qq\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.Secret',\n                        label: t('admin.office365.clientSecretTitle'),\n                        label_default: 'Application Secret Password:',\n                        help_text: t('admin.office365.clientSecretDescription'),\n                        help_text_default: 'The Application Secret Password you generated when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"shAieM47sNBfgl20f8ci294\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.UserApiEndpoint',\n                        label: t('admin.office365.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: () => 'https://graph.microsoft.com/v1.0/me',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.AuthEndpoint',\n                        label: t('admin.office365.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: () => 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.TokenEndpoint',\n                        label: t('admin.office365.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: () => 'https://login.microsoftonline.com/common/oauth2/v2.0/token',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                ],\n            },\n        },\n        guest_access: {\n            url: 'authentication/guest_access',\n            title: t('admin.sidebar.guest_access'),\n            title_default: 'Guest Access (Beta)',\n            isHidden: it.isnt(it.licensed),\n            schema: {\n                id: 'GuestAccountsSettings',\n                name: t('admin.authentication.guest_access'),\n                name_default: 'Guest Access (Beta)',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: CustomEnableDisableGuestAccountsSetting,\n                        key: 'GuestAccountsSettings.Enable',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GuestAccountsSettings.RestrictCreationToDomains',\n                        label: t('admin.guest_access.whitelistedDomainsTitle'),\n                        label_default: 'Whitelisted Guest Domains:',\n                        help_text: t('admin.guest_access.whitelistedDomainsDescription'),\n                        help_text_default: '(Optional) Guest accounts can be created at the system level from this list of allowed guest domains.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.guest_access.whitelistedDomainsExample'),\n                        placeholder_default: 'E.g.: \"company.com, othercorp.org\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GuestAccountsSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.guest_access.mfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication: ',\n                        help_text: t('admin.guest_access.mfaDescriptionMFANotEnabled'),\n                        help_text_default: '[Multi-factor authentication](./mfa) is currently not enabled.',\n                        help_text_markdown: true,\n                        isDisabled: () => true,\n                        isHidden: it.configIsTrue('ServiceSettings', 'EnableMultifactorAuthentication'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GuestAccountsSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.guest_access.mfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication: ',\n                        help_text: t('admin.guest_access.mfaDescriptionMFANotEnforced'),\n                        help_text_default: '[Multi-factor authentication](./mfa) is currently not enforced.',\n                        help_text_markdown: true,\n                        isDisabled: () => true,\n                        isHidden: it.either(\n                            it.configIsFalse('ServiceSettings', 'EnableMultifactorAuthentication'),\n                            it.configIsTrue('ServiceSettings', 'EnforceMultifactorAuthentication'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GuestAccountsSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.guest_access.mfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication: ',\n                        help_text: t('admin.guest_access.mfaDescription'),\n                        help_text_default: 'When true, [multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) for guests is required for login. New guest users will be required to configure MFA on signup. Logged in guest users without MFA configured are redirected to the MFA setup page until configuration is complete.\\n \\nIf your system has guest users with login methods other than AD/LDAP and email, MFA must be enforced with the authentication provider outside of Mattermost.',\n                        help_text_markdown: true,\n                        isHidden: it.either(\n                            it.configIsFalse('ServiceSettings', 'EnableMultifactorAuthentication'),\n                            it.configIsFalse('ServiceSettings', 'EnforceMultifactorAuthentication'),\n                        ),\n                    },\n                ],\n            },\n        },\n    },\n    plugins: {\n        icon: 'fa-plug',\n        sectionTitle: t('admin.sidebar.plugins'),\n        sectionTitleDefault: 'Plugins (Beta)',\n        id: 'plugins',\n        plugin_management: {\n            url: 'plugins/plugin_management',\n            title: t('admin.plugins.pluginManagement'),\n            title_default: 'Plugin Management',\n            searchableStrings: [\n                'admin.plugin.management.title',\n                'admin.plugins.settings.enable',\n                'admin.plugins.settings.enableDesc',\n                'admin.plugin.uploadTitle',\n                'admin.plugin.installedTitle',\n                'admin.plugin.installedDesc',\n                'admin.plugin.uploadDesc',\n                'admin.plugin.uploadDisabledDesc',\n                'admin.plugins.settings.enableMarketplace',\n                'admin.plugins.settings.enableMarketplaceDesc',\n                'admin.plugins.settings.marketplaceUrl',\n                'admin.plugins.settings.marketplaceUrlDesc',\n            ],\n            schema: {\n                id: 'PluginManagementSettings',\n                component: PluginManagement,\n            },\n        },\n        custom: {\n            url: 'plugins/plugin_:plugin_id',\n            schema: {\n                id: 'CustomPluginSettings',\n                component: CustomPluginSettings,\n            },\n        },\n    },\n    integrations: {\n        icon: 'fa-sitemap',\n        sectionTitle: t('admin.sidebar.integrations'),\n        sectionTitleDefault: 'Integrations',\n        id: 'integrations',\n        integration_management: {\n            url: 'integrations/integration_management',\n            title: t('admin.integrations.integrationManagement'),\n            title_default: 'Integration Management',\n            schema: {\n                id: 'CustomIntegrationSettings',\n                name: t('admin.integrations.integrationManagement.title'),\n                name_default: 'Integration Management',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableIncomingWebhooks',\n                        label: t('admin.service.webhooksTitle'),\n                        label_default: 'Enable Incoming Webhooks: ',\n                        help_text: t('admin.service.webhooksDescription'),\n                        help_text_default: 'When true, incoming webhooks will be allowed. To help combat phishing attacks, all posts from webhooks will be labelled by a BOT tag. See [documentation](!http://docs.mattermost.com/developer/webhooks-incoming.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableOutgoingWebhooks',\n                        label: t('admin.service.outWebhooksTitle'),\n                        label_default: 'Enable Outgoing Webhooks: ',\n                        help_text: t('admin.service.outWebhooksDesc'),\n                        help_text_default: 'When true, outgoing webhooks will be allowed. See [documentation](!http://docs.mattermost.com/developer/webhooks-outgoing.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableCommands',\n                        label: t('admin.service.cmdsTitle'),\n                        label_default: 'Enable Custom Slash Commands: ',\n                        help_text: t('admin.service.cmdsDesc'),\n                        help_text_default: 'When true, custom slash commands will be allowed. See [documentation](!http://docs.mattermost.com/developer/slash-commands.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableOAuthServiceProvider',\n                        label: t('admin.oauth.providerTitle'),\n                        label_default: 'Enable OAuth 2.0 Service Provider: ',\n                        help_text: t('admin.oauth.providerDescription'),\n                        help_text_default: 'When true, Mattermost can act as an OAuth 2.0 service provider allowing Mattermost to authorize API requests from external applications. See [documentation](!https://docs.mattermost.com/developer/oauth-2-0-applications.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'ServiceSettings.EnableOnlyAdminIntegrations',\n                        label: t('admin.service.integrationAdmin'),\n                        label_default: 'Restrict managing integrations to Admins:',\n                        help_text: t('admin.service.integrationAdminDesc'),\n                        help_text_default: 'When true, webhooks and slash commands can only be created, edited and viewed by Team and System Admins, and OAuth 2.0 applications by System Admins. Integrations are available to all users after they have been created by the Admin.',\n                        permissions_mapping_name: 'enableOnlyAdminIntegrations',\n                        isHidden: it.licensed,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePostUsernameOverride',\n                        label: t('admin.service.overrideTitle'),\n                        label_default: 'Enable integrations to override usernames:',\n                        help_text: t('admin.service.overrideDescription'),\n                        help_text_default: 'When true, webhooks, slash commands and other integrations, such as [Zapier](!https://docs.mattermost.com/integrations/zapier.html), will be allowed to change the username they are posting as. Note: Combined with allowing integrations to override profile picture icons, users may be able to perform phishing attacks by attempting to impersonate other users.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePostIconOverride',\n                        label: t('admin.service.iconTitle'),\n                        label_default: 'Enable integrations to override profile picture icons:',\n                        help_text: t('admin.service.iconDescription'),\n                        help_text_default: 'When true, webhooks, slash commands and other integrations, such as [Zapier](!https://docs.mattermost.com/integrations/zapier.html), will be allowed to change the profile picture they post with. Note: Combined with allowing integrations to override usernames, users may be able to perform phishing attacks by attempting to impersonate other users.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableUserAccessTokens',\n                        label: t('admin.service.userAccessTokensTitle'),\n                        label_default: 'Enable User Access Tokens: ',\n                        help_text: t('admin.service.userAccessTokensDescription'),\n                        help_text_default: 'When true, users can create [user access tokens](!https://about.mattermost.com/default-user-access-tokens) for integrations in **Account Settings > Security**. They can be used to authenticate against the API and give full access to the account.\\n\\n To manage who can create personal access tokens or to search users by token ID, go to the **User Management > Users** page.',\n                        help_text_markdown: true,\n                    },\n                ],\n            },\n        },\n        bot_accounts: {\n            url: 'integrations/bot_accounts',\n            title: t('admin.integrations.botAccounts'),\n            title_default: 'Bot Accounts',\n            schema: {\n                id: 'BotAccountSettings',\n                name: t('admin.integrations.botAccounts.title'),\n                name_default: 'Bot Accounts',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableBotAccountCreation',\n                        label: t('admin.service.enableBotTitle'),\n                        label_default: 'Enable Bot Account Creation: ',\n                        help_text: t('admin.service.enableBotAccountCreation'),\n                        help_text_default: 'When true, System Admins can create bot accounts for integrations in [Integrations > Bot Accounts]({siteURL}/_redirect/integrations/bots). Bot accounts are similar to user accounts except they cannot be used to log in. See [documentation](https://mattermost.com/pl/default-bot-accounts) to learn more.',\n                        help_text_markdown: true,\n                        help_text_values: {siteURL: getSiteURL()},\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.DisableBotsWhenOwnerIsDeactivated',\n                        label: t('admin.service.disableBotOwnerDeactivatedTitle'),\n                        label_default: 'Disable bot accounts when owner is deactivated:',\n                        help_text: t('admin.service.disableBotWhenOwnerIsDeactivated'),\n                        help_text_default: 'When a user is deactivated, disables all bot accounts managed by the user. To re-enable bot accounts, go to [Integrations > Bot Accounts]({siteURL}/_redirect/integrations/bots).',\n                        help_text_markdown: true,\n                        help_text_values: {siteURL: getSiteURL()},\n                    },\n                ],\n            },\n        },\n        gif: {\n            url: 'integrations/gif',\n            title: t('admin.sidebar.gif'),\n            title_default: 'GIF (Beta)',\n            schema: {\n                id: 'GifSettings',\n                name: t('admin.integrations.gif'),\n                name_default: 'GIF (Beta)',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableGifPicker',\n                        label: t('admin.customization.enableGifPickerTitle'),\n                        label_default: 'Enable GIF Picker:',\n                        help_text: t('admin.customization.enableGifPickerDesc'),\n                        help_text_default: 'Allow users to select GIFs from the emoji picker via a Gfycat integration.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GfycatApiKey',\n                        label: t('admin.customization.gfycatApiKey'),\n                        label_default: 'Gfycat API Key:',\n                        help_text: t('admin.customization.gfycatApiKeyDescription'),\n                        help_text_default: 'Request an API key at [https://developers.gfycat.com/signup/#](!https://developers.gfycat.com/signup/#). Enter the client ID you receive via email to this field. When blank, uses the default API key provided by Gfycat.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GfycatApiSecret',\n                        label: t('admin.customization.gfycatApiSecret'),\n                        label_default: 'Gfycat API Secret:',\n                        help_text: t('admin.customization.gfycatApiSecretDescription'),\n                        help_text_default: 'The API secret generated by Gfycat for your API key. When blank, uses the default API secret provided by Gfycat.',\n                    },\n                ],\n            },\n        },\n        cors: {\n            url: 'integrations/cors',\n            title: t('admin.sidebar.cors'),\n            title_default: 'CORS',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'CORS',\n                name: t('admin.integrations.cors'),\n                name_default: 'CORS',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.AllowCorsFrom',\n                        label: t('admin.service.corsTitle'),\n                        label_default: 'Enable cross-origin requests from:',\n                        placeholder: t('admin.service.corsEx'),\n                        placeholder_default: 'http://example.com',\n                        help_text: t('admin.service.corsDescription'),\n                        help_text_default: 'Enable HTTP Cross origin request from a specific domain. Use \"*\" if you want to allow CORS from any domain or leave it blank to disable it. Should not be set to \"*\" in production.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.CorsExposedHeaders',\n                        label: t('admin.service.corsExposedHeadersTitle'),\n                        label_default: 'CORS Exposed Headers:',\n                        placeholder: t('admin.service.corsHeadersEx'),\n                        placeholder_default: 'X-My-Header',\n                        help_text: t('admin.service.corsExposedHeadersDescription'),\n                        help_text_default: 'Whitelist of headers that will be accessible to the requester.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CorsAllowCredentials',\n                        label: t('admin.service.corsAllowCredentialsLabel'),\n                        label_default: 'CORS Allow Credentials:',\n                        help_text: t('admin.service.corsAllowCredentialsDescription'),\n                        help_text_default: 'When true, requests that pass validation will include the Access-Control-Allow-Credentials header.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CorsDebug',\n                        label: t('admin.service.CorsDebugLabel'),\n                        label_default: 'CORS Debug:',\n                        help_text: t('admin.service.corsDebugDescription'),\n                        help_text_default: 'When true, prints messages to the logs to help when developing an integration that uses CORS. These messages will include the structured key value pair \"source\":\"cors\".',\n                    },\n                ],\n            },\n        },\n    },\n    compliance: {\n        icon: 'fa-list',\n        sectionTitle: t('admin.sidebar.compliance'),\n        sectionTitleDefault: 'Compliance',\n        data_retention: {\n            url: 'compliance/data_retention',\n            title: t('admin.sidebar.dataRetentionPolicy'),\n            title_default: 'Data Retention Policy',\n            isHidden: it.isnt(it.licensedForFeature('DataRetention')),\n            searchableStrings: [\n                'admin.data_retention.title',\n                'admin.data_retention.messageRetentionDays.description',\n                'admin.data_retention.fileRetentionDays.description',\n                ['admin.data_retention.note.description', {documentationLink: ''}],\n                'admin.data_retention.enableMessageDeletion.title',\n                'admin.data_retention.enableMessageDeletion.description',\n                'admin.data_retention.enableFileDeletion.title',\n                'admin.data_retention.enableFileDeletion.description',\n                'admin.data_retention.deletionJobStartTime.title',\n                'admin.data_retention.deletionJobStartTime.description',\n                'admin.data_retention.createJob.title',\n                'admin.data_retention.createJob.help',\n            ],\n            schema: {\n                id: 'DataRetentionSettings',\n                component: DataRetentionSettings,\n            },\n        },\n        message_export: {\n            url: 'compliance/export',\n            title: t('admin.sidebar.complianceExport'),\n            title_default: 'Compliance Export (Beta)',\n            isHidden: it.isnt(it.licensedForFeature('MessageExport')),\n            searchableStrings: [\n                'admin.service.complianceExportTitle',\n                'admin.service.complianceExportDesc',\n                'admin.complianceExport.exportJobStartTime.title',\n                'admin.complianceExport.exportJobStartTime.description',\n                'admin.complianceExport.exportFormat.title',\n                ['admin.complianceExport.exportFormat.description', {siteURL: ''}],\n                'admin.complianceExport.createJob.title',\n                'admin.complianceExport.createJob.help',\n                'admin.complianceExport.globalRelayCustomerType.title',\n                'admin.complianceExport.globalRelayCustomerType.description',\n                'admin.complianceExport.globalRelaySmtpUsername.title',\n                'admin.complianceExport.globalRelaySmtpUsername.description',\n                'admin.complianceExport.globalRelaySmtpPassword.title',\n                'admin.complianceExport.globalRelaySmtpPassword.description',\n                'admin.complianceExport.globalRelayEmailAddress.title',\n                'admin.complianceExport.globalRelayEmailAddress.description',\n            ],\n            schema: {\n                id: 'MessageExportSettings',\n                component: MessageExportSettings,\n            },\n        },\n        audits: {\n            url: 'compliance/monitoring',\n            title: t('admin.sidebar.complianceMonitoring'),\n            title_default: 'Compliance Monitoring',\n            isHidden: it.isnt(it.licensed),\n            searchableStrings: [\n                'admin.audits.title',\n                'admin.audits.reload',\n            ],\n            schema: {\n                id: 'Audits',\n                name: t('admin.compliance.complianceMonitoring'),\n                name_default: 'Compliance Monitoring',\n                component: Audits,\n                isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.compliance.newComplianceExportBanner'),\n                        label_markdown: true,\n                        label_default: 'This feature is replaced by a new [Compliance Export]({siteURL}/admin_console/compliance/export) feature, and will be removed in a future release. We recommend migrating to the new system.',\n                        label_values: {siteURL: getSiteURL()},\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ComplianceSettings.Enable',\n                        label: t('admin.compliance.enableTitle'),\n                        label_default: 'Enable Compliance Reporting:',\n                        help_text: t('admin.compliance.enableDesc'),\n                        help_text_default: 'When true, Mattermost allows compliance reporting from the **Compliance and Auditing** tab. See [documentation](!https://docs.mattermost.com/administration/compliance.html) to learn more.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ComplianceSettings.Directory',\n                        label: t('admin.compliance.directoryTitle'),\n                        label_default: 'Compliance Report Directory:',\n                        help_text: t('admin.compliance.directoryDescription'),\n                        help_text_default: 'Directory to which compliance reports are written. If blank, will be set to ./data/.',\n                        placeholder: t('admin.compliance.directoryExample'),\n                        placeholder_default: 'E.g.: \"./data/\"',\n                        isDisabled: it.stateIsFalse('ComplianceSettings.Enable'),\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ComplianceSettings.EnableDaily',\n                        label: t('admin.compliance.enableDailyTitle'),\n                        label_default: 'Enable Daily Report:',\n                        help_text: t('admin.compliance.enableDailyDesc'),\n                        help_text_default: 'When true, Mattermost will generate a daily compliance report.',\n                        isDisabled: it.stateIsFalse('ComplianceSettings.Enable'),\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                ],\n            },\n        },\n        custom_terms_of_service: {\n            url: 'compliance/custom_terms_of_service',\n            title: t('admin.sidebar.customTermsOfService'),\n            title_default: 'Custom Terms of Service (Beta)',\n            isHidden: it.isnt(it.licensedForFeature('CustomTermsOfService')),\n            searchableStrings: [\n                'admin.support.termsOfServiceTitle',\n                'admin.support.enableTermsOfServiceTitle',\n                'admin.support.enableTermsOfServiceHelp',\n                'admin.support.termsOfServiceTextTitle',\n                'admin.support.termsOfServiceTextHelp',\n                'admin.support.termsOfServiceReAcceptanceTitle',\n                'admin.support.termsOfServiceReAcceptanceHelp',\n            ],\n            schema: {\n                id: 'TermsOfServiceSettings',\n                component: CustomTermsOfServiceSettings,\n            },\n        },\n    },\n    experimental: {\n        icon: 'fa-flask',\n        sectionTitle: t('admin.sidebar.experimental'),\n        sectionTitleDefault: 'Experimental',\n        experimental_features: {\n            url: 'experimental/features',\n            title: t('admin.sidebar.experimentalFeatures'),\n            title_default: 'Features',\n            schema: {\n                id: 'ExperimentalSettings',\n                name: t('admin.experimental.experimentalFeatures'),\n                name_default: 'Experimental Features',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginButtonColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonColor.title'),\n                        label_default: 'AD/LDAP Login Button Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('LDAP')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonBorderColor.title'),\n                        label_default: 'AD/LDAP Login Button Border Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('LDAP')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonTextColor.title'),\n                        label_default: 'AD/LDAP Login Button Text Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('LDAP')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableAuthenticationTransfer',\n                        label: t('admin.experimental.experimentalEnableAuthenticationTransfer.title'),\n                        label_default: 'Allow Authentication Transfer:',\n                        help_text: t('admin.experimental.experimentalEnableAuthenticationTransfer.desc'),\n                        help_text_default: 'When true, users can change their sign-in method to any that is enabled on the server, either via Account Settings or the APIs. When false, Users cannot change their sign-in method, regardless of which authentication options are enabled.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensed), // documented as E20 and higher, but only E10 in the code\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CloseUnusedDirectMessages',\n                        label: t('admin.experimental.closeUnusedDirectMessages.title'),\n                        label_default: 'Autoclose Direct Messages in Sidebar:',\n                        help_text: t('admin.experimental.closeUnusedDirectMessages.desc'),\n                        help_text_default: 'When true, direct message conversations with no activity for 7 days will be hidden from the sidebar. When false, conversations remain in the sidebar until they are manually closed.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ExperimentalSettings.LinkMetadataTimeoutMilliseconds',\n                        label: t('admin.experimental.linkMetadataTimeoutMilliseconds.title'),\n                        label_default: 'Link Metadata Timeout:',\n                        help_text: t('admin.experimental.linkMetadataTimeoutMilliseconds.desc'),\n                        help_text_default: 'The number of milliseconds to wait for metadata from a third-party link. Used with Post Metadata.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.linkMetadataTimeoutMilliseconds.example'),\n                        placeholder_default: 'E.g.: \"5000\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'EmailSettings.EmailBatchingBufferSize',\n                        label: t('admin.experimental.emailBatchingBufferSize.title'),\n                        label_default: 'Email Batching Buffer Size:',\n                        help_text: t('admin.experimental.emailBatchingBufferSize.desc'),\n                        help_text_default: 'Specify the maximum number of notifications batched into a single email.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.emailBatchingBufferSize.example'),\n                        placeholder_default: 'E.g.: \"256\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'EmailSettings.EmailBatchingInterval',\n                        label: t('admin.experimental.emailBatchingInterval.title'),\n                        label_default: 'Email Batching Interval:',\n                        help_text: t('admin.experimental.emailBatchingInterval.desc'),\n                        help_text_default: 'Specify the maximum frequency, in seconds, which the batching job checks for new notifications. Longer batching intervals will increase performance.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.emailBatchingInterval.example'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.LoginButtonColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonColor.title'),\n                        label_default: 'Email Login Button Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the email login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonBorderColor.title'),\n                        label_default: 'Email Login Button Border Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the email login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonTextColor.title'),\n                        label_default: 'Email Login Button Text Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the email login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableUserDeactivation',\n                        label: t('admin.experimental.enableUserDeactivation.title'),\n                        label_default: 'Enable Account Deactivation:',\n                        help_text: t('admin.experimental.enableUserDeactivation.desc'),\n                        help_text_default: 'When true, users may deactivate their own account from **Account Settings > Advanced**. If a user deactivates their own account, they will get an email notification confirming they were deactivated. When false, users may not deactivate their own account.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalEnableAutomaticReplies',\n                        label: t('admin.experimental.experimentalEnableAutomaticReplies.title'),\n                        label_default: 'Enable Automatic Replies:',\n                        help_text: t('admin.experimental.experimentalEnableAutomaticReplies.desc'),\n                        help_text_default: 'When true, users can enable Automatic Replies in **Account Settings > Notifications**. Users set a custom message that will be automatically sent in response to Direct Messages. When false, disables the Automatic Direct Message Replies feature and hides it from Account Settings.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableChannelViewedMessages',\n                        label: t('admin.experimental.enableChannelViewedMessages.title'),\n                        label_default: 'Enable Channel Viewed WebSocket Messages:',\n                        help_text: t('admin.experimental.enableChannelViewedMessages.desc'),\n                        help_text_default: 'This setting determines whether `channel_viewed` WebSocket events are sent, which synchronize unread notifications across clients and devices. Disabling the setting in larger deployments may improve server performance.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ExperimentalSettings.ClientSideCertEnable',\n                        label: t('admin.experimental.clientSideCertEnable.title'),\n                        label_default: 'Enable Client-Side Certification:',\n                        help_text: t('admin.experimental.clientSideCertEnable.desc'),\n                        help_text_default: 'Enables client-side certification for your Mattermost server. See [documentation](!https://docs.mattermost.com/deployment/certificate-based-authentication.html) to learn more.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ExperimentalSettings.ClientSideCertCheck',\n                        label: t('admin.experimental.clientSideCertCheck.title'),\n                        label_default: 'Client-Side Certification Login Method:',\n                        help_text: t('admin.experimental.clientSideCertCheck.desc'),\n                        help_text_default: 'When **primary**, after the client side certificate is verified, user’s email is retrieved from the certificate and is used to log in without a password. When **secondary**, after the client side certificate is verified, user’s email is retrieved from the certificate and matched against the one supplied by the user. If they match, the user logs in with regular email/password credentials.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'primary',\n                                display_name: 'primary',\n                                display_name_default: 'primary',\n                            },\n                            {\n                                value: 'secondary',\n                                display_name: 'secondary',\n                                display_name_default: 'secondary',\n                            },\n                        ],\n                        isDisabled: it.stateIsFalse('ExperimentalSettings.ClientSideCertEnable'),\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableDefaultChannelLeaveJoinMessages',\n                        label: t('admin.experimental.experimentalEnableDefaultChannelLeaveJoinMessages.title'),\n                        label_default: 'Enable Default Channel Leave/Join System Messages:',\n                        help_text: t('admin.experimental.experimentalEnableDefaultChannelLeaveJoinMessages.desc'),\n                        help_text_default: 'This setting determines whether team leave/join system messages are posted in the default town-square channel.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableHardenedMode',\n                        label: t('admin.experimental.experimentalEnableHardenedMode.title'),\n                        label_default: 'Enable Hardened Mode:',\n                        help_text: t('admin.experimental.experimentalEnableHardenedMode.desc'),\n                        help_text_default: 'Enables a hardened mode for Mattermost that makes user experience trade-offs in the interest of security. See [documentation](!https://docs.mattermost.com/administration/config-settings.html#enable-hardened-mode-experimental) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePreviewFeatures',\n                        label: t('admin.experimental.enablePreviewFeatures.title'),\n                        label_default: 'Enable Preview Features:',\n                        help_text: t('admin.experimental.enablePreviewFeatures.desc'),\n                        help_text_default: 'When true, preview features can be enabled from **Account Settings > Advanced > Preview pre-release features**. When false, disables and hides preview features from **Account Settings > Advanced > Preview pre-release features**.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ThemeSettings.EnableThemeSelection',\n                        label: t('admin.experimental.enableThemeSelection.title'),\n                        label_default: 'Enable Theme Selection:',\n                        help_text: t('admin.experimental.enableThemeSelection.desc'),\n                        help_text_default: 'Enables the **Display > Theme** tab in Account Settings so users can select their theme.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ThemeSettings.AllowCustomThemes',\n                        label: t('admin.experimental.allowCustomThemes.title'),\n                        label_default: 'Allow Custom Themes:',\n                        help_text: t('admin.experimental.allowCustomThemes.desc'),\n                        help_text_default: 'Enables the **Display > Theme > Custom Theme** section in Account Settings.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                        isDisabled: it.stateIsFalse('ThemeSettings.EnableThemeSelection'),\n                    },\n\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_LIST,\n                    //     key: 'ThemeSettings.AllowedThemes',\n                    //     label: t('admin.experimental.allowedThemes.title'),\n                    //     label_default: 'Allowed Themes:',\n                    //     help_text: t('admin.experimental.allowedThemes.desc'),\n                    //     help_text_default: 'A comma-separated list of themes that can be chosen by users when \"EnableThemeSelection\" is set to true.',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.allowedThemes.example'),\n                    //     placeholder_default: 'E.g.: \"default, organization, mattermostDark, windows10\"',\n                    //     isHidden: it.isnt(it.licensed), // E10 and higher\n                    //     isDisabled: it.stateIsTrue('ThemeSettings.EnableThemeSelection'),\n                    // },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ThemeSettings.DefaultTheme',\n                        label: t('admin.experimental.defaultTheme.title'),\n                        label_default: 'Default Theme:',\n                        help_text: t('admin.experimental.defaultTheme.desc'),\n                        help_text_default: 'Set a default theme that applies to all new users on the system.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'default',\n                                display_name: 'default',\n                                display_name_default: 'default',\n                            },\n                            {\n                                value: 'organization',\n                                display_name: 'organization',\n                                display_name_default: 'organization',\n                            },\n                            {\n                                value: 'mattermostDark',\n                                display_name: 'mattermostDark',\n                                display_name_default: 'mattermostDark',\n                            },\n                            {\n                                value: 'windows10',\n                                display_name: 'windows10',\n                                display_name_default: 'windows10',\n                            },\n                        ],\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableTutorial',\n                        label: t('admin.experimental.enableTutorial.title'),\n                        label_default: 'Enable Tutorial:',\n                        help_text: t('admin.experimental.enableTutorial.desc'),\n                        help_text_default: 'When true, users are prompted with a tutorial when they open Mattermost for the first time after account creation. When false, the tutorial is disabled, and users are placed in Town Square when they open Mattermost for the first time after account creation.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableUserTypingMessages',\n                        label: t('admin.experimental.enableUserTypingMessages.title'),\n                        label_default: 'Enable User Typing Messages:',\n                        help_text: t('admin.experimental.enableUserTypingMessages.desc'),\n                        help_text_default: 'This setting determines whether \"user is typing...\" messages are displayed below the message box. Disabling the setting in larger deployments may improve server performance.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.TimeBetweenUserTypingUpdatesMilliseconds',\n                        label: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.title'),\n                        label_default: 'User Typing Timeout:',\n                        help_text: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.desc'),\n                        help_text_default: 'The number of milliseconds to wait between emitting user typing websocket events.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.example'),\n                        placeholder_default: 'E.g.: \"5000\"',\n                        isDisabled: it.stateIsFalse('ServiceSettings.EnableUserTypingMessages'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableXToLeaveChannelsFromLHS',\n                        label: t('admin.experimental.enableXToLeaveChannelsFromLHS.title'),\n                        label_default: 'Enable X to Leave Channels from Left-Hand Sidebar:',\n                        help_text: t('admin.experimental.enableXToLeaveChannelsFromLHS.desc'),\n                        help_text_default: 'When true, users can leave Public and Private Channels by clicking the “x” beside the channel name. When false, users must use the **Leave Channel** option from the channel menu to leave channels.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.ExperimentalPrimaryTeam',\n                        label: t('admin.experimental.experimentalPrimaryTeam.title'),\n                        label_default: 'Primary Team:',\n                        help_text: t('admin.experimental.experimentalPrimaryTeam.desc'),\n                        help_text_default: 'The primary team of which users on the server are members. When a primary team is set, the options to join other teams or leave the primary team are disabled.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.experimental.experimentalPrimaryTeam.example'),\n                        placeholder_default: 'E.g.: \"teamname\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonColor.title'),\n                        label_default: 'SAML Login Button Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonBorderColor.title'),\n                        label_default: 'SAML Login Button Border Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonTextColor.title'),\n                        label_default: 'SAML Login Button Text Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalChannelOrganization',\n                        label: t('admin.experimental.experimentalChannelOrganization.title'),\n                        label_default: 'Sidebar Organization:',\n                        help_text: t('admin.experimental.experimentalChannelOrganization.desc'),\n                        help_text_default: 'Enables channel sidebar organization options in **Account Settings > Sidebar > Channel grouping and sorting** including options for grouping unread channels, sorting channels by most recent post and combining all channel types into a single list.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'DisplaySettings.ExperimentalTimezone',\n                        label: t('admin.experimental.experimentalTimezone.title'),\n                        label_default: 'Timezone:',\n                        help_text: t('admin.experimental.experimentalTimezone.desc'),\n                        help_text_default: 'Select the timezone used for timestamps in the user interface and email notifications. When true, the Timezone setting is visible in the Account Settings and a time zone is automatically assigned in the next active session. When false, the Timezone setting is hidden in the Account Settings.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalHideTownSquareinLHS',\n                        label: t('admin.experimental.experimentalHideTownSquareinLHS.title'),\n                        label_default: 'Town Square is Hidden in Left-Hand Sidebar:',\n                        help_text: t('admin.experimental.experimentalHideTownSquareinLHS.desc'),\n                        help_text_default: 'When true, hides Town Square in the left-hand sidebar if there are no unread messages in the channel. When false, Town Square is always visible in the left-hand sidebar even if all messages have been read.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalTownSquareIsReadOnly',\n                        label: t('admin.experimental.experimentalTownSquareIsReadOnly.title'),\n                        label_default: 'Town Square is Read-Only:',\n                        help_text: t('admin.experimental.experimentalTownSquareIsReadOnly.desc'),\n                        help_text_default: 'When true, only System Admins can post in Town Square. Other members are not able to post, reply, upload files, emoji react or pin messages to Town Square, nor are they able to change the channel name, header or purpose. When false, anyone can post in Town Square.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.UseChannelInEmailNotifications',\n                        label: t('admin.experimental.useChannelInEmailNotifications.title'),\n                        label_default: 'Use Channel Name in Email Notifications:',\n                        help_text: t('admin.experimental.useChannelInEmailNotifications.desc'),\n                        help_text_default: 'When true, channel and team name appears in email notification subject lines. Useful for servers using only one team. When false, only team name appears in email notification subject line.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.UserStatusAwayTimeout',\n                        label: t('admin.experimental.userStatusAwayTimeout.title'),\n                        label_default: 'User Status Away Timeout:',\n                        help_text: t('admin.experimental.userStatusAwayTimeout.desc'),\n                        help_text_default: 'This setting defines the number of seconds after which the user’s status indicator changes to \"Away\", when they are away from Mattermost.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.userStatusAwayTimeout.example'),\n                        placeholder_default: 'E.g.: \"300\"',\n                    }, // eslint-disable-next-line lines-around-comment\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_BOOL,\n                    //     key: 'ServiceSettings.ExperimentalStrictCSRFEnforcement',\n                    //     label: t('admin.experimental.experimentalStrictCSRFEnforcement.title'),\n                    //     label_default: 'TODO:',\n                    //     help_text: t('admin.experimental.experimentalStrictCSRFEnforcement.desc'),\n                    //     help_text_default: 'TODO',\n                    //     help_text_markdown: false,\n                    // },\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_LIST,\n                    //     key: 'TeamSettings.ExperimentalDefaultChannels',\n                    //     label: t('admin.experimental.experimentalDefaultChannels.title'),\n                    //     label_default: 'Default Channels:',\n                    //     help_text: t('admin.experimental.experimentalDefaultChannels.desc'),\n                    //     help_text_default: 'A comma-separated list of default channels every user is added to automatically after joining a new team. Only applies to public channels, but affects all teams on the server. When not set, every user is added to `off-topic` and `town-square` channel by default. Note that even if `town-square` is not listed, every user is added to that channel after joining a new team.',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.experimentalDefaultChannels.example'),\n                    //     placeholder_default: 'E.g.: \"channel1, channel2, off-topic\"',\n                    // },\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_TEXT,\n                    //     key: 'EmailSettings.ReplyToAddress',\n                    //     label: t('admin.experimental.replyToAddress.title'),\n                    //     label_default: 'Reply To Address:',\n                    //     help_text: t('admin.experimental.replyToAddress.desc'),\n                    //     help_text_default: 'TODO',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.replyToAddress.example'),\n                    //     placeholder_default: 'E.g.: \"reply-to@example.com\"',\n                    // },\n                ],\n            },\n        },\n    },\n};\n\nt('admin.field_names.allowBannerDismissal');\nt('admin.field_names.bannerColor');\nt('admin.field_names.bannerText');\nt('admin.field_names.bannerTextColor');\nt('admin.field_names.enableBanner');\nt('admin.field_names.enableCommands');\nt('admin.field_names.enableConfirmNotificationsToChannel');\nt('admin.field_names.enableIncomingWebhooks');\nt('admin.field_names.enableOAuthServiceProvider');\nt('admin.field_names.enableOutgoingWebhooks');\nt('admin.field_names.enablePostIconOverride');\nt('admin.field_names.enablePostUsernameOverride');\nt('admin.field_names.enableUserAccessTokens');\nt('admin.field_names.enableUserCreation');\nt('admin.field_names.maxChannelsPerTeam');\nt('admin.field_names.maxNotificationsPerChannel');\nt('admin.field_names.maxUsersPerTeam');\nt('admin.field_names.postEditTimeLimit');\nt('admin.field_names.restrictCreationToDomains');\nt('admin.field_names.restrictDirectMessage');\nt('admin.field_names.teammateNameDisplay');\n\nexport default AdminDefinition;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst SECTION_NONE = (\n    <tr>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityNone'\n                defaultMessage='None'\n            />\n        </td>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityNoneDescription'\n                defaultMessage='Mattermost will connect over an insecure connection.'\n            />\n        </td>\n    </tr>\n);\n\nconst SECTION_TLS = (\n    <tr>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityTls'\n                defaultMessage='TLS'\n            />\n        </td>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityTlsDescription'\n                defaultMessage='Encrypts the communication between Mattermost and your server.'\n            />\n        </td>\n    </tr>\n);\n\nconst SECTION_STARTTLS = (\n    <tr>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityStart'\n                defaultMessage='STARTTLS'\n            />\n        </td>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityStartDescription'\n                defaultMessage='Takes an existing insecure connection and attempts to upgrade it to a secure connection using TLS.'\n            />\n        </td>\n    </tr>\n);\n\nexport const CONNECTION_SECURITY_HELP_TEXT_EMAIL = (\n    <table\n        className='table table-bordered table-margin--none'\n        cellPadding='5'\n    >\n        <tbody>\n            {SECTION_NONE}\n            {SECTION_TLS}\n            {SECTION_STARTTLS}\n        </tbody>\n    </table>\n);\n\nexport const CONNECTION_SECURITY_HELP_TEXT_LDAP = (\n    <table\n        className='table table-bordered table-margin--none'\n        cellPadding='5'\n    >\n        <tbody>\n            {SECTION_NONE}\n            {SECTION_TLS}\n            {SECTION_STARTTLS}\n        </tbody>\n    </table>\n);\n\nexport const CONNECTION_SECURITY_HELP_TEXT_WEBSERVER = (\n    <table\n        className='table table-bordered table-margin--none'\n        cellPadding='5'\n    >\n        <tbody>\n            {SECTION_NONE}\n            {SECTION_TLS}\n        </tbody>\n    </table>\n);\n\nexport const WEBSERVER_MODE_HELP_TEXT = (\n    <div>\n        <table\n            className='table table-bordered table-margin--none'\n            cellPadding='5'\n        >\n            <tbody>\n                <tr>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeGzip'\n                            defaultMessage='gzip'\n                        />\n                    </td>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeGzipDescription'\n                            defaultMessage='The Mattermost server will serve static files compressed with gzip.'\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeUncompressed'\n                            defaultMessage='Uncompressed'\n                        />\n                    </td>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeUncompressedDescription'\n                            defaultMessage='The Mattermost server will serve static files uncompressed.'\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeDisabled'\n                            defaultMessage='Disabled'\n                        />\n                    </td>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeDisabledDescription'\n                            defaultMessage='The Mattermost server will not serve static files.'\n                        />\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <p className='help-text'>\n            <FormattedMessage\n                id='admin.webserverModeHelpText'\n                defaultMessage='gzip compression applies to static content files. It is recommended to enable gzip to improve performance unless your environment has specific restrictions, such as a web proxy that distributes gzip files poorly.'\n            />\n        </p>\n    </div>\n);\n\nexport const LOG_LEVEL_OPTIONS = [\n    {\n        value: 'DEBUG',\n        display_name: 'DEBUG',\n        display_name_default: 'DEBUG',\n    },\n    {\n        value: 'INFO',\n        display_name: 'INFO',\n        display_name_default: 'INFO',\n    },\n    {\n        value: 'ERROR',\n        display_name: 'ERROR',\n        display_name_default: 'ERROR',\n    },\n];\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage, intlShape} from 'react-intl';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\n\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {ModalIdentifiers} from 'utils/constants';\n\nimport AboutBuildModal from 'components/about_build_modal';\n\nimport Menu from 'components/widgets/menu/menu';\n\nimport MenuItemBlockableLink from './menu_item_blockable_link';\n\nexport default class AdminNavbarDropdown extends React.Component {\n    static propTypes = {\n        locale: PropTypes.string.isRequired,\n        siteName: PropTypes.string,\n        navigationBlocked: PropTypes.bool,\n        teams: PropTypes.arrayOf(PropTypes.object).isRequired,\n        actions: PropTypes.shape({\n            deferNavigation: PropTypes.func,\n        }).isRequired,\n    }\n\n    static contextTypes = {\n        intl: intlShape.isRequired,\n    };\n\n    handleLogout = (e) => {\n        if (this.props.navigationBlocked) {\n            e.preventDefault();\n            this.props.actions.deferNavigation(GlobalActions.emitUserLoggedOutEvent);\n        } else {\n            GlobalActions.emitUserLoggedOutEvent();\n        }\n    };\n\n    render() {\n        const {locale, teams, siteName} = this.props;\n        const {formatMessage} = this.context.intl;\n        const teamToRender = []; // Array of team components\n        let switchTeams;\n\n        if (teams && teams.length > 0) {\n            const teamsArray = filterAndSortTeamsByDisplayName(teams, locale);\n\n            for (const team of teamsArray) {\n                teamToRender.push(\n                    <MenuItemBlockableLink\n                        key={'team_' + team.name}\n                        to={'/' + team.name}\n                        text={Utils.localizeMessage('navbar_dropdown.switchTo', 'Switch to ') + ' ' + team.display_name}\n                    />\n                );\n            }\n        } else {\n            switchTeams = (\n                <MenuItemBlockableLink\n                    to={'/select_team'}\n                    icon={\n                        <FormattedMessage\n                            id='select_team.icon'\n                            defaultMessage='Select Team Icon'\n                        >\n                            {(title) => (\n                                <i\n                                    className='fa fa-exchange'\n                                    title={title}\n                                />\n                            )}\n                        </FormattedMessage>\n                    }\n                    text={Utils.localizeMessage('admin.nav.switch', 'Team Selection')}\n                />\n            );\n        }\n\n        return (\n            <Menu ariaLabel={Utils.localizeMessage('admin.nav.menuAriaLabel', 'Admin Console Menu')}>\n                <Menu.Group>\n                    {teamToRender}\n                    {switchTeams}\n                </Menu.Group>\n                <Menu.Group>\n                    <Menu.ItemExternalLink\n                        url='https://about.mattermost.com/administrators-guide/'\n                        text={Utils.localizeMessage('admin.nav.administratorsGuide', 'Administrator Guide')}\n                    />\n                    <Menu.ItemExternalLink\n                        url='https://about.mattermost.com/troubleshooting-forum/'\n                        text={Utils.localizeMessage('admin.nav.troubleshootingForum', 'Troubleshooting Forum')}\n                    />\n                    <Menu.ItemExternalLink\n                        url='https://about.mattermost.com/commercial-support/'\n                        text={Utils.localizeMessage('admin.nav.commercialSupport', 'Commercial Support')}\n                    />\n                    <Menu.ItemToggleModalRedux\n                        modalId={ModalIdentifiers.ABOUT}\n                        dialogType={AboutBuildModal}\n                        text={formatMessage({id: 'navbar_dropdown.about', defaultMessage: 'About {appTitle}'}, {appTitle: siteName || 'Mattermost'})}\n                    />\n                </Menu.Group>\n                <Menu.Group>\n                    <Menu.ItemAction\n                        onClick={this.handleLogout}\n                        text={Utils.localizeMessage('navbar_dropdown.logout', 'Logout')}\n                    />\n                </Menu.Group>\n            </Menu>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getMyTeams} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {deferNavigation} from 'actions/admin_actions.jsx';\nimport {getCurrentLocale} from 'selectors/i18n';\nimport {getNavigationBlocked} from 'selectors/views/admin';\n\nimport AdminNavbarDropdown from './admin_navbar_dropdown.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        locale: getCurrentLocale(state),\n        teams: getMyTeams(state),\n        siteName: getConfig(state).SiteName,\n        navigationBlocked: getNavigationBlocked(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deferNavigation,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbarDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport menuItem from 'components/widgets/menu/menu_items/menu_item';\n\nexport const MenuItemBlockableLinkImpl = ({to, text}) => <BlockableLink to={to}>{text}</BlockableLink>;\nMenuItemBlockableLinkImpl.propTypes = {\n    to: PropTypes.string.isRequired,\n    text: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n};\n\nconst MenuItemBlockableLink = menuItem(MenuItemBlockableLinkImpl);\nMenuItemBlockableLink.displayName = 'MenuItemBlockableLinkImpl';\n\nexport default MenuItemBlockableLink;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Overlay, Tooltip} from 'react-bootstrap';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport SaveButton from 'components/save_button';\nimport FormError from 'components/form_error';\n\nimport AdminHeader from 'components/widgets/admin_console/admin_header';\n\ntype Props = {\n    config?: object;\n    environmentConfig?: object;\n    setNavigationBlocked?: (blocked: boolean) => void;\n    updateConfig?: (config: object) => {data: object; error: ClientErrorPlaceholder};\n}\n\ntype State = {\n    saveNeeded: boolean;\n    saving: boolean;\n    serverError: string|null;\n    serverErrorId?: string;\n    errorTooltip: boolean;\n}\n\ntype StateKeys = keyof State;\n\n// Placeholder type until ClientError is exported from redux.\n// TODO: remove ClientErrorPlaceholder and change the return type of updateConfig\ntype ClientErrorPlaceholder = {\n    message: string;\n    server_error_id: string;\n}\n\nexport default abstract class AdminSettings extends React.Component<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n        const stateInit = {\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n        };\n        if (props.config) {\n            this.state = Object.assign(this.getStateFromConfig(props.config), stateInit);\n        } else {\n            this.state = stateInit;\n        }\n    }\n\n    protected abstract getStateFromConfig(config: object): State;\n\n    protected abstract getConfigFromState(config: object): object;\n\n    protected abstract renderTitle(): React.ReactElement;\n\n    protected abstract renderSettings(): React.ReactElement;\n\n    protected handleSaved?: ((config: object) => React.ReactElement);\n\n    protected canSave?: () => boolean;\n\n    private closeTooltip = () => {\n        this.setState({errorTooltip: false});\n    }\n\n    private openTooltip = (e: React.MouseEvent) => {\n        const elm: HTMLElement|null = e.currentTarget.querySelector('.control-label');\n        if (elm) {\n            const isElipsis = elm.offsetWidth < elm.scrollWidth;\n            this.setState({errorTooltip: isElipsis});\n        }\n    }\n\n    private handleChange = (id: StateKeys, value: any) => {\n        this.setState((prevState) => ({\n            ...prevState,\n            saveNeeded: true,\n            [id]: value,\n        }));\n\n        if (this.props.setNavigationBlocked) {\n            this.props.setNavigationBlocked(true);\n        }\n    };\n\n    private handleSubmit = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n\n        this.doSubmit();\n    }\n\n    private doSubmit = async (callback?: () => void) => {\n        this.setState({\n            saving: true,\n            serverError: null,\n        });\n\n        // clone config so that we aren't modifying data in the stores\n        let config = JSON.parse(JSON.stringify(this.props.config));\n        config = this.getConfigFromState(config);\n\n        if (this.props.updateConfig) {\n            const {data, error} = await this.props.updateConfig(config);\n\n            if (data) {\n                this.setState(this.getStateFromConfig(data));\n\n                this.setState({\n                    saveNeeded: false,\n                    saving: false,\n                });\n\n                if (this.props.setNavigationBlocked) {\n                    this.props.setNavigationBlocked(false);\n                }\n\n                if (callback) {\n                    callback();\n                }\n\n                if (this.handleSaved) {\n                    this.handleSaved(config);\n                }\n            } else if (error) {\n                this.setState({\n                    saving: false,\n                    serverError: error.message,\n                    serverErrorId: error.server_error_id,\n                });\n\n                if (callback) {\n                    callback();\n                }\n\n                if (this.handleSaved) {\n                    this.handleSaved(config);\n                }\n            }\n        }\n    };\n\n    private parseInt = (str: string, defaultValue?: number) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n)) {\n            if (defaultValue) {\n                return defaultValue;\n            }\n            return 0;\n        }\n\n        return n;\n    };\n\n    private parseIntNonNegative = (str: string, defaultValue?: number) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n) || n < 0) {\n            if (defaultValue) {\n                return defaultValue;\n            }\n            return 0;\n        }\n\n        return n;\n    };\n\n    private parseIntNonZero = (str: string, defaultValue?: number, minimumValue = 1) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n) || n < minimumValue) {\n            if (defaultValue) {\n                return defaultValue;\n            }\n            return 1;\n        }\n\n        return n;\n    };\n\n    private getConfigValue(config: object, path: string) {\n        const pathParts = path.split('.');\n\n        return pathParts.reduce((obj: object|null, pathPart) => {\n            if (!obj) {\n                return null;\n            }\n            return obj[(pathPart as keyof object)];\n        }, config);\n    }\n\n    private setConfigValue(config: object, path: string, value: any) {\n        function setValue(obj: object, pathParts: string[]) {\n            const part = pathParts[0] as keyof object;\n\n            if (pathParts.length === 1) {\n                Object.assign(obj, {[part]: value});\n            } else {\n                if (obj[part] == null) {\n                    Object.assign(obj, {[part]: {}});\n                }\n\n                setValue(obj[part], pathParts.slice(1));\n            }\n        }\n\n        setValue(config, path.split('.'));\n    }\n\n    private isSetByEnv = (path: string) => {\n        return Boolean(this.props.environmentConfig && this.getConfigValue(this.props.environmentConfig, path));\n    };\n\n    public render() {\n        return (\n            <form\n                className='form-horizontal'\n                role='form'\n                onSubmit={this.handleSubmit}\n            >\n                <div className='wrapper--fixed'>\n                    <AdminHeader>\n                        {this.renderTitle()}\n                    </AdminHeader>\n                    {this.renderSettings()}\n                    <div className='admin-console-save'>\n                        <SaveButton\n                            saving={this.state.saving}\n                            disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                            onClick={this.handleSubmit}\n                            savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\n                        />\n                        <div\n                            className='error-message'\n                            ref='errorMessage'\n                            onMouseOver={this.openTooltip}\n                            onMouseOut={this.closeTooltip}\n                        >\n                            <FormError error={this.state.serverError}/>\n                        </div>\n                        <Overlay\n                            show={this.state.errorTooltip}\n                            placement='top'\n                            target={this.refs.errorMessage}\n                        >\n                            <Tooltip id='error-tooltip' >\n                                {this.state.serverError}\n                            </Tooltip>\n                        </Overlay>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage, intlShape} from 'react-intl';\nimport {Tooltip, OverlayTrigger} from 'react-bootstrap';\nimport Scrollbars from 'react-custom-scrollbars';\nimport isEqual from 'lodash/isEqual';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants';\nimport {generateIndex} from 'utils/admin_console_index.jsx';\nimport {browserHistory} from 'utils/browser_history';\n\nimport AdminSidebarCategory from 'components/admin_console/admin_sidebar_category.jsx';\nimport AdminSidebarHeader from 'components/admin_console/admin_sidebar_header';\nimport AdminSidebarSection from 'components/admin_console/admin_sidebar_section.jsx';\nimport Highlight from 'components/admin_console/highlight';\nimport SearchIcon from 'components/widgets/icons/search_icon.jsx';\n\nconst renderScrollView = (props) => (\n    <div\n        {...props}\n        className='scrollbar--view'\n    />\n);\n\nconst renderScrollThumbHorizontal = (props) => (\n    <div\n        {...props}\n        className='scrollbar--horizontal'\n    />\n);\n\nconst renderScrollThumbVertical = (props) => (\n    <div\n        {...props}\n        className='scrollbar--vertical'\n    />\n);\n\nexport default class AdminSidebar extends React.Component {\n    static get contextTypes() {\n        return {\n            intl: intlShape.isRequired,\n        };\n    }\n\n    static propTypes = {\n        license: PropTypes.object.isRequired,\n        config: PropTypes.object,\n        plugins: PropTypes.object,\n        adminDefinition: PropTypes.object,\n        buildEnterpriseReady: PropTypes.bool,\n        siteName: PropTypes.string,\n        onFilterChange: PropTypes.func.isRequired,\n        navigationBlocked: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get installed plugins\n             */\n            getPlugins: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        plugins: {},\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            sections: null,\n            filter: '',\n        };\n        this.idx = null;\n        this.searchRef = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.config.PluginSettings.Enable) {\n            this.props.actions.getPlugins();\n        }\n\n        if (this.searchRef.current) {\n            this.searchRef.current.focus();\n        }\n\n        this.updateTitle();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.idx !== null &&\n            (!isEqual(this.props.plugins, prevProps.plugins) ||\n                !isEqual(this.props.adminDefinition, prevProps.adminDefinition))) {\n            this.idx = generateIndex(this.props.adminDefinition, this.props.plugins, this.context.intl);\n        }\n    }\n\n    onFilterChange = (e) => {\n        const filter = e.target.value;\n        if (filter === '') {\n            this.setState({sections: null, filter});\n            this.props.onFilterChange(filter);\n            return;\n        }\n\n        if (this.idx === null) {\n            this.idx = generateIndex(this.props.adminDefinition, this.props.plugins, this.context.intl);\n        }\n        let query = '';\n        for (const term of filter.split(' ')) {\n            term.trim();\n            if (term !== '') {\n                query += term + ' ';\n                query += term + '* ';\n            }\n        }\n        const sections = this.idx.search(query);\n        this.setState({sections, filter});\n        this.props.onFilterChange(filter);\n\n        if (this.props.navigationBlocked) {\n            return;\n        }\n\n        const validSection = sections.indexOf(browserHistory.location.pathname.replace('/admin_console/', '')) !== -1;\n        if (!validSection) {\n            const visibleSections = this.visibleSections();\n            for (const section of sections) {\n                if (visibleSections.has(section)) {\n                    browserHistory.replace('/admin_console/' + section);\n                    break;\n                }\n            }\n        }\n    }\n\n    updateTitle = () => {\n        let currentSiteName = '';\n        if (this.props.siteName) {\n            currentSiteName = ' - ' + this.props.siteName;\n        }\n\n        document.title = Utils.localizeMessage('sidebar_right_menu.console', 'System Console') + currentSiteName;\n    }\n\n    visibleSections = () => {\n        const isVisible = (item) => {\n            if (!item.schema) {\n                return false;\n            }\n\n            if (!item.title) {\n                return false;\n            }\n\n            if (item.isHidden && item.isHidden(this.props.config, {}, this.props.license, this.props.buildEnterpriseReady)) {\n                return false;\n            }\n            return true;\n        };\n        const result = new Set();\n        for (const section of Object.values(this.props.adminDefinition)) {\n            for (const item of Object.values(section)) {\n                if (isVisible(item)) {\n                    result.add(item.url);\n                }\n            }\n        }\n        return result;\n    }\n\n    renderRootMenu = (definition) => {\n        const sidebarSections = [];\n        Object.values(definition).forEach((section, sectionIndex) => {\n            const sidebarItems = [];\n            Object.values(section).forEach((item, itemIndex) => {\n                if (!item.title) {\n                    return;\n                }\n\n                if (item.isHidden && item.isHidden(this.props.config, {}, this.props.license, this.props.buildEnterpriseReady)) {\n                    return;\n                }\n\n                if (this.state.sections !== null) {\n                    let active = false;\n                    for (const url of this.state.sections) {\n                        if (url === item.url) {\n                            active = true;\n                        }\n                    }\n                    if (!active) {\n                        return;\n                    }\n                }\n\n                sidebarItems.push((\n                    <AdminSidebarSection\n                        key={itemIndex}\n                        name={item.url}\n                        title={\n                            <FormattedMessage\n                                id={item.title}\n                                defaultMessage={item.title_default}\n                            />\n                        }\n                    />\n                ));\n            });\n\n            // Special case for plugins entries\n            let moreSidebarItems = [];\n            if (section.id === 'plugins') {\n                moreSidebarItems = this.renderPluginsMenu();\n            }\n\n            // If no visible items, don't display this section\n            if (sidebarItems.length === 0 && moreSidebarItems.length === 0) {\n                return null;\n            }\n\n            if (sidebarItems.length || moreSidebarItems.length) {\n                sidebarSections.push((\n                    <AdminSidebarCategory\n                        key={sectionIndex}\n                        parentLink='/admin_console'\n                        icon={section.icon}\n                        sectionClass=''\n                        title={\n                            <FormattedMessage\n                                id={section.sectionTitle}\n                                defaultMessage={section.sectionTitleDefault}\n                            />\n                        }\n                    >\n                        {sidebarItems}\n                        {moreSidebarItems}\n                    </AdminSidebarCategory>\n                ));\n            }\n            return null;\n        });\n        return sidebarSections;\n    }\n\n    renderPluginsMenu = () => {\n        const customPlugins = [];\n        if (this.props.config.PluginSettings.Enable) {\n            Object.values(this.props.plugins).sort((a, b) => {\n                const nameCompare = a.name.localeCompare(b.name);\n                if (nameCompare !== 0) {\n                    return nameCompare;\n                }\n\n                return a.id.localeCompare(b.id);\n            }).forEach((p) => {\n                const hasSettings = p.settings_schema && (p.settings_schema.header || p.settings_schema.footer || p.settings_schema.settings);\n                if (!hasSettings) {\n                    return;\n                }\n\n                if (p.settings_schema.settings && (!p.settings_schema.header && !p.settings_schema.footer)) {\n                    if (p.settings_schema.settings.hasOwnProperty('length')) {\n                        if (p.settings_schema.settings.length === 0) {\n                            return;\n                        }\n                    }\n                }\n\n                if (this.state.sections !== null && this.state.sections.indexOf(`plugin_${p.id}`) === -1) {\n                    return;\n                }\n                customPlugins.push(\n                    <AdminSidebarSection\n                        key={'customplugin' + p.id}\n                        name={'plugins/plugin_' + p.id}\n                        title={p.name}\n                    />\n                );\n            });\n        }\n        return customPlugins;\n    }\n\n    handleClearFilter = () => {\n        this.setState({sections: null, filter: ''});\n        this.props.onFilterChange('');\n    }\n\n    render() {\n        const filterClearTooltip = (\n            <Tooltip id='admin-sidebar-fitler-clear'>\n                <FormattedMessage\n                    id='admin.sidebar.filter-clear'\n                    defaultMessage='Clear search'\n                />\n            </Tooltip>\n        );\n        return (\n            <div className='admin-sidebar'>\n                <AdminSidebarHeader/>\n                <Scrollbars\n                    ref='scrollbar'\n                    autoHide={true}\n                    autoHideTimeout={500}\n                    autoHideDuration={500}\n                    renderThumbHorizontal={renderScrollThumbHorizontal}\n                    renderThumbVertical={renderScrollThumbVertical}\n                    renderView={renderScrollView}\n                >\n                    <div className='nav-pills__container'>\n                        <Highlight filter={this.state.filter}>\n                            <ul className='nav nav-pills nav-stacked'>\n                                <li className='filter-container'>\n                                    <SearchIcon\n                                        className='search__icon'\n                                        aria-hidden='true'\n                                    />\n                                    <input\n                                        className={'filter ' + (this.state.filter ? 'active' : '')}\n                                        type='text'\n                                        onChange={this.onFilterChange}\n                                        value={this.state.filter}\n                                        placeholder={Utils.localizeMessage('admin.sidebar.filter', 'Find settings')}\n                                        ref={this.searchRef}\n                                        id='adminSidebarFilter'\n                                    />\n                                    {this.state.filter &&\n                                        <div\n                                            className='sidebar__search-clear visible'\n                                            onClick={this.handleClearFilter}\n                                        >\n                                            <OverlayTrigger\n                                                delayShow={Constants.OVERLAY_TIME_DELAY}\n                                                placement='bottom'\n                                                overlay={filterClearTooltip}\n                                            >\n                                                <span\n                                                    className='sidebar__search-clear-x'\n                                                    aria-hidden='true'\n                                                >\n                                                    {'×'}\n                                                </span>\n                                            </OverlayTrigger>\n                                        </div>}\n                                </li>\n                                {this.renderRootMenu(this.props.adminDefinition)}\n                            </ul>\n                        </Highlight>\n                    </div>\n                </Scrollbars>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getPlugins} from 'mattermost-redux/actions/admin';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {getNavigationBlocked} from 'selectors/views/admin';\nimport {getAdminDefinition} from 'selectors/admin_console';\n\nimport AdminSidebar from './admin_sidebar.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n    const buildEnterpriseReady = config.BuildEnterpriseReady === 'true';\n    const siteName = config.SiteName;\n    const adminDefinition = getAdminDefinition(state);\n\n    return {\n        license,\n        config: state.entities.admin.config,\n        plugins: state.entities.admin.plugins,\n        navigationBlocked: getNavigationBlocked(state),\n        buildEnterpriseReady,\n        siteName,\n        adminDefinition,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getPlugins,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(AdminSidebar);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {NavLink, Route} from 'react-router-dom';\n\nexport default class AdminSidebarCategory extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string,\n            title: PropTypes.node.isRequired,\n            icon: PropTypes.string.isRequired,\n            sectionClass: PropTypes.string,\n            parentLink: PropTypes.string,\n            children: PropTypes.node,\n            action: PropTypes.node,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n        };\n    }\n\n    render() {\n        let link = this.props.parentLink;\n        let title = (\n            <div className='category-title category-title--active'>\n                <i className={'category-icon fa ' + this.props.icon}/>\n                <span className='category-title__text'>\n                    {this.props.title}\n                </span>\n                {this.props.action}\n            </div>\n        );\n\n        if (this.props.name) {\n            link += '/' + name;\n            title = (\n                <NavLink\n                    to={link}\n                    className='category-title'\n                    activeClassName='category-title category-title--active'\n                >\n                    {title}\n                </NavLink>\n            );\n        }\n\n        let clonedChildren = null;\n        if (this.props.children) {\n            clonedChildren = (\n                <Route\n                    path={link}\n                    render={() => (\n                        <ul className={'sections ' + this.props.sectionClass}>\n                            {\n                                React.Children.map(this.props.children, (child) => {\n                                    if (child === null) {\n                                        return null;\n                                    }\n\n                                    return React.cloneElement(child, {\n                                        parentLink: link,\n                                    });\n                                })\n                            }\n                        </ul>\n                    )}\n                />\n            );\n        }\n\n        return (\n            <li className='sidebar-category'>\n                {title}\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport MenuIcon from 'components/widgets/icons/menu_icon';\n\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Avatar from 'components/widgets/users/avatar';\n\nimport AdminNavbarDropdown from 'components/admin_console/admin_navbar_dropdown';\n\nexport default class SidebarHeader extends React.Component {\n    static propTypes = {\n        currentUser: PropTypes.object,\n    }\n\n    render() {\n        const me = this.props.currentUser;\n        let profilePicture = null;\n\n        if (!me) {\n            return null;\n        }\n\n        if (me.last_picture_update) {\n            profilePicture = (\n                <Avatar\n                    username={me.username}\n                    url={Client4.getProfilePictureUrl(me.id, me.last_picture_update)}\n                    size='lg'\n                />\n            );\n        }\n\n        return (\n            <MenuWrapper className='AdminSidebarHeader'>\n                <div>\n                    {profilePicture}\n                    <div className='header__info'>\n                        <div className='team__name'>\n                            <FormattedMessage\n                                id='admin.sidebarHeader.systemConsole'\n                                defaultMessage='System Console'\n                            />\n                        </div>\n                        <div className='user__name overflow--ellipsis whitespace--nowrap'>{'@' + me.username}</div>\n                    </div>\n                    <button className='style--none'>\n                        <MenuIcon className='menu-icon'/>\n                    </button>\n                </div>\n                <AdminNavbarDropdown/>\n            </MenuWrapper>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport AdminSidebarHeader from './admin_sidebar_header.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        currentUser: getCurrentUser(state),\n    };\n}\n\nexport default connect(mapStateToProps)(AdminSidebarHeader);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class AdminSidebarSection extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            type: PropTypes.string,\n            parentLink: PropTypes.string,\n            subsection: PropTypes.bool,\n            children: PropTypes.node,\n            action: PropTypes.node,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            subsection: false,\n            children: [],\n        };\n    }\n\n    getLink() {\n        return this.props.parentLink + '/' + this.props.name;\n    }\n\n    render() {\n        const link = this.getLink();\n\n        let clonedChildren = null;\n        if (this.props.children) {\n            clonedChildren = (\n                <ul className='nav nav__sub-menu subsections'>\n                    {\n                        React.Children.map(this.props.children, (child) => {\n                            if (child === null) {\n                                return null;\n                            }\n\n                            return React.cloneElement(child, {\n                                parentLink: link,\n                                subsection: true,\n                            });\n                        })\n                    }\n                </ul>\n            );\n        }\n\n        let className = 'sidebar-section';\n        if (this.props.subsection) {\n            className += ' sidebar-subsection';\n        }\n\n        let sidebarItem = (\n            <BlockableLink\n                id={Utils.createSafeId(this.props.name)}\n                className={`${className}-title`}\n                activeClassName={`${className}-title ${className}-title--active`}\n                to={link}\n            >\n                <span className={`${className}-title__text`}>\n                    {this.props.title}\n                </span>\n                {this.props.action}\n            </BlockableLink>\n        );\n\n        if (this.props.type === 'text') {\n            sidebarItem = (\n                <div\n                    className={`${className}-title`}\n                >\n                    <span className={`${className}-title__text`}>\n                        {this.props.title}\n                    </span>\n                    {this.props.action}\n                </div>\n            );\n        }\n\n        return (\n            <li className={className}>\n                {sidebarItem}\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Client4} from 'mattermost-redux/client';\n\nimport ProfilePicture from 'components/profile_picture';\nimport * as Utils from 'utils/utils.jsx';\n\nimport './admin_user_card.scss';\n\nconst Bullet = (props) => {\n    if ((props.user.first_name || props.user.last_name) && props.user.nickname) {\n        return (<span>{' • '}</span>);\n    }\n    return null;\n};\n\nconst AdminUserCard = (props) => (\n    <div className='AdminUserCard'>\n        <div className='AdminUserCard__header'>\n            <ProfilePicture\n                src={Client4.getProfilePictureUrl(props.user.id, props.user.last_picture_update)}\n                size='xxl'\n                wrapperClass='admin-user-card'\n                userId={props.user.id}\n            />\n            <div className='AdminUserCard__user-info'>\n                <span>{props.user.first_name} {props.user.last_name}</span>\n                <Bullet user={props.user}/>\n                <span className='AdminUserCard__user-nickname'>{props.user.nickname}</span>\n            </div>\n            <div className='AdminUserCard__user-id'>\n                {Utils.localizeMessage('admin.userManagement.userDetail.userId', 'User ID:')} {props.user.id}\n            </div>\n        </div>\n        <div className='AdminUserCard__body'>\n            {props.body}\n        </div>\n        <div className='AdminUserCard__footer'>\n            {props.footer}\n        </div>\n    </div>\n);\n\nBullet.propTypes = {\n    user: PropTypes.shape({\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        nickname: PropTypes.string,\n        last_picture_update: PropTypes.number,\n    }),\n};\n\nAdminUserCard.propTypes = {\n    user: PropTypes.shape({\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        nickname: PropTypes.string,\n        last_picture_update: PropTypes.number,\n        id: PropTypes.string,\n    }),\n    body: PropTypes.element,\n    footer: PropTypes.element,\n};\n\nexport default AdminUserCard;\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./admin_user_card.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport ComplianceReports from 'components/admin_console/compliance_reports';\nimport AuditTable from 'components/audit_table';\nimport LoadingScreen from 'components/loading_screen';\n\nimport ReloadIcon from 'components/widgets/icons/fa_reload_icon';\n\nexport default class Audits extends React.PureComponent {\n    static propTypes = {\n        isLicensed: PropTypes.bool.isRequired,\n\n        /*\n         * Array of audits to render\n         */\n        audits: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to fetch audits\n             */\n            getAudits: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loadingAudits: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getAudits().then(\n            () => this.setState({loadingAudits: false})\n        );\n    }\n\n    reload = () => {\n        this.setState({loadingAudits: true});\n        this.props.actions.getAudits().then(\n            () => this.setState({loadingAudits: false})\n        );\n    }\n\n    activityLogHeader = () => {\n        const h4Style = {\n            display: 'inline-block',\n            marginBottom: '6px',\n        };\n        const divStyle = {\n            clear: 'both',\n        };\n        return (\n            <div style={divStyle}>\n                <h4 style={h4Style}>\n                    <FormattedMessage\n                        id='admin.complianceMonitoring.userActivityLogsTitle'\n                        defaultMessage='User Activity Logs'\n                    />\n                </h4>\n                <button\n                    type='submit'\n                    className='btn btn-link pull-right'\n                    onClick={this.reload}\n                >\n                    <ReloadIcon/>\n                    <FormattedMessage\n                        id='admin.audits.reload'\n                        defaultMessage='Reload User Activity Logs'\n                    />\n                </button>\n            </div>\n        );\n    }\n\n    renderComplianceReports = () => {\n        if (!this.props.isLicensed) {\n            return <div/>;\n        }\n        return (\n            <ComplianceReports/>\n        );\n    }\n\n    render() {\n        let content = null;\n\n        if (this.state.loadingAudits) {\n            content = <LoadingScreen/>;\n        } else {\n            content = (\n                <div>\n                    <AuditTable\n                        audits={this.props.audits}\n                        showUserId={true}\n                        showIp={true}\n                        showSession={true}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                {this.renderComplianceReports()}\n                <div className='panel compliance-panel'>\n                    {this.activityLogHeader()}\n                    <div className='compliance-panel__table'>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getAudits} from 'mattermost-redux/actions/admin';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport Audits from './audits.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const isLicensed = license.Compliance === 'true';\n\n    return {\n        isLicensed,\n        audits: Object.values(Selectors.getAudits(state)),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getAudits,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Audits);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    title?: JSX.Element;\n    description: JSX.Element;\n}\n\nconst Banner: React.FC<Props> = (props: Props) => {\n    let title = (\n        <FormattedMessage\n            id='admin.banner.heading'\n            defaultMessage='Note:'\n        />\n    );\n\n    if (props.title) {\n        title = props.title;\n    }\n\n    return (\n        <div className='banner'>\n            <div className='banner__content'>\n                <h4 className='banner__heading'>\n                    {title}\n                </h4>\n                <p>\n                    {props.description}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Banner;","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {NavLink} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\n\nexport default class BlockableLink extends React.Component {\n    static propTypes = {\n\n        /*\n         * Bool whether navigation is blocked\n         */\n        blocked: PropTypes.bool.isRequired,\n\n        /*\n         * String Link destination\n         */\n        to: PropTypes.string.isRequired,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function for deferring navigation while blocked\n             */\n            deferNavigation: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    handleClick = (e) => {\n        if (this.props.blocked) {\n            e.preventDefault();\n\n            this.props.actions.deferNavigation(() => {\n                browserHistory.push(this.props.to);\n            });\n        }\n    };\n\n    render() {\n        const props = {...this.props};\n        Reflect.deleteProperty(props, 'blocked');\n        Reflect.deleteProperty(props, 'actions');\n\n        return (\n            <NavLink\n                {...props}\n                onClick={this.handleClick}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {deferNavigation} from 'actions/admin_actions.jsx';\nimport {getNavigationBlocked} from 'selectors/views/admin';\n\nimport BlockableLink from './blockable_link.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        blocked: getNavigationBlocked(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deferNavigation,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockableLink);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Setting from './setting';\n\ntype Props = {\n    id: string;\n    label: React.ReactNode;\n    value: boolean;\n    onChange: (id: string, foo: boolean) => void;\n    trueText?: React.ReactNode;\n    falseText?: React.ReactNode;\n    disabled: boolean;\n    setByEnv: boolean;\n    disabledText?: React.ReactNode;\n    helpText: React.ReactNode;\n}\n\nexport default class BooleanSetting extends React.Component<Props> {\n    public static defaultProps = {\n        trueText: (\n            <FormattedMessage\n                id='admin.true'\n                defaultMessage='true'\n            />\n        ),\n        falseText: (\n            <FormattedMessage\n                id='admin.false'\n                defaultMessage='false'\n            />\n        ),\n        disabled: false,\n    };\n\n    private handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(this.props.id, e.target.value === 'true');\n    }\n\n    public render() {\n        let helpText;\n        if (this.props.disabled && this.props.disabledText) {\n            helpText = (\n                <div>\n                    <span className='admin-console__disabled-text'>\n                        {this.props.disabledText}\n                    </span>\n                    {this.props.helpText}\n                </div>\n            );\n        } else {\n            helpText = this.props.helpText;\n        }\n\n        return (\n            <Setting\n                inputId={this.props.id}\n                label={this.props.label}\n                helpText={helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                <a id={this.props.id}/>\n                <label className='radio-inline'>\n                    <input\n                        data-testid={this.props.id + 'true'}\n                        type='radio'\n                        value='true'\n                        id={Utils.createSafeId(this.props.id) + 'true'}\n                        name={this.props.id}\n                        checked={this.props.value}\n                        onChange={this.handleChange}\n                        disabled={this.props.disabled || this.props.setByEnv}\n                    />\n                    {this.props.trueText}\n                </label>\n                <label className='radio-inline'>\n                    <input\n                        data-testid={this.props.id + 'false'}\n                        type='radio'\n                        value='false'\n                        id={Utils.createSafeId(this.props.id) + 'false'}\n                        name={this.props.id}\n                        checked={!this.props.value}\n                        onChange={this.handleChange}\n                        disabled={this.props.disabled || this.props.setByEnv}\n                    />\n                    {this.props.falseText}\n                </label>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {uploadBrandImage, deleteBrandImage} from 'actions/admin_actions.jsx';\nimport {Constants} from 'utils/constants';\nimport FormError from 'components/form_error';\n\nconst HTTP_STATUS_OK = 200;\n\nexport default class BrandImageSetting extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Set to disable the setting\n         */\n        disabled: PropTypes.bool.isRequired,\n\n        /*\n        * Set the save needed in the admin schema settings to trigger the save button to turn on\n        */\n        setSaveNeeded: PropTypes.func.isRequired,\n\n        /*\n        * Registers the function suppose to be run when the save button is pressed\n        */\n        registerSaveAction: PropTypes.func.isRequired,\n\n        /*\n        * Unregisters the function on unmount of the component suppose to be run when the save button is pressed\n        */\n        unRegisterSaveAction: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteBrandImage: false,\n            brandImage: null,\n            brandImageExists: false,\n            brandImageTimestamp: Date.now(),\n            error: '',\n        };\n    }\n\n    componentDidMount() {\n        fetch(Client4.getBrandImageUrl(this.state.brandImageTimestamp)).then(\n            (resp) => {\n                if (resp.status === HTTP_STATUS_OK) {\n                    this.setState({brandImageExists: true});\n                } else {\n                    this.setState({brandImageExists: false});\n                }\n            }\n        );\n\n        this.props.registerSaveAction(this.handleSave);\n    }\n\n    componentWillUnmount() {\n        this.props.unRegisterSaveAction(this.handleSave);\n    }\n\n    componentDidUpdate() {\n        if (this.refs.image) {\n            const reader = new FileReader();\n\n            const img = this.refs.image;\n            reader.onload = (e) => {\n                $(img).attr('src', e.target.result);\n            };\n\n            reader.readAsDataURL(this.state.brandImage);\n        }\n    }\n\n    handleImageChange = () => {\n        const element = $(this.refs.fileInput);\n        if (element.prop('files').length > 0) {\n            this.props.setSaveNeeded();\n            this.setState({\n                brandImage: element.prop('files')[0],\n                deleteBrandImage: false,\n            });\n        }\n    }\n\n    handleDeleteButtonPressed = () => {\n        this.setState({deleteBrandImage: true, brandImage: null, brandImageExists: false});\n        this.props.setSaveNeeded();\n    }\n\n    handleSave = async () => {\n        this.setState({\n            error: '',\n        });\n\n        let error;\n        if (this.state.deleteBrandImage) {\n            await deleteBrandImage(\n                () => {\n                    this.setState({\n                        deleteBrandImage: false,\n                        brandImageExists: false,\n                        brandImage: null,\n                    });\n                },\n                (err) => {\n                    error = err;\n                    this.setState({\n                        error: err.message,\n                    });\n                }\n            );\n        } else if (this.state.brandImage) {\n            await uploadBrandImage(\n                this.state.brandImage,\n                () => {\n                    this.setState({\n                        brandImageExists: true,\n                        brandImage: null,\n                        brandImageTimestamp: Date.now(),\n                    });\n                },\n                (err) => {\n                    error = err;\n                    this.setState({\n                        error: err.message,\n                    });\n                }\n            );\n        }\n        return {error};\n    }\n\n    render() {\n        let letbtnDefaultClass = 'btn';\n        if (!this.props.disabled) {\n            letbtnDefaultClass += ' btn-default';\n        }\n\n        let img = null;\n        if (this.state.brandImage) {\n            img = (\n                <div className='remove-image__img margin-bottom x3'>\n                    <img\n                        ref='image'\n                        alt='brand image'\n                        src=''\n                    />\n                </div>\n            );\n        } else if (this.state.brandImageExists) {\n            let overlay;\n            if (!this.props.disabled) {\n                overlay = (\n                    <OverlayTrigger\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                        placement='right'\n                        overlay={(\n                            <Tooltip id='removeIcon'>\n                                <div aria-hidden={true}>\n                                    <FormattedMessage\n                                        id='admin.team.removeBrandImage'\n                                        defaultMessage='Remove brand image'\n                                    />\n                                </div>\n                            </Tooltip>\n                        )}\n                    >\n                        <button\n                            className='remove-image__btn'\n                            onClick={this.handleDeleteButtonPressed}\n                        >\n                            <span aria-hidden={true}>{'×'}</span>\n                        </button>\n                    </OverlayTrigger>\n                );\n            }\n            img = (\n                <div className='remove-image__img margin-bottom x3'>\n                    <img\n                        alt='brand image'\n                        src={Client4.getBrandImageUrl(this.state.brandImageTimestamp)}\n                    />\n                    {overlay}\n                </div>\n            );\n        } else {\n            img = (\n                <p className='margin-top'>\n                    <FormattedMessage\n                        id='admin.team.noBrandImage'\n                        defaultMessage='No brand image uploaded'\n                    />\n                </p>\n            );\n        }\n\n        return (\n            <div className='form-group'>\n                <label className='control-label col-sm-4'>\n                    <FormattedMessage\n                        id='admin.team.brandImageTitle'\n                        defaultMessage='Custom Brand Image:'\n                    />\n                </label>\n                <div className='col-sm-8'>\n                    <div className='remove-image'>\n                        {img}\n                    </div>\n                </div>\n                <div className='col-sm-4'/>\n                <div className='col-sm-8'>\n                    <div className='file__upload margin-top x3'>\n                        <button\n                            className={letbtnDefaultClass}\n                            disabled={this.props.disabled}\n                        >\n                            <FormattedMessage\n                                id='admin.team.chooseImage'\n                                defaultMessage='Select Image'\n                            />\n                        </button>\n                        <input\n                            ref='fileInput'\n                            type='file'\n                            accept='.jpg,.png,.bmp'\n                            disabled={this.props.disabled}\n                            onChange={this.handleImageChange}\n                        />\n                    </div>\n                    <br/>\n                    <FormError error={this.state.error}/>\n                    <p className='help-text no-margin'>\n                        <FormattedHTMLMessage\n                            id='admin.team.uploadDesc'\n                            defaultMessage='Customize your user experience by adding a custom image to your login screen. See examples at <a href=\"http://docs.mattermost.com/administration/config-settings.html#custom-branding\" target=\"_blank\">docs.mattermost.com/administration/config-settings.html#custom-branding</a>.'\n                        />\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport ClusterTableContainer from './cluster_table_container.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class ClusterSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.ClusterSettings.Enable = this.state.Enable;\n        config.ClusterSettings.ClusterName = this.state.ClusterName;\n        config.ClusterSettings.OverrideHostname = this.state.OverrideHostname;\n        config.ClusterSettings.UseIpAddress = this.state.UseIpAddress;\n        config.ClusterSettings.UseExperimentalGossip = this.state.UseExperimentalGossip;\n        config.ClusterSettings.GossipPort = this.parseIntNonZero(this.state.GossipPort, 8074);\n        config.ClusterSettings.StreamingPort = this.parseIntNonZero(this.state.StreamingPort, 8075);\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        const settings = config.ClusterSettings;\n\n        return {\n            Enable: settings.Enable,\n            ClusterName: settings.ClusterName,\n            OverrideHostname: settings.OverrideHostname,\n            UseIpAddress: settings.UseIpAddress,\n            UseExperimentalGossip: settings.UseExperimentalGossip,\n            GossipPort: settings.GossipPort,\n            StreamingPort: settings.StreamingPort,\n            showWarning: false,\n        };\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.advance.cluster'\n                defaultMessage='High Availability'\n            />\n        );\n    }\n\n    overrideHandleChange = (id, value) => {\n        this.setState({\n            showWarning: true,\n        });\n\n        this.handleChange(id, value);\n    }\n\n    renderSettings = () => {\n        const licenseEnabled = this.props.license.IsLicensed === 'true' && this.props.license.Cluster === 'true';\n        if (!licenseEnabled) {\n            return null;\n        }\n\n        var configLoadedFromCluster = null;\n\n        if (Client4.clusterId) {\n            configLoadedFromCluster = (\n                <div\n                    style={style.configLoadedFromCluster}\n                    className='alert alert-warning'\n                >\n                    <WarningIcon/>\n                    <FormattedMarkdownMessage\n                        id='admin.cluster.loadedFrom'\n                        defaultMessage='This configuration file was loaded from Node ID {clusterId}. Please see the Troubleshooting Guide in our [documentation](!http://docs.mattermost.com/deployment/cluster.html) if you are accessing the System Console through a load balancer and experiencing issues.'\n                        values={{\n                            clusterId: Client4.clusterId,\n                        }}\n                    />\n                </div>\n            );\n        }\n\n        var warning = null;\n\n        if (this.state.showWarning) {\n            warning = (\n                <div\n                    style={style.warning}\n                    className='alert alert-warning'\n                >\n                    <WarningIcon/>\n                    <FormattedMarkdownMessage\n                        id='admin.cluster.should_not_change'\n                        defaultMessage='WARNING: These settings may not sync with the other servers in the cluster. High Availability inter-node communication will not start until you modify the config.json to be identical on all servers and restart Mattermost. Please see the [documentation](!http://docs.mattermost.com/deployment/cluster.html) on how to add or remove a server from the cluster. If you are accessing the System Console through a load balancer and experiencing issues, please see the Troubleshooting Guide in our [documentation](!http://docs.mattermost.com/deployment/cluster.html).'\n                    />\n                </div>\n            );\n        }\n\n        var clusterTableContainer = null;\n        if (this.state.Enable) {\n            clusterTableContainer = (<ClusterTableContainer/>);\n        }\n\n        return (\n            <SettingsGroup>\n                {configLoadedFromCluster}\n                {clusterTableContainer}\n                <div className='banner'>\n                    <FormattedMessage\n                        id='admin.cluster.noteDescription'\n                        defaultMessage='Changing properties in this section will require a server restart before taking effect.'\n                    />\n                </div>\n                {warning}\n                <BooleanSetting\n                    id='Enable'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.enableTitle'\n                            defaultMessage='Enable High Availability Mode:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.cluster.enableDescription'\n                            defaultMessage='When true, Mattermost will run in High Availability mode. Please see [documentation](!http://docs.mattermost.com/deployment/cluster.html) to learn more about configuring High Availability for Mattermost.'\n                        />\n                    }\n                    value={this.state.Enable}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.Enable')}\n                />\n                <TextSetting\n                    id='ClusterName'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.ClusterName'\n                            defaultMessage='Cluster Name:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.ClusterNameEx', 'E.g.: \"Production\" or \"Staging\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.ClusterNameDesc'\n                            defaultMessage='The cluster to join by name.  Only nodes with the same cluster name will join together.  This is to support Blue-Green deployments or staging pointing to the same database.'\n                        />\n                    }\n                    value={this.state.ClusterName}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.ClusterName')}\n                />\n                <TextSetting\n                    id='OverrideHostname'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.OverrideHostname'\n                            defaultMessage='Override Hostname:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.OverrideHostnameEx', 'E.g.: \"app-server-01\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.OverrideHostnameDesc'\n                            defaultMessage='The default value of <blank> will attempt to get the Hostname from the OS or use the IP Address.  You can override the hostname of this server with this property.  It is not recommended to override the Hostname unless needed. This property can also be set to a specific IP Address if needed.'\n                        />\n                    }\n                    value={this.state.OverrideHostname}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.OverrideHostname')}\n                />\n                <BooleanSetting\n                    id='UseIpAddress'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.UseIpAddress'\n                            defaultMessage='Use IP Address:'\n                        />\n                    }\n                    helpText={\n                        <FormattedHTMLMessage\n                            id='admin.cluster.UseIpAddressDesc'\n                            defaultMessage='When true, the cluster will attempt to communicate via IP Address vs using the hostname.'\n                        />\n                    }\n                    value={this.state.UseIpAddress}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.UseIpAddress')}\n                />\n                <BooleanSetting\n                    id='UseExperimentalGossip'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.UseExperimentalGossip'\n                            defaultMessage='Use Experimental Gossip:'\n                        />\n                    }\n                    helpText={\n                        <FormattedHTMLMessage\n                            id='admin.cluster.UseExperimentalGossipDesc'\n                            defaultMessage='When true, the server will attempt to communicate via the gossip protocol over the gossip port.  When false the server will attempt to communicate over the streaming port. When false the gossip port and protocol are still used to determine cluster health.'\n                        />\n                    }\n                    value={this.state.UseExperimentalGossip}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.UseExperimentalGossip')}\n                />\n                <TextSetting\n                    id='GossipPort'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.GossipPort'\n                            defaultMessage='Gossip Port:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.GossipPortEx', 'E.g.: \"8074\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.GossipPortDesc'\n                            defaultMessage='The port used for the gossip protocol.  Both UDP and TCP should be allowed on this port.'\n                        />\n                    }\n                    value={this.state.GossipPort}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.GossipPort')}\n                />\n                <TextSetting\n                    id='StreamingPort'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.StreamingPort'\n                            defaultMessage='Streaming Port:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.StreamingPortEx', 'E.g.: \"8075\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.StreamingPortDesc'\n                            defaultMessage='The port used for streaming data between servers.'\n                        />\n                    }\n                    value={this.state.StreamingPort}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.StreamingPort')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n\nconst style = {\n    configLoadedFromCluster: {marginBottom: 10},\n    warning: {marginBottom: 10},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport statusGreen from 'images/status_green.png';\nimport statusYellow from 'images/status_yellow.png';\nimport ReloadIcon from 'components/widgets/icons/fa_reload_icon';\n\nexport default class ClusterTable extends React.Component {\n    static propTypes = {\n        clusterInfos: PropTypes.array.isRequired,\n        reload: PropTypes.func.isRequired,\n    }\n\n    render() {\n        var versionMismatch = (\n            <img\n                alt='version mismatch'\n                className='cluster-status'\n                src={statusGreen}\n            />\n        );\n\n        var configMismatch = (\n            <img\n                alt='config mismatch'\n                className='cluster-status'\n                src={statusGreen}\n            />\n        );\n\n        var version = '';\n        var configHash = '';\n        var singleItem = false;\n\n        if (this.props.clusterInfos.length) {\n            version = this.props.clusterInfos[0].version;\n            configHash = this.props.clusterInfos[0].config_hash;\n            singleItem = this.props.clusterInfos.length === 1;\n        }\n\n        this.props.clusterInfos.map((clusterInfo) => {\n            if (clusterInfo.version !== version) {\n                versionMismatch = (\n                    <img\n                        alt='version mismatch'\n                        className='cluster-status'\n                        src={statusYellow}\n                    />\n                );\n            }\n\n            if (clusterInfo.config_hash !== configHash) {\n                configMismatch = (\n                    <img\n                        alt='config mismatch'\n                        className='cluster-status'\n                        src={statusYellow}\n                    />\n                );\n            }\n\n            return null;\n        });\n\n        var items = this.props.clusterInfos.map((clusterInfo) => {\n            var status = null;\n\n            if (clusterInfo.hostname === '') {\n                clusterInfo.hostname = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\n            }\n\n            if (clusterInfo.version === '') {\n                clusterInfo.version = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\n            }\n\n            if (clusterInfo.config_hash === '') {\n                clusterInfo.config_hash = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\n            }\n\n            if (singleItem) {\n                status = (\n                    <img\n                        alt='Cluster status'\n                        className='cluster-status'\n                        src={statusYellow}\n                    />\n                );\n            } else {\n                status = (\n                    <img\n                        alt='Cluster status'\n                        className='cluster-status'\n                        src={statusGreen}\n                    />\n                );\n            }\n\n            return (\n                <tr key={clusterInfo.ipaddress}>\n                    <td style={style.clusterCell}>{status}</td>\n                    <td style={style.clusterCell}>{clusterInfo.hostname}</td>\n                    <td style={style.clusterCell}>{versionMismatch} {clusterInfo.version}</td>\n                    <td style={style.clusterCell}><div className='config-hash'>{configMismatch} {clusterInfo.config_hash}</div></td>\n                    <td style={style.clusterCell}>{clusterInfo.ipaddress}</td>\n                </tr>\n            );\n        });\n\n        return (\n            <div\n                className='cluster-panel__table'\n                style={style.clusterTable}\n            >\n                <div className='text-right'>\n                    <button\n                        type='submit'\n                        className='btn btn-link'\n                        onClick={this.props.reload}\n                    >\n                        <ReloadIcon/>\n                        <FormattedMessage\n                            id='admin.cluster.status_table.reload'\n                            defaultMessage=' Reload Cluster Status'\n                        />\n                    </button>\n                </div>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.status'\n                                    defaultMessage='Status'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.hostname'\n                                    defaultMessage='Hostname'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.version'\n                                    defaultMessage='Version'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.config_hash'\n                                    defaultMessage='Config File MD5'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.url'\n                                    defaultMessage='Gossip Address'\n                                />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {items}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    clusterTable: {margin: 10, marginBottom: 30},\n    clusterCell: {whiteSpace: 'nowrap'},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {getClusterStatus} from 'actions/admin_actions.jsx';\nimport LoadingScreen from '../loading_screen';\n\nimport ClusterTable from './cluster_table.jsx';\n\nexport default class ClusterTableContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.interval = null;\n\n        this.state = {\n            clusterInfos: null,\n        };\n    }\n\n    load = () => {\n        getClusterStatus(\n            (data) => {\n                this.setState({\n                    clusterInfos: data,\n                });\n            },\n            null\n        );\n    }\n\n    componentDidMount() {\n        this.load();\n\n        // reload the cluster status every 15 seconds\n        this.interval = setInterval(this.load, 15000);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    reload = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.setState({\n            clusterInfos: null,\n        });\n\n        this.load();\n    }\n\n    render() {\n        if (this.state.clusterInfos == null) {\n            return (<LoadingScreen/>);\n        }\n\n        return (\n            <ClusterTable\n                clusterInfos={this.state.clusterInfos}\n                reload={this.reload}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {ChromePicker, ColorResult} from 'react-color';\n\nimport Setting from './setting';\n\ntype State = {\n    showPicker: boolean;\n}\ntype Props = {\n    id: string;\n    label: React.ReactNode;\n    helpText?: React.ReactNode;\n    value: string;\n    onChange?: (id: string, color: string) => void;\n    disabled?: boolean;\n}\n\nexport default class ColorSetting extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showPicker: false,\n        };\n    }\n\n    public componentDidMount() {\n        document.addEventListener('click', this.closePicker);\n    }\n\n    public componentWillUnmount() {\n        document.removeEventListener('click', this.closePicker);\n    }\n\n    private handleChange = (color: ColorResult) => {\n        if (this.props.onChange) {\n            this.props.onChange(this.props.id, color.hex);\n        }\n    }\n\n    private togglePicker = () => {\n        if (this.props.disabled) {\n            this.setState({showPicker: false});\n        } else {\n            this.setState({showPicker: !this.state.showPicker});\n        }\n    }\n\n    private closePicker = (e: MouseEvent) => {\n        if (e.target) {\n            const closest = (e.target as HTMLElement).closest('.' + this.getPickerClass());\n            if (!closest || !closest.contains(e.target as HTMLElement)) {\n                this.setState({showPicker: false});\n            }\n        }\n    }\n\n    private onTextInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (this.props.onChange) {\n            this.props.onChange(this.props.id, e.target.value);\n        }\n    }\n\n    private getPickerClass = () => {\n        return this.props.id ? 'picker-' + this.props.id.replace('.', '-') : '';\n    }\n\n    public render() {\n        let picker;\n        if (this.state.showPicker) {\n            picker = (\n                <div className={'color-picker__popover ' + this.getPickerClass()}>\n                    <ChromePicker\n                        color={this.props.value}\n                        onChange={this.handleChange}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div className='input-group color-picker colorpicker-element'>\n                    <input\n                        type='text'\n                        className='form-control'\n                        value={this.props.value}\n                        onChange={this.onTextInput}\n                        disabled={this.props.disabled}\n                    />\n                    <span\n                        className={'input-group-addon ' + this.getPickerClass()}\n                        onClick={this.togglePicker}\n                    >\n                        <i style={{backgroundColor: this.props.value}}/>\n                    </span>\n                    {picker}\n                </div>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate, FormattedMessage, FormattedTime} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport LoadingScreen from 'components/loading_screen';\nimport ReloadIcon from 'components/widgets/icons/fa_reload_icon';\nimport LocalizedInput from 'components/localized_input/localized_input';\nimport {t} from 'utils/i18n.jsx';\n\nexport default class ComplianceReports extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Set if compliance reports are licensed\n         */\n        isLicensed: PropTypes.bool.isRequired,\n\n        /*\n         * Set if compliance reports are enabled in the config\n         */\n        enabled: PropTypes.bool.isRequired,\n\n        /*\n         * Array of reports to render\n         */\n        reports: PropTypes.arrayOf(PropTypes.object).isRequired,\n        users: PropTypes.object.isRequired,\n\n        /*\n         * Error message to display\n         */\n        serverError: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get compliance reports\n             */\n            getComplianceReports: PropTypes.func.isRequired,\n\n            /*\n             * Function to save compliance reports\n             */\n            createComplianceReport: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loadingReports: true,\n        };\n\n        this.descInput = React.createRef();\n        this.emailsInput = React.createRef();\n        this.fromInput = React.createRef();\n        this.keywordsInput = React.createRef();\n        this.toInput = React.createRef();\n    }\n\n    componentDidMount() {\n        if (!this.props.isLicensed || !this.props.enabled) {\n            return;\n        }\n\n        this.props.actions.getComplianceReports().then(\n            () => this.setState({loadingReports: false})\n        );\n    }\n\n    reload = () => {\n        this.setState({loadingReports: true});\n\n        this.props.actions.getComplianceReports().then(\n            () => this.setState({loadingReports: false})\n        );\n    }\n\n    runReport = (e) => {\n        e.preventDefault();\n\n        this.setState({runningReport: true});\n\n        const job = {};\n        job.desc = this.descInput.current.value;\n        job.emails = this.emailsInput.current.value;\n        job.keywords = this.keywordsInput.current.value;\n        job.start_at = Date.parse(this.fromInput.current.value);\n        job.end_at = Date.parse(this.toInput.current.value);\n\n        this.props.actions.createComplianceReport(job).then(\n            ({data}) => {\n                if (data) {\n                    this.emailsInput.current.value = '';\n                    this.keywordsInput.current.value = '';\n                    this.descInput.current.value = '';\n                    this.fromInput.current.value = '';\n                    this.toInput.current.value = '';\n                }\n                this.setState({runningReport: false});\n                this.props.actions.getComplianceReports();\n            }\n        );\n    }\n\n    getDateTime(millis) {\n        const date = new Date(millis);\n        return (\n            <span style={style.date}>\n                <FormattedDate\n                    value={date}\n                    day='2-digit'\n                    month='short'\n                    year='numeric'\n                />\n                {' - '}\n                <FormattedTime\n                    value={date}\n                    hour='2-digit'\n                    minute='2-digit'\n                />\n            </span>\n        );\n    }\n\n    render() {\n        if (!this.props.isLicensed || !this.props.enabled) {\n            return <div/>;\n        }\n\n        let content = null;\n        if (this.state.loadingReports) {\n            content = <LoadingScreen/>;\n        } else {\n            var list = [];\n\n            for (var i = 0; i < this.props.reports.length; i++) {\n                const report = this.props.reports[i];\n\n                let params = '';\n                if (report.type === 'adhoc') {\n                    params = (\n                        <span>\n                            <FormattedMessage\n                                id='admin.compliance_reports.from'\n                                defaultMessage='From:'\n                            />{' '}{this.getDateTime(report.start_at)}\n                            <br/>\n                            <FormattedMessage\n                                id='admin.compliance_reports.to'\n                                defaultMessage='To:'\n                            />{' '}{this.getDateTime(report.end_at)}\n                            <br/>\n                            <FormattedMessage\n                                id='admin.compliance_reports.emails'\n                                defaultMessage='Emails:'\n                            />{' '}{report.emails}\n                            <br/>\n                            <FormattedMessage\n                                id='admin.compliance_reports.keywords'\n                                defaultMessage='Keywords:'\n                            />{' '}{report.keywords}\n                        </span>);\n                }\n                let download = '';\n                let status = '';\n                if (report.status === 'finished') {\n                    download = (\n                        <a href={`${Client4.getBaseRoute()}/compliance/reports/${report.id}/download`}>\n                            <FormattedMessage\n                                id='admin.compliance_table.download'\n                                defaultMessage='Download'\n                            />\n                        </a>\n                    );\n\n                    status = (\n                        <span className='status-icon-success'>\n                            <FormattedMessage\n                                id='admin.compliance_table.success'\n                                defaultMessage='Success'\n                            />\n                        </span>\n                    );\n                } else if (report.status === 'running') {\n                    status = (\n                        <span className='status-icon-warning'>\n                            <FormattedMessage\n                                id='admin.compliance_table.pending'\n                                defaultMessage='Pending'\n                            />\n                        </span>\n                    );\n                } else if (report.status === 'failed') {\n                    status = (\n                        <span className='status-icon-error'>\n                            <FormattedMessage\n                                id='admin.compliance_table.failed'\n                                defaultMessage='Failed'\n                            />\n                        </span>\n                    );\n                }\n\n                let user = report.user_id;\n                const profile = this.props.users[report.user_id];\n                if (profile) {\n                    user = profile.email;\n                }\n\n                list[i] = (\n                    <tr key={report.id}>\n                        <td>{status}</td>\n                        <td style={style.dataCell}>{download}</td>\n                        <td>{this.getDateTime(report.create_at)}</td>\n                        <td>{report.count}</td>\n                        <td>{report.type}</td>\n                        <td style={style.dataCell}>{report.desc}</td>\n                        <td>{user}</td>\n                        <td style={style.dataCell}>{params}</td>\n                    </tr>\n                );\n            }\n\n            content = (\n                <div style={style.content}>\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.status'\n                                        defaultMessage='Status'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.files'\n                                        defaultMessage='Files'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.timestamp'\n                                        defaultMessage='Timestamp'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.records'\n                                        defaultMessage='Records'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.type'\n                                        defaultMessage='Type'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.desc'\n                                        defaultMessage='Description'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.userId'\n                                        defaultMessage='Requested By'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.params'\n                                        defaultMessage='Params'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {list}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n\n        let serverError = '';\n        if (this.props.serverError) {\n            serverError = (\n                <div\n                    className='form-group has-error'\n                    style={style.serverError}\n                >\n                    <label className='control-label'>{this.props.serverError}</label>\n                </div>\n            );\n        }\n\n        return (\n            <div className='panel compliance-panel'>\n                <h4>\n                    <FormattedMessage\n                        id='admin.compliance_reports.title'\n                        defaultMessage='Compliance Reports'\n                    />\n                </h4>\n                <div className='row'>\n                    <div className='col-sm-6 col-md-4 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.desc'\n                                defaultMessage='Job Name:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='desc'\n                            ref={this.descInput}\n                            placeholder={{id: t('admin.compliance_reports.desc_placeholder'), defaultMessage: 'E.g. \"Audit 445 for HR\"'}}\n                        />\n                    </div>\n                    <div className='col-sm-3 col-md-2 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.from'\n                                defaultMessage='From:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='from'\n                            ref={this.fromInput}\n                            placeholder={{id: t('admin.compliance_reports.from_placeholder'), defaultMessage: 'E.g. \"2016-03-11\"'}}\n                        />\n                    </div>\n                    <div className='col-sm-3 col-md-2 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.to'\n                                defaultMessage='To:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='to'\n                            ref={this.toInput}\n                            placeholder={{id: t('admin.compliance_reports.to_placeholder'), defaultMessage: 'E.g. \"2016-03-15\"'}}\n                        />\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-sm-6 col-md-4 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.emails'\n                                defaultMessage='Emails:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='emails'\n                            ref={this.emailsInput}\n                            placeholder={{id: t('admin.compliance_reports.emails_placeholder'), defaultMessage: 'E.g. \"bill@example.com, bob@example.com\"'}}\n                        />\n                    </div>\n                    <div className='col-sm-6 col-md-4 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.keywords'\n                                defaultMessage='Keywords:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='keywords'\n                            ref={this.keywordsInput}\n                            placeholder={{id: t('admin.compliance_reports.keywords_placeholder'), defaultMessage: 'E.g. \"shorting stock\"'}}\n                        />\n                    </div>\n                </div>\n                <div className='clearfix'>\n                    <button\n                        id='run-button'\n                        type='submit'\n                        className='btn btn-primary'\n                        onClick={this.runReport}\n                    >\n                        <FormattedMessage\n                            id='admin.compliance_reports.run'\n                            defaultMessage='Run Compliance Report'\n                        />\n                    </button>\n                </div>\n                {serverError}\n                <div className='text-right'>\n                    <button\n                        type='submit'\n                        className='btn btn-link'\n                        disabled={this.state.runningReport}\n                        onClick={this.reload}\n                    >\n                        <ReloadIcon/>\n                        <FormattedMessage\n                            id='admin.compliance_reports.reload'\n                            defaultMessage='Reload Completed Compliance Reports'\n                        />\n                    </button>\n                </div>\n                <div className='compliance-panel__table'>\n                    {content}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    content: {margin: 10},\n    greenStatus: {color: 'green'},\n    redStatus: {color: 'red'},\n    dataCell: {whiteSpace: 'nowrap'},\n    date: {whiteSpace: 'nowrap'},\n    serverError: {marginTop: '10px'},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {createComplianceReport, getComplianceReports} from 'mattermost-redux/actions/admin';\nimport {getComplianceReports as selectComplianceReports, getConfig} from 'mattermost-redux/selectors/entities/admin';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport ComplianceReports from './compliance_reports.jsx';\n\nconst getUsersForReports = createSelector(\n    (state) => state.entities.users.profiles,\n    (state) => state.entities.admin.complianceReports,\n    (users, reports) => {\n        const usersMap = {};\n        Object.values(reports).forEach((r) => {\n            const u = users[r.user_id];\n            if (u) {\n                usersMap[u.id] = u;\n            }\n        });\n        return usersMap;\n    }\n);\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const isLicensed = license.IsLicensed === 'true';\n\n    let enabled = false;\n    const config = getConfig(state);\n    if (config && config.ComplianceSettings) {\n        enabled = config.ComplianceSettings.Enable;\n    }\n\n    let serverError;\n    const error = state.requests.admin.createCompliance.error;\n    if (error) {\n        serverError = error.message;\n    }\n\n    const reports = Object.values(selectComplianceReports(state)).sort((a, b) => {\n        return b.create_at - a.create_at;\n    });\n\n    return {\n        isLicensed,\n        enabled,\n        reports,\n        serverError,\n        users: getUsersForReports(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getComplianceReports,\n            createComplianceReport,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComplianceReports);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nimport BooleanSetting from './boolean_setting';\n\ntype Props = {\n    id: string;\n    value: boolean;\n    onChange: (id: string, value: any) => void;\n    disabled?: boolean;\n    setByEnv: boolean;\n}\n\ntype State = {\n    showConfirm: boolean;\n}\n\nexport default class CustomEnableDisableGuestAccountsSetting extends React.Component<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showConfirm: false,\n        };\n    }\n\n    public handleChange = (id: string, value: boolean, confirm?: boolean) => {\n        if (!value && !confirm) {\n            this.setState({showConfirm: true});\n        } else {\n            this.props.onChange(id, value);\n        }\n    };\n\n    public render() {\n        const label = (\n            <FormattedMessage\n                id='admin.guest_access.enableTitle'\n                defaultMessage='Enable Guest Access: '\n            />\n        );\n        const helpText = (\n            <FormattedMarkdownMessage\n                id='admin.guest_access.enableDescription'\n                defaultMessage='When true, external guest can be invited to channels within teams. Please see [Permissions Schemes](../user_management/permissions/system_scheme) for which roles can invite guests.'\n            />\n        );\n\n        return (\n            <>\n                <BooleanSetting\n                    id={this.props.id}\n                    value={this.props.value}\n                    label={label}\n                    helpText={helpText}\n                    setByEnv={this.props.setByEnv}\n                    onChange={this.handleChange}\n                />\n                <ConfirmModal\n                    show={this.state.showConfirm}\n                    title={\n                        <FormattedMessage\n                            id='admin.guest_access.disableConfirmTitle'\n                            defaultMessage='Disable Guest Access?'\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='admin.guest_access.disableConfirmMessage'\n                            defaultMessage='Disabling guest access will revoke all current Guest Account sessions. Guests will no longer be able to login and new guests cannot be invited into Mattermost. Guest users will be marked as inactive in user lists. Enabling this feature will not reinstate previous guest accounts.'\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='admin.guest_access.disableConfirmButton'\n                            defaultMessage='Disable Guest Access'\n                        />\n                    }\n                    onConfirm={() => {\n                        this.handleChange(this.props.id, false, true);\n                        this.setState({showConfirm: false});\n                    }}\n                    onCancel={() => this.setState({showConfirm: false})}\n                />\n            </>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport SchemaAdminSettings from 'components/admin_console/schema_admin_settings.jsx';\n\n// No changes required to the base SchemaAdminSettings, except to inject custom props.\nconst CustomPluginSettings = SchemaAdminSettings;\n\nexport default CustomPluginSettings;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {Constants} from '../../../utils/constants';\nimport {t} from '../../../utils/i18n';\nimport SchemaAdminSettings from '../schema_admin_settings';\n\nexport default function getEnablePluginSetting(plugin) {\n    const escapedPluginId = SchemaAdminSettings.escapePathPart(plugin.id);\n    const pluginEnabledConfigKey = 'PluginSettings.PluginStates.' + escapedPluginId + '.Enable';\n\n    return {\n        type: Constants.SettingsTypes.TYPE_BOOL,\n        key: pluginEnabledConfigKey,\n        label: t('admin.plugin.enable_plugin'),\n        label_default: 'Enable Plugin: ',\n        help_text: t('admin.plugin.enable_plugin.help'),\n        help_text_default: 'When true, this plugin is enabled.',\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\n\nimport {Constants} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport {getAdminConsoleCustomComponents} from 'selectors/admin_console';\nimport SchemaAdminSettings from '../schema_admin_settings';\nimport {it} from '../admin_definition';\n\nimport CustomPluginSettings from './custom_plugin_settings.jsx';\nimport getEnablePluginSetting from './enable_plugin_setting';\n\nfunction makeGetPluginSchema() {\n    return createSelector(\n        (state, pluginId) => state.entities.admin.plugins[pluginId],\n        (state, pluginId) => getAdminConsoleCustomComponents(state, pluginId),\n        (plugin, customComponents) => {\n            if (!plugin) {\n                return null;\n            }\n\n            const escapedPluginId = SchemaAdminSettings.escapePathPart(plugin.id);\n            const pluginEnabledConfigKey = 'PluginSettings.PluginStates.' + escapedPluginId + '.Enable';\n\n            let settings = [];\n            if (plugin.settings_schema && plugin.settings_schema.settings) {\n                settings = plugin.settings_schema.settings.map((setting) => {\n                    const key = setting.key.toLowerCase();\n                    let component = null;\n                    let bannerType = '';\n                    let type = setting.type;\n                    let displayName = setting.display_name;\n                    let isDisabled = it.stateIsFalse(pluginEnabledConfigKey);\n\n                    if (customComponents[key]) {\n                        component = customComponents[key].component;\n                        type = Constants.SettingsTypes.TYPE_CUSTOM;\n                    } else if (setting.type === Constants.SettingsTypes.TYPE_CUSTOM) {\n                        // Show a warning banner to enable the plugin in order to display the custom component.\n                        type = Constants.SettingsTypes.TYPE_BANNER;\n                        displayName = localizeMessage('admin.plugin.customSetting.pluginDisabledWarning', 'In order to view this setting, enable the plugin and click Save.');\n                        bannerType = 'warning';\n                        isDisabled = it.stateIsTrue(pluginEnabledConfigKey);\n                    }\n\n                    return {\n                        ...setting,\n                        type,\n                        key: 'PluginSettings.Plugins.' + escapedPluginId + '.' + key,\n                        help_text_markdown: true,\n                        label: displayName,\n                        translate: Boolean(plugin.translate),\n                        isDisabled,\n                        banner_type: bannerType,\n                        component,\n                        showTitle: customComponents[key] ? customComponents[key].options.showTitle : false,\n                    };\n                });\n            }\n\n            settings.unshift(getEnablePluginSetting(plugin));\n\n            return {\n                ...plugin.settings_schema,\n                id: plugin.id,\n                name: plugin.name,\n                settings,\n                translate: Boolean(plugin.translate),\n            };\n        }\n    );\n}\n\nfunction makeMapStateToProps() {\n    const getPluginSchema = makeGetPluginSchema();\n\n    return (state, ownProps) => {\n        const pluginId = ownProps.match.params.plugin_id;\n\n        return {\n            schema: getPluginSchema(state, pluginId),\n            roles: getRoles(state),\n        };\n    };\n}\n\nexport default connect(makeMapStateToProps)(CustomPluginSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport AdminSettings from 'components/admin_console/admin_settings';\n\nimport SettingsGroup from 'components/admin_console/settings_group.jsx';\nimport BooleanSetting from 'components/admin_console/boolean_setting';\nimport TextSetting from 'components/admin_console/text_setting';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LoadingScreen from 'components/loading_screen';\n\nimport {Constants} from 'utils/constants';\n\nexport default class CustomTermsOfServiceSettings extends AdminSettings {\n    static propTypes = {\n        actions: PropTypes.shape({\n            getTermsOfService: PropTypes.func.isRequired,\n            createTermsOfService: PropTypes.func.isRequired,\n        }).isRequired,\n        config: PropTypes.object,\n        license: PropTypes.object,\n        setNavigationBlocked: PropTypes.func,\n\n        /*\n        * Action to save config file\n        */\n        updateConfig: PropTypes.func,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            termsEnabled: props.config.SupportSettings.CustomTermsOfServiceEnabled,\n            reAcceptancePeriod: props.config.SupportSettings.CustomTermsOfServiceReAcceptancePeriod,\n            loadingTermsText: true,\n            receivedTermsText: '',\n            termsText: '',\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n        };\n    }\n\n    getStateFromConfig(config) {\n        return {\n            termsEnabled: config.SupportSettings.CustomTermsOfServiceEnabled,\n            reAcceptancePeriod: config.SupportSettings.CustomTermsOfServiceReAcceptancePeriod,\n        };\n    }\n\n    getConfigFromState = (config) => {\n        config.SupportSettings.CustomTermsOfServiceEnabled = this.state.termsEnabled;\n        config.SupportSettings.CustomTermsOfServiceReAcceptancePeriod = this.parseIntNonZero(this.state.reAcceptancePeriod, Constants.DEFAULT_TERMS_OF_SERVICE_RE_ACCEPTANCE_PERIOD);\n\n        return config;\n    }\n\n    componentDidMount() {\n        this.getTermsOfService();\n    }\n\n    doSubmit = async (callback) => {\n        this.setState({\n            saving: true,\n            serverError: null,\n        });\n\n        if (this.state.termsEnabled && (this.state.receivedTermsText !== this.state.termsText || !this.props.config.SupportSettings.CustomTermsOfServiceEnabled)) {\n            const result = await this.props.actions.createTermsOfService(this.state.termsText);\n            if (result.error) {\n                this.handleAPIError(result.error, callback);\n                return;\n            }\n        }\n\n        // clone config so that we aren't modifying data in the stores\n        let config = JSON.parse(JSON.stringify(this.props.config));\n        config = this.getConfigFromState(config);\n\n        const {data, error} = await this.props.updateConfig(config);\n\n        if (data) {\n            this.setState(this.getStateFromConfig(data));\n\n            this.setState({\n                saveNeeded: false,\n                saving: false,\n            });\n\n            this.props.setNavigationBlocked(false);\n\n            if (callback) {\n                callback();\n            }\n\n            if (this.handleSaved) {\n                this.handleSaved(config);\n            }\n        } else if (error) {\n            this.handleAPIError({id: error.server_error_id, ...error}, callback, config);\n        }\n    };\n\n    handleAPIError = (err, callback, config) => {\n        this.setState({\n            saving: false,\n            serverError: err.message,\n            serverErrorId: err.id,\n        });\n\n        if (callback) {\n            callback();\n        }\n\n        if (this.handleSaved && config) {\n            this.handleSaved(config);\n        }\n    };\n\n    getTermsOfService = async () => {\n        this.setState({loadingTermsText: true});\n\n        const res = await this.props.actions.getTermsOfService();\n        if (res.data) {\n            this.setState({\n                termsText: res.data.text,\n                receivedTermsText: res.data.text,\n            });\n        }\n\n        this.setState({loadingTermsText: false});\n    };\n\n    handleTermsTextChange = (id, value) => {\n        this.handleChange('termsText', value);\n    };\n\n    handleTermsEnabledChange = (id, value) => {\n        this.handleChange('termsEnabled', value);\n    };\n\n    handleReAcceptancePeriodChange = (id, value) => {\n        this.handleChange('reAcceptancePeriod', value);\n    };\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.support.termsOfServiceTitle'\n                defaultMessage='Custom Terms of Service (Beta)'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        if (this.state.loadingTermsText) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    key={'customTermsOfServiceEnabled'}\n                    id={'SupportSettings.CustomTermsOfServiceEnabled'}\n                    label={\n                        <FormattedMessage\n                            id='admin.support.enableTermsOfServiceTitle'\n                            defaultMessage='Enable Custom Terms of Service'\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.support.enableTermsOfServiceHelp'\n                            defaultMessage='When true, new users must accept the terms of service before accessing any Mattermost teams on desktop, web or mobile. Existing users must accept them after login or a page refresh.\\n \\nTo update terms of service link displayed in account creation and login pages, go to [Site Configuration > Customization](../site_config/customization).'\n                        />\n                    }\n                    value={this.state.termsEnabled}\n                    disabled={!(this.props.license.IsLicensed && this.props.license.CustomTermsOfService === 'true')}\n                    onChange={this.handleTermsEnabledChange}\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceEnabled')}\n                />\n                <TextSetting\n                    key={'customTermsOfServiceText'}\n                    id={'SupportSettings.CustomTermsOfServiceText'}\n                    type={'textarea'}\n                    label={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceTextTitle'\n                            defaultMessage='Custom Terms of Service Text'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceTextHelp'\n                            defaultMessage='Text that will appear in your custom Terms of Service. Supports Markdown-formatted text.'\n                        />\n                    }\n                    disabled={!this.state.termsEnabled}\n                    onChange={this.handleTermsTextChange}\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceText')}\n                    value={this.state.termsText}\n                    maxLength={Constants.MAX_TERMS_OF_SERVICE_TEXT_LENGTH}\n                />\n                <TextSetting\n                    key={'customTermsOfServiceReAcceptancePeriod'}\n                    id={'SupportSettings.CustomTermsOfServiceReAcceptancePeriod'}\n                    type={'number'}\n                    label={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceReAcceptanceTitle'\n                            defaultMessage='Re-Acceptance Period:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceReAcceptanceHelp'\n                            defaultMessage='The number of days before Terms of Service acceptance expires, and the terms must be re-accepted.'\n                        />\n                    }\n                    disabled={!this.state.termsEnabled}\n                    value={this.state.reAcceptancePeriod}\n                    onChange={this.handleReAcceptancePeriodChange}\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceReAcceptancePeriod')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getTermsOfService, createTermsOfService} from 'mattermost-redux/actions/users';\n\nimport CustomTermsOfServiceSettings from './custom_terms_of_service_settings.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTermsOfService,\n            createTermsOfService,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(CustomTermsOfServiceSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport * as Utils from 'utils/utils';\nimport {t} from 'utils/i18n.jsx';\n\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport Setting from './setting';\n\nexport default class CustomUrlSchemesSetting extends React.Component {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            value: PropTypes.array.isRequired,\n            onChange: PropTypes.func.isRequired,\n            disabled: PropTypes.bool,\n            setByEnv: PropTypes.bool.isRequired,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: this.arrayToString(props.value),\n        };\n    }\n\n    stringToArray = (str) => {\n        return str.split(',').map((s) => s.trim()).filter(Boolean);\n    };\n\n    arrayToString = (arr) => {\n        return arr.join(',');\n    };\n\n    handleChange = (e) => {\n        const valueAsArray = this.stringToArray(e.target.value);\n\n        this.props.onChange(this.props.id, valueAsArray);\n\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n    render() {\n        const label = Utils.localizeMessage('admin.customization.customUrlSchemes', 'Custom URL Schemes:');\n        const helpText = Utils.localizeMessage(\n            'admin.customization.customUrlSchemesDesc',\n            'Allows message text to link if it begins with any of the comma-separated URL schemes listed. By default, the following schemes will create links: \"http\", \"https\", \"ftp\", \"tel\", and \"mailto\".'\n        );\n\n        return (\n            <Setting\n                label={label}\n                helpText={helpText}\n                inputId={this.props.id}\n                setByEnv={this.props.setByEnv}\n            >\n                <LocalizedInput\n                    id={this.props.id}\n                    className='form-control'\n                    type='text'\n                    placeholder={{id: t('admin.customization.customUrlSchemesPlaceholder'), defaultMessage: 'E.g.: \"git,smtp\"'}}\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    disabled={this.props.disabled || this.props.setByEnv}\n                />\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {JobTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nimport AdminSettings from './admin_settings';\nimport DropdownSetting from './dropdown_setting.jsx';\nimport JobsTable from './jobs';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class DataRetentionSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.DataRetentionSettings.EnableMessageDeletion = this.state.enableMessageDeletion === 'true';\n        config.DataRetentionSettings.EnableFileDeletion = this.state.enableFileDeletion === 'true';\n        config.DataRetentionSettings.MessageRetentionDays = parseInt(this.state.messageRetentionDays, 10);\n        config.DataRetentionSettings.FileRetentionDays = parseInt(this.state.fileRetentionDays, 10);\n        config.DataRetentionSettings.DeletionJobStartTime = this.state.deletionJobStartTime;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            enableMessageDeletion: String(config.DataRetentionSettings.EnableMessageDeletion),\n            enableFileDeletion: String(config.DataRetentionSettings.EnableFileDeletion),\n            messageRetentionDays: config.DataRetentionSettings.MessageRetentionDays,\n            fileRetentionDays: config.DataRetentionSettings.FileRetentionDays,\n            deletionJobStartTime: config.DataRetentionSettings.DeletionJobStartTime,\n            showConfirmModal: false,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.setState({showConfirmModal: true});\n    };\n\n    handleSaveConfirmed = () => {\n        this.setState({showConfirmModal: false});\n\n        this.doSubmit();\n    };\n\n    handleSaveCanceled = () => {\n        this.setState({showConfirmModal: false});\n    };\n\n    renderConfirmModal = () => {\n        const title = (\n            <FormattedMessage\n                id='admin.data_retention.confirmChangesModal.title'\n                defaultMessage='Confirm data retention policy'\n            />\n        );\n\n        const messageList = [];\n\n        if (this.state.enableMessageDeletion === 'true') {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemMessageDeletion'\n                    defaultMessage='All messages will be permanently deleted after {days} days.'\n                    values={{\n                        days: (\n                            <strong>\n                                {this.state.messageRetentionDays}\n                            </strong>\n                        ),\n                    }}\n                />\n            );\n        } else {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemMessageIndefinite'\n                    defaultMessage='All messages will be retained indefinitely.'\n                />\n            );\n        }\n\n        if (this.state.enableFileDeletion === 'true') {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemFileDeletion'\n                    defaultMessage='All files will be permanently deleted after {days} days.'\n                    values={{\n                        days: (\n                            <strong>\n                                {this.state.fileRetentionDays}\n                            </strong>\n                        ),\n                    }}\n                />\n            );\n        } else {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemFileIndefinite'\n                    defaultMessage='All files will be retained indefinitely.'\n                />\n            );\n        }\n\n        const message = (\n            <div>\n                <p>\n                    <FormattedMessage\n                        id='admin.data_retention.confirmChangesModal.description'\n                        defaultMessage='Are you sure you want to apply the following data retention policy:'\n                    />\n                </p>\n                <ul>\n                    {messageList.map((item, index) => {\n                        return <li key={index}>{item}</li>;\n                    })}\n                </ul>\n                <p>\n                    <FormattedMessage\n                        id='admin.data_retention.confirmChangesModal.clarification'\n                        defaultMessage='Once deleted, messages and files cannot be retrieved.'\n                    />\n                </p>\n            </div>\n        );\n\n        const confirmButton = (\n            <FormattedMessage\n                id='admin.data_retention.confirmChangesModal.confirm'\n                defaultMessage='Confirm Settings'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showConfirmModal}\n                title={title}\n                message={message}\n                confirmButtonText={confirmButton}\n                onConfirm={this.handleSaveConfirmed}\n                onCancel={this.handleSaveCanceled}\n            />\n        );\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.data_retention.title'\n                defaultMessage='Data Retention Policy'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const enableMessageDeletionOptions = [\n            {value: 'false', text: Utils.localizeMessage('admin.data_retention.keepMessagesIndefinitely', 'Keep all messages indefinitely')},\n            {value: 'true', text: Utils.localizeMessage('admin.data_retention.keepMessageForTime', 'Keep messages for a set amount of time')},\n        ];\n\n        const enableFileDeletionOptions = [\n            {value: 'false', text: Utils.localizeMessage('admin.data_retention.keepFilesIndefinitely', 'Keep all files indefinitely')},\n            {value: 'true', text: Utils.localizeMessage('admin.data_retention.keepFilesForTime', 'Keep files for a set amount of time')},\n        ];\n\n        let messageRetentionDaysSetting = '';\n        if (this.state.enableMessageDeletion === 'true') {\n            messageRetentionDaysSetting = (\n                <TextSetting\n                    id='messageRetentionDays'\n                    label={<span/>}\n                    placeholder={Utils.localizeMessage('admin.data_retention.messageRetentionDays.example', 'E.g.: \"60\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.messageRetentionDays.description'\n                            defaultMessage='Set how many days messages are kept in Mattermost. Messages, including file attachments older than the duration you set will be deleted nightly. The minimum time is one day.'\n                        />\n                    }\n                    value={this.state.messageRetentionDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.MessageRetentionDays')}\n                />\n            );\n        }\n\n        let fileRetentionDaysSetting = '';\n        if (this.state.enableFileDeletion === 'true') {\n            fileRetentionDaysSetting = (\n                <TextSetting\n                    id='fileRetentionDays'\n                    label={<span/>}\n                    placeholder={Utils.localizeMessage('admin.data_retention.fileRetentionDays.example', 'E.g.: \"60\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.fileRetentionDays.description'\n                            defaultMessage='Set how many days file uploads are kept in Mattermost. Files older than the duration you set will be deleted nightly. The minimum time is one day.'\n                        />\n                    }\n                    value={this.state.fileRetentionDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.FileRetentionDays')}\n                />\n            );\n        }\n\n        const confirmModal = this.renderConfirmModal();\n\n        return (\n            <SettingsGroup>\n                {confirmModal}\n                <div className='banner'>\n                    <div className='banner__content'>\n                        <FormattedMessage\n                            id='admin.data_retention.note.description'\n                            defaultMessage='Caution: Once a message or a file is deleted, the action is irreversible. Please be careful when setting up a custom data retention policy. See {documentationLink} to learn more.'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-dataretention-documentation/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.data_retention.note.description.documentationLinkText'\n                                            defaultMessage='documentation'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n                <DropdownSetting\n                    id='enableMessageDeletion'\n                    values={enableMessageDeletionOptions}\n                    label={\n                        <FormattedMessage\n                            id='admin.data_retention.enableMessageDeletion.title'\n                            defaultMessage='Message Retention:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.enableMessageDeletion.description'\n                            defaultMessage='Set how long Mattermost keeps messages in channels and direct messages.'\n                        />\n                    }\n                    value={this.state.enableMessageDeletion}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableMessageDeletion')}\n                />\n                {messageRetentionDaysSetting}\n                <DropdownSetting\n                    id='enableFileDeletion'\n                    values={enableFileDeletionOptions}\n                    label={\n                        <FormattedMessage\n                            id='admin.data_retention.enableFileDeletion.title'\n                            defaultMessage='File Retention:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.enableFileDeletion.description'\n                            defaultMessage='Set how long Mattermost keeps file uploads in channels and direct messages.'\n                        />\n                    }\n                    value={this.state.enableFileDeletion}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableFileDeletion')}\n                />\n                {fileRetentionDaysSetting}\n                <TextSetting\n                    id='deletionJobStartTime'\n                    label={\n                        <FormattedMessage\n                            id='admin.data_retention.deletionJobStartTime.title'\n                            defaultMessage='Data Deletion Time:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.data_retention.deletionJobStartTime.example', 'E.g.: \"02:00\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.deletionJobStartTime.description'\n                            defaultMessage='Set the start time of the daily scheduled data retention job. Choose a time when fewer people are using your system. Must be a 24-hour time stamp in the form HH:MM.'\n                        />\n                    }\n                    value={this.state.deletionJobStartTime}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.DeletionJobStartTime')}\n                />\n                <JobsTable\n                    jobType={JobTypes.DATA_RETENTION}\n                    disabled={this.state.enableMessageDeletion !== 'true' && this.state.enableFileDeletion !== 'true'}\n                    createJobButtonText={\n                        <FormattedMessage\n                            id='admin.data_retention.createJob.title'\n                            defaultMessage='Run Deletion Job Now'\n                        />\n                    }\n                    createJobHelpText={\n                        <FormattedMessage\n                            id='admin.data_retention.createJob.help'\n                            defaultMessage='Initiates a Data Retention deletion job immediately.'\n                        />\n                    }\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport {recycleDatabaseConnection} from 'actions/admin_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport RequestButton from './request_button/request_button.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class DatabaseSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        // driverName and dataSource are read-only from the UI\n\n        config.SqlSettings.MaxIdleConns = this.parseIntNonZero(this.state.maxIdleConns);\n        config.SqlSettings.MaxOpenConns = this.parseIntNonZero(this.state.maxOpenConns);\n        config.SqlSettings.Trace = this.state.trace;\n        config.SqlSettings.QueryTimeout = this.parseIntNonZero(this.state.queryTimeout);\n        config.SqlSettings.ConnMaxLifetimeMilliseconds = this.parseIntNonNegative(this.state.connMaxLifetimeMilliseconds);\n        config.ServiceSettings.MinimumHashtagLength = this.parseIntNonZero(this.state.minimumHashtagLength, 3, 2);\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            driverName: config.SqlSettings.DriverName,\n            dataSource: config.SqlSettings.DataSource,\n            maxIdleConns: config.SqlSettings.MaxIdleConns,\n            maxOpenConns: config.SqlSettings.MaxOpenConns,\n            trace: config.SqlSettings.Trace,\n            queryTimeout: config.SqlSettings.QueryTimeout,\n            connMaxLifetimeMilliseconds: config.SqlSettings.ConnMaxLifetimeMilliseconds,\n            minimumHashtagLength: config.ServiceSettings.MinimumHashtagLength,\n        };\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.database.title'\n                defaultMessage='Database Settings'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const dataSource = '**********' + this.state.dataSource.substring(this.state.dataSource.indexOf('@'));\n\n        let recycleDbButton = <div/>;\n        if (this.props.license.IsLicensed === 'true') {\n            recycleDbButton = (\n                <RequestButton\n                    requestAction={recycleDatabaseConnection}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.recycle.recycleDescription'\n                            defaultMessage='Deployments using multiple databases can switch from one master database to another without restarting the Mattermost server by updating \"config.json\" to the new desired configuration and using the {reloadConfiguration} feature to load the new settings while the server is running. The administrator should then use {featureName} feature to recycle the database connections based on the new settings.'\n                            values={{\n                                featureName: (\n                                    <b>\n                                        <FormattedMessage\n                                            id='admin.recycle.recycleDescription.featureName'\n                                            defaultMessage='Recycle Database Connections'\n                                        />\n                                    </b>\n                                ),\n                                reloadConfiguration: (\n                                    <a href='../environment/web_server'>\n                                        <b>\n                                            <FormattedMessage\n                                                id='admin.recycle.recycleDescription.reloadConfiguration'\n                                                defaultMessage='Environment > Web Server > Reload Configuration from Disk'\n                                            />\n                                        </b>\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.recycle.button'\n                            defaultMessage='Recycle Database Connections'\n                        />\n                    }\n                    showSuccessMessage={false}\n                    errorMessage={{\n                        id: t('admin.recycle.reloadFail'),\n                        defaultMessage: 'Recycling unsuccessful: {error}',\n                    }}\n                    includeDetailedError={true}\n                />\n            );\n        }\n\n        return (\n            <SettingsGroup>\n                <div className='banner'>\n                    <FormattedMessage\n                        id='admin.sql.noteDescription'\n                        defaultMessage='Changing properties in this section will require a server restart before taking effect.'\n                    />\n                </div>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='DriverName'\n                    >\n                        <FormattedMessage\n                            id='admin.sql.driverName'\n                            defaultMessage='Driver Name:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <input\n                            type='text'\n                            className='form-control'\n                            value={this.state.driverName}\n                            disabled={true}\n                        />\n                        <div className='help-text'>\n                            <FormattedMessage\n                                id='admin.sql.driverNameDescription'\n                                defaultMessage='Set the database driver in the config.json file.'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='DataSource'\n                    >\n                        <FormattedMessage\n                            id='admin.sql.dataSource'\n                            defaultMessage='Data Source:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <input\n                            type='text'\n                            className='form-control'\n                            value={dataSource}\n                            disabled={true}\n                        />\n                        <div className='help-text'>\n                            <FormattedMessage\n                                id='admin.sql.dataSourceDescription'\n                                defaultMessage='Set the database source in the config.json file.'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <TextSetting\n                    id='maxIdleConns'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.maxConnectionsTitle'\n                            defaultMessage='Maximum Idle Connections:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.maxConnectionsExample', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.maxConnectionsDescription'\n                            defaultMessage='Maximum number of idle connections held open to the database.'\n                        />\n                    }\n                    value={this.state.maxIdleConns}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.MaxIdleConns')}\n                />\n                <TextSetting\n                    id='maxOpenConns'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.maxOpenTitle'\n                            defaultMessage='Maximum Open Connections:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.maxOpenExample', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.maxOpenDescription'\n                            defaultMessage='Maximum number of open connections held open to the database.'\n                        />\n                    }\n                    value={this.state.maxOpenConns}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.MaxOpenConns')}\n                />\n                <TextSetting\n                    id='queryTimeout'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.queryTimeoutTitle'\n                            defaultMessage='Query Timeout:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.queryTimeoutExample', 'E.g.: \"30\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.queryTimeoutDescription'\n                            defaultMessage='The number of seconds to wait for a response from the database after opening a connection and sending the query. Errors that you see in the UI or in the logs as a result of a query timeout can vary depending on the type of query.'\n                        />\n                    }\n                    value={this.state.queryTimeout}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.QueryTimeout')}\n                />\n                <TextSetting\n                    id='connMaxLifetimeMilliseconds'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.connMaxLifetimeTitle'\n                            defaultMessage='Maximum Connection Lifetime:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.connMaxLifetimeExample', 'E.g.: \"3600000\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.connMaxLifetimeDescription'\n                            defaultMessage='Maximum lifetime for a connection to the database in milliseconds.'\n                        />\n                    }\n                    value={this.state.connMaxLifetimeMilliseconds}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.ConnMaxLifetimeMilliseconds')}\n                />\n                <TextSetting\n                    id='minimumHashtagLength'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.minimumHashtagLengthTitle'\n                            defaultMessage='Minimum Hashtag Length:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.minimumHashtagLengthExample', 'E.g.: \"3\"')}\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.service.minimumHashtagLengthDescription'\n                            defaultMessage='Minimum number of characters in a hashtag. This must be greater than or equal to 2. MySQL databases must be configured to support searching strings shorter than three characters, [see documentation](!https://dev.mysql.com/doc/refman/8.0/en/fulltext-fine-tuning.html).'\n                        />\n                    }\n                    value={this.state.minimumHashtagLength}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.MinimumHashtagLength')}\n                />\n                <BooleanSetting\n                    id='trace'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.traceTitle'\n                            defaultMessage='SQL Statement Logging: '\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.traceDescription'\n                            defaultMessage='(Development Mode) When true, executing SQL statements are written to the log.'\n                        />\n                    }\n                    value={this.state.trace}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.Trace')}\n                />\n                {recycleDbButton}\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Setting from './setting';\n\nexport default class DropdownSetting extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        values: PropTypes.array.isRequired,\n        label: PropTypes.node.isRequired,\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        disabled: PropTypes.bool,\n        setByEnv: PropTypes.bool.isRequired,\n        helpText: PropTypes.node,\n    }\n\n    static defaultProps = {\n        isDisabled: false,\n    }\n\n    handleChange = (e) => {\n        this.props.onChange(this.props.id, e.target.value);\n    }\n\n    render() {\n        const options = [];\n        for (const {value, text} of this.props.values) {\n            options.push(\n                <option\n                    value={value}\n                    key={value}\n                >\n                    {text}\n                </option>\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                inputId={this.props.id}\n                helpText={this.props.helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                <select\n                    data-testid={this.props.id + 'dropdown'}\n                    className='form-control'\n                    id={this.props.id}\n                    value={this.props.value}\n                    onChange={this.handleChange}\n                    disabled={this.props.disabled || this.props.setByEnv}\n                >\n                    {options}\n                </select>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {elasticsearchPurgeIndexes, elasticsearchTest} from 'actions/admin_actions.jsx';\nimport {JobStatuses, JobTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport JobsTable from './jobs';\nimport RequestButton from './request_button/request_button.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class ElasticsearchSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.ElasticsearchSettings.ConnectionUrl = this.state.connectionUrl;\n        config.ElasticsearchSettings.SkipTLSVerification = this.state.skipTLSVerification;\n        config.ElasticsearchSettings.Username = this.state.username;\n        config.ElasticsearchSettings.Password = this.state.password;\n        config.ElasticsearchSettings.Sniff = this.state.sniff;\n        config.ElasticsearchSettings.EnableIndexing = this.state.enableIndexing;\n        config.ElasticsearchSettings.EnableSearching = this.state.enableSearching;\n        config.ElasticsearchSettings.EnableAutocomplete = this.state.enableAutocomplete;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            connectionUrl: config.ElasticsearchSettings.ConnectionUrl,\n            skipTLSVerification: config.ElasticsearchSettings.SkipTLSVerification,\n            username: config.ElasticsearchSettings.Username,\n            password: config.ElasticsearchSettings.Password,\n            sniff: config.ElasticsearchSettings.Sniff,\n            enableIndexing: config.ElasticsearchSettings.EnableIndexing,\n            enableSearching: config.ElasticsearchSettings.EnableSearching,\n            enableAutocomplete: config.ElasticsearchSettings.EnableAutocomplete,\n            configTested: true,\n            canSave: true,\n            canPurgeAndIndex: config.ElasticsearchSettings.EnableIndexing,\n        };\n    }\n\n    handleSettingChanged = (id, value) => {\n        if (id === 'enableIndexing') {\n            if (value === false) {\n                this.setState({\n                    enableSearching: false,\n                    enableAutocomplete: false,\n                });\n            } else {\n                this.setState({\n                    canSave: false,\n                    configTested: false,\n                });\n            }\n        }\n\n        if (id === 'connectionUrl' || id === 'skipTLSVerification' || id === 'username' || id === 'password' || id === 'sniff') {\n            this.setState({\n                configTested: false,\n                canSave: false,\n            });\n        }\n\n        if (id !== 'enableSearching' && id !== 'enableAutocomplete') {\n            this.setState({\n                canPurgeAndIndex: false,\n            });\n        }\n\n        this.handleChange(id, value);\n    }\n\n    handleSaved = () => {\n        this.setState({\n            canPurgeAndIndex: this.state.enableIndexing,\n        });\n    }\n\n    canSave() {\n        return this.state.canSave;\n    }\n\n    doTestConfig = (success, error) => {\n        const config = JSON.parse(JSON.stringify(this.props.config));\n        this.getConfigFromState(config);\n\n        elasticsearchTest(\n            config,\n            () => {\n                this.setState({\n                    configTested: true,\n                    canSave: true,\n                });\n                success();\n                this.doSubmit();\n            },\n            (err) => {\n                this.setState({\n                    configTested: false,\n                    canSave: false,\n                });\n                error(err);\n            }\n        );\n    }\n\n    getExtraInfo(job) {\n        if (job.status === JobStatuses.IN_PROGRESS) {\n            return (\n                <FormattedMessage\n                    id='admin.elasticsearch.percentComplete'\n                    defaultMessage='{percent}% Complete'\n                    values={{percent: Number(job.progress)}}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.elasticsearch.title'\n                defaultMessage='Elasticsearch'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    id='enableIndexing'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableIndexingTitle'\n                            defaultMessage='Enable Elasticsearch Indexing:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableIndexingDescription'\n                            defaultMessage='When true, indexing of new posts occurs automatically. Search queries will use database search until \"Enable Elasticsearch for search queries\" is enabled. {documentationLink}'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-elasticsearch-documentation/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.elasticsearch.enableIndexingDescription.documentationLinkText'\n                                            defaultMessage='Learn more about Elasticsearch in our documentation.'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    value={this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableIndexing')}\n                />\n                <TextSetting\n                    id='connectionUrl'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.connectionUrlTitle'\n                            defaultMessage='Server Connection Address:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.connectionUrlExample', 'E.g.: \"https://elasticsearch.example.org:9200\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.connectionUrlDescription'\n                            defaultMessage='The address of the Elasticsearch server. {documentationLink}'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-elasticsearch-server-setup/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.elasticsearch.connectionUrlExample.documentationLinkText'\n                                            defaultMessage='Please see documentation with server setup instructions.'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    value={this.state.connectionUrl}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.ConnectionUrl')}\n                />\n                <BooleanSetting\n                    id='skipTLSVerification'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.skipTLSVerificationTitle'\n                            defaultMessage='Skip TLS Verification:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.skipTLSVerificationDescription'\n                            defaultMessage='When true, Mattermost will not require the Elasticsearch certificate to be signed by a trusted Certificate Authority.'\n                        />\n                    }\n                    value={this.state.skipTLSVerification}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.SkipTLSVerification')}\n                />\n                <TextSetting\n                    id='username'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.usernameTitle'\n                            defaultMessage='Server Username:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.usernameExample', 'E.g.: \"elastic\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.usernameDescription'\n                            defaultMessage='(Optional) The username to authenticate to the Elasticsearch server.'\n                        />\n                    }\n                    value={this.state.username}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Username')}\n                />\n                <TextSetting\n                    id='password'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.passwordTitle'\n                            defaultMessage='Server Password:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.password', 'E.g.: \"yourpassword\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.passwordDescription'\n                            defaultMessage='(Optional) The password to authenticate to the Elasticsearch server.'\n                        />\n                    }\n                    value={this.state.password}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Password')}\n                />\n                <BooleanSetting\n                    id='sniff'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.sniffTitle'\n                            defaultMessage='Enable Cluster Sniffing:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.sniffDescription'\n                            defaultMessage='When true, sniffing finds and connects to all data nodes in your cluster automatically.'\n                        />\n                    }\n                    value={this.state.sniff}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Sniff')}\n                />\n                <RequestButton\n                    id='testConfig'\n                    requestAction={this.doTestConfig}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.testHelpText'\n                            defaultMessage='Tests if the Mattermost server can connect to the Elasticsearch server specified. Testing the connection only saves the configuration if the test is successful. See log file for more detailed error messages.'\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.elasticsearch_test_button'\n                            defaultMessage='Test Connection'\n                        />\n                    }\n                    successMessage={{\n                        id: t('admin.elasticsearch.testConfigSuccess'),\n                        defaultMessage: 'Test successful. Configuration saved.',\n                    }}\n                    disabled={!this.state.enableIndexing}\n                />\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                    >\n                        <FormattedMessage\n                            id='admin.elasticsearch.bulkIndexingTitle'\n                            defaultMessage='Bulk Indexing:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <div className='job-table-setting'>\n                            <JobsTable\n                                jobType={JobTypes.ELASTICSEARCH_POST_INDEXING}\n                                disabled={!this.state.canPurgeAndIndex}\n                                createJobButtonText={\n                                    <FormattedMessage\n                                        id='admin.elasticsearch.createJob.title'\n                                        defaultMessage='Index Now'\n                                    />\n                                }\n                                createJobHelpText={\n                                    <FormattedMessage\n                                        id='admin.elasticsearch.createJob.help'\n                                        defaultMessage='All users, channels and posts in the database will be indexed from oldest to newest. Elasticsearch is available during indexing but search results may be incomplete until the indexing job is complete.'\n                                    />\n                                }\n                                getExtraInfoText={this.getExtraInfo}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <RequestButton\n                    id='purgeIndexesSection'\n                    requestAction={elasticsearchPurgeIndexes}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.purgeIndexesHelpText'\n                            defaultMessage='Purging will entirely remove the indexes on the Elasticsearch server. Search results may be incomplete until a bulk index of the existing database is rebuilt.'\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.purgeIndexesButton'\n                            defaultMessage='Purge Index'\n                        />\n                    }\n                    successMessage={{\n                        id: t('admin.elasticsearch.purgeIndexesButton.success'),\n                        defaultMessage: 'Indexes purged successfully.',\n                    }}\n                    errorMessage={{\n                        id: t('admin.elasticsearch.purgeIndexesButton.error'),\n                        defaultMessage: 'Failed to purge indexes: {error}',\n                    }}\n                    disabled={!this.state.canPurgeAndIndex}\n                    label={(\n                        <FormattedMessage\n                            id='admin.elasticsearch.purgeIndexesButton.label'\n                            defaultMessage='Purge Indexes:'\n                        />\n                    )}\n                />\n                <BooleanSetting\n                    id='enableSearching'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableSearchingTitle'\n                            defaultMessage='Enable Elasticsearch for search queries:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableSearchingDescription'\n                            defaultMessage='Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all search queries using the latest index. Search results may be incomplete until a bulk index of the existing post database is finished. When false, database search is used.'\n                        />\n                    }\n                    value={this.state.enableSearching}\n                    disabled={!this.state.enableIndexing || !this.state.configTested}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableSearching')}\n                />\n                <BooleanSetting\n                    id='enableAutocomplete'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableAutocompleteTitle'\n                            defaultMessage='Enable Elasticsearch for autocomplete queries:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableAutocompleteDescription'\n                            defaultMessage='Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all autocompletion queries on users and channels using the latest index. Autocompletion results may be incomplete until a bulk index of the existing users and channels database is finished. When false, database autocomplete is used.'\n                        />\n                    }\n                    value={this.state.enableAutocomplete}\n                    disabled={!this.state.enableIndexing || !this.state.configTested}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableAutocomplete')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Setting from './setting';\n\nexport default class FileUploadSetting extends Setting {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            label: PropTypes.node.isRequired,\n            helpText: PropTypes.node,\n            uploadingText: PropTypes.node,\n            onSubmit: PropTypes.func.isRequired,\n            disabled: PropTypes.bool,\n            fileType: PropTypes.string.isRequired,\n            error: PropTypes.string,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fileName: null,\n            serverError: props.error,\n        };\n    }\n\n    handleChange = () => {\n        const files = this.refs.fileInput.files;\n        if (files && files.length > 0) {\n            this.setState({fileSelected: true, fileName: files[0].name});\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        $(this.refs.upload_button).button('loading');\n        this.props.onSubmit(this.props.id, this.refs.fileInput.files[0], (error) => {\n            $(this.refs.upload_button).button('reset');\n            if (error) {\n                Utils.clearFileInput(this.refs.fileInput);\n            }\n        });\n    }\n\n    render() {\n        let serverError;\n        if (this.state.serverError) {\n            serverError = <div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div>;\n        }\n\n        let btnClass = 'btn';\n        if (this.state.fileSelected) {\n            btnClass = 'btn btn-primary';\n        }\n\n        let fileName;\n        if (this.state.fileName) {\n            fileName = this.state.fileName;\n        } else {\n            fileName = (\n                <FormattedMessage\n                    id='admin.file_upload.noFile'\n                    defaultMessage='No file uploaded'\n                />\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div>\n                    <div className='file__upload'>\n                        <button\n                            className='btn btn-default'\n                            disabled={this.props.disabled}\n                        >\n                            <FormattedMessage\n                                id='admin.file_upload.chooseFile'\n                                defaultMessage='Choose File'\n                            />\n                        </button>\n                        <input\n                            ref='fileInput'\n                            type='file'\n                            disabled={this.props.disabled}\n                            accept={this.props.fileType}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <button\n                        className={btnClass}\n                        disabled={!this.state.fileSelected}\n                        onClick={this.handleSubmit}\n                        ref='upload_button'\n                        data-loading-text={`<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span> ${this.props.uploadingText}`}\n                    >\n                        <FormattedMessage\n                            id='admin.file_upload.uploadFile'\n                            defaultMessage='Upload'\n                        />\n                    </button>\n                    <div className='help-text no-margin'>\n                        {fileName}\n                    </div>\n                    {serverError}\n                </div>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport crypto from 'crypto';\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport SetByEnv from './set_by_env';\n\ntype Props = {\n    id: string;\n    label: React.ReactNode;\n    placeholder?: string;\n    value: string;\n    onChange: (id: string, s: string) => void;\n    disabled: boolean;\n    setByEnv: boolean;\n    disabledText?: React.ReactNode;\n    helpText: React.ReactNode;\n    regenerateText: React.ReactNode;\n    regenerateHelpText?: React.ReactNode;\n}\n\nexport default class GeneratedSetting extends React.Component<Props> {\n    public static get defaultProps() {\n        return {\n            disabled: false,\n            regenerateText: (\n                <FormattedMessage\n                    id='admin.regenerate'\n                    defaultMessage='Regenerate'\n                />\n            ),\n        };\n    }\n\n    private regenerate = (e: React.MouseEvent) => {\n        e.preventDefault();\n\n        this.props.onChange(this.props.id, crypto.randomBytes(256).toString('base64').substring(0, 32));\n    }\n\n    public render() {\n        let disabledText = null;\n        if (this.props.disabled && this.props.disabledText) {\n            disabledText = (\n                <div className='admin-console__disabled-text'>\n                    {this.props.disabledText}\n                </div>\n            );\n        }\n\n        let regenerateHelpText = null;\n        if (this.props.regenerateHelpText) {\n            regenerateHelpText = (\n                <div className='help-text'>\n                    {this.props.regenerateHelpText}\n                </div>\n            );\n        }\n\n        let text: React.ReactNode = this.props.value;\n        if (!text) {\n            text = (\n                <span className='placeholder-text'>{this.props.placeholder}</span>\n            );\n        }\n\n        return (\n            <div className='form-group'>\n                <label\n                    className='control-label col-sm-4'\n                    htmlFor={this.props.id}\n                >\n                    {this.props.label}\n                </label>\n                <div className='col-sm-8'>\n                    <div\n                        className='form-control disabled'\n                        id={this.props.id}\n                    >\n                        {text}\n                    </div>\n                    {disabledText}\n                    <div className='help-text'>\n                        {this.props.helpText}\n                    </div>\n                    <div className='help-text'>\n                        <button\n                            className='btn btn-default'\n                            onClick={this.regenerate}\n                            disabled={this.props.disabled || this.props.setByEnv}\n                        >\n                            {this.props.regenerateText}\n                        </button>\n                    </div>\n                    {regenerateHelpText}\n                    {this.props.setByEnv ? <SetByEnv/> : null}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Groups} from 'mattermost-redux/constants';\n\nimport {t} from 'utils/i18n';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport GroupProfile from 'components/admin_console/group_settings/group_details/group_profile';\nimport GroupTeamsAndChannels from 'components/admin_console/group_settings/group_details/group_teams_and_channels';\nimport GroupUsers from 'components/admin_console/group_settings/group_details/group_users';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport BlockableLink from 'components/admin_console/blockable_link';\n\nimport TeamSelectorModal from 'components/team_selector_modal';\nimport ChannelSelectorModal from 'components/channel_selector_modal';\nimport Menu from 'components/widgets/menu/menu';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\n\nexport default class GroupDetails extends React.PureComponent {\n    static propTypes = {\n        groupID: PropTypes.string.isRequired,\n        group: PropTypes.object,\n        groupTeams: PropTypes.arrayOf(PropTypes.object),\n        groupChannels: PropTypes.arrayOf(PropTypes.object),\n        members: PropTypes.arrayOf(PropTypes.object),\n        memberCount: PropTypes.number.isRequired,\n        actions: PropTypes.shape({\n            getGroup: PropTypes.func.isRequired,\n            getMembers: PropTypes.func.isRequired,\n            getGroupSyncables: PropTypes.func.isRequired,\n            link: PropTypes.func.isRequired,\n            unlink: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        members: [],\n        groupTeams: [],\n        groupChannels: [],\n        group: {display_name: ''},\n        memberCount: 0,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingTeamsAndChannels: true,\n            addTeamOpen: false,\n            addChannelOpen: false,\n        };\n    }\n\n    componentDidMount() {\n        const {groupID, actions} = this.props;\n        actions.getGroup(groupID);\n        Promise.all([\n            actions.getGroupSyncables(groupID, Groups.SYNCABLE_TYPE_TEAM),\n            actions.getGroupSyncables(groupID, Groups.SYNCABLE_TYPE_CHANNEL),\n        ]).then(() => {\n            this.setState({loadingTeamsAndChannels: false});\n        });\n    }\n\n    openAddChannel = () => {\n        this.setState({addChannelOpen: true});\n    }\n\n    closeAddChannel = () => {\n        this.setState({addChannelOpen: false});\n    }\n\n    openAddTeam = () => {\n        this.setState({addTeamOpen: true});\n    }\n\n    closeAddTeam = () => {\n        this.setState({addTeamOpen: false});\n    }\n\n    addTeams = (teams) => {\n        const promises = [];\n        for (const team of teams) {\n            promises.push(this.props.actions.link(this.props.groupID, team.id, Groups.SYNCABLE_TYPE_TEAM, {auto_add: true}));\n        }\n        return Promise.all(promises).finally(() => this.props.actions.getGroupSyncables(this.props.groupID, Groups.SYNCABLE_TYPE_TEAM));\n    }\n\n    addChannels = async (channels) => {\n        const promises = [];\n        for (const channel of channels) {\n            promises.push(this.props.actions.link(this.props.groupID, channel.id, Groups.SYNCABLE_TYPE_CHANNEL, {auto_add: true}));\n        }\n        return Promise.all(promises).finally(() => this.props.actions.getGroupSyncables(this.props.groupID, Groups.SYNCABLE_TYPE_CHANNEL));\n    }\n\n    render = () => {\n        const {group, members, groupTeams, groupChannels, memberCount} = this.props;\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/groups'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.group_settings.group_detail.group_configuration'\n                            defaultMessage='Group Configuration'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='banner info'>\n                            <div className='banner__content'>\n                                <FormattedMessage\n                                    id='admin.group_settings.group_detail.introBanner'\n                                    defaultMessage='Configure default teams and channels and view users belonging to this group.'\n                                />\n                            </div>\n                        </div>\n\n                        <AdminPanel\n                            id='group_profile'\n                            titleId={t('admin.group_settings.group_detail.groupProfileTitle')}\n                            titleDefault='Group Profile'\n                            subtitleId={t('admin.group_settings.group_detail.groupProfileDescription')}\n                            subtitleDefault='The name for this group.'\n                        >\n                            <GroupProfile\n                                name={group.display_name}\n                            />\n                        </AdminPanel>\n\n                        <AdminPanel\n                            id='group_teams_and_channels'\n                            titleId={t('admin.group_settings.group_detail.groupTeamsAndChannelsTitle')}\n                            titleDefault='Team and Channel Membership'\n                            subtitleId={t('admin.group_settings.group_detail.groupTeamsAndChannelsDescription')}\n                            subtitleDefault='Set default teams and channels for group members. Teams added will include default channels, town-square, and off-topic. Adding a channel without setting the team will add the implied team to the listing below.'\n                            button={(\n                                <div className='group-profile-add-menu'>\n                                    <MenuWrapper>\n                                        <button className='btn btn-primary'>\n                                            <FormattedMessage\n                                                id='admin.group_settings.group_details.add_team_or_channel'\n                                                defaultMessage='Add Team or Channel'\n                                            />\n                                            <i className={'fa fa-caret-down'}/>\n                                        </button>\n                                        <Menu ariaLabel={localizeMessage('admin.group_settings.group_details.menuAriaLabel', 'Add Team or Channel Menu')}>\n                                            <Menu.ItemAction\n                                                onClick={this.openAddTeam}\n                                                text={localizeMessage('admin.group_settings.group_details.add_team', 'Add Team')}\n                                            />\n                                            <Menu.ItemAction\n                                                onClick={this.openAddChannel}\n                                                text={localizeMessage('admin.group_settings.group_details.add_channel', 'Add Channel')}\n                                            />\n                                        </Menu>\n                                    </MenuWrapper>\n                                </div>\n                            )}\n                        >\n                            <GroupTeamsAndChannels\n                                id={this.props.groupID}\n                                teams={groupTeams}\n                                channels={groupChannels}\n                                loading={this.state.loadingTeamsAndChannels}\n                                getGroupSyncables={this.props.actions.getGroupSyncables}\n                                unlink={this.props.actions.unlink}\n                            />\n                        </AdminPanel>\n                        {this.state.addTeamOpen &&\n                            <TeamSelectorModal\n                                onModalDismissed={this.closeAddTeam}\n                                onTeamsSelected={this.addTeams}\n                                alreadySelected={this.props.groupTeams.map((team) => team.team_id)}\n                            />\n                        }\n                        {this.state.addChannelOpen &&\n                            <ChannelSelectorModal\n                                onModalDismissed={this.closeAddChannel}\n                                onChannelsSelected={this.addChannels}\n                                alreadySelected={this.props.groupChannels.map((channel) => channel.channel_id)}\n                                groupID={this.props.groupID}\n                            />\n                        }\n\n                        <AdminPanel\n                            id='group_users'\n                            titleId={t('admin.group_settings.group_detail.groupUsersTitle')}\n                            titleDefault='Users'\n                            subtitleId={t('admin.group_settings.group_detail.groupUsersDescription')}\n                            subtitleDefault='Listing of users in Mattermost associated with this group.'\n                        >\n                            <GroupUsers\n                                members={members}\n                                total={memberCount}\n                                groupID={this.props.groupID}\n                                getMembers={this.props.actions.getMembers}\n                            />\n                        </AdminPanel>\n                    </div>\n                </div>\n\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class GroupProfile extends React.PureComponent {\n    static propTypes = {\n        name: PropTypes.string.isRequired,\n    };\n\n    render = () => {\n        const {name} = this.props;\n\n        return (\n            <div className='group-profile'>\n                <div className='group-profile-field'>\n                    <label>\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_profile.name'\n                            defaultMessage='Name:'\n                        />\n                    </label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        value={name}\n                        disabled={true}\n                    />\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Groups} from 'mattermost-redux/constants';\n\nimport GroupTeamsAndChannelsRow from 'components/admin_console/group_settings/group_details/group_teams_and_channels_row.jsx';\n\nexport default class GroupTeamsAndChannels extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        teams: PropTypes.arrayOf(PropTypes.object),\n        channels: PropTypes.arrayOf(PropTypes.object),\n        loading: PropTypes.bool.isRequired,\n        getGroupSyncables: PropTypes.func.isRequired,\n        unlink: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: {},\n        };\n    }\n\n    onToggleCollapse = (id) => {\n        const collapsed = {...this.state.collapsed};\n        collapsed[id] = !collapsed[id];\n        this.setState({collapsed});\n    }\n\n    onRemoveItem = async (id, type) => {\n        if (type === 'public-team' || type === 'private-team') {\n            await this.props.unlink(this.props.id, id, Groups.SYNCABLE_TYPE_TEAM);\n            await this.props.getGroupSyncables(this.props.id, Groups.SYNCABLE_TYPE_TEAM);\n        } else {\n            await this.props.unlink(this.props.id, id, Groups.SYNCABLE_TYPE_CHANNEL);\n            await this.props.getGroupSyncables(this.props.id, Groups.SYNCABLE_TYPE_CHANNEL);\n        }\n    }\n\n    teamsAndChannelsToEntries = (teams, channels) => {\n        const entries = [];\n\n        const existingTeams = new Set();\n        const teamEntries = [];\n        teams.forEach((team) => {\n            existingTeams.add(team.team_id);\n            teamEntries.push({\n                type: team.team_type === 'O' ? 'public-team' : 'private-team',\n                hasChildren: channels.some((channel) => channel.team_id === team.team_id),\n                name: team.team_display_name,\n                collapsed: this.state.collapsed[team.team_id],\n                id: team.team_id,\n                implicit: false,\n            });\n        });\n\n        const channelEntriesByTeam = {};\n        channels.forEach((channel) => {\n            channelEntriesByTeam[channel.team_id] = channelEntriesByTeam[channel.team_id] || [];\n            channelEntriesByTeam[channel.team_id].push({\n                type: channel.channel_type === 'O' ? 'public-channel' : 'private-channel',\n                name: channel.channel_display_name,\n                id: channel.channel_id,\n            });\n\n            if (!existingTeams.has(channel.team_id)) {\n                existingTeams.add(channel.team_id);\n                teamEntries.push({\n                    type: channel.team_type === 'O' ? 'public-team' : 'private-team',\n                    hasChildren: true,\n                    name: channel.team_display_name,\n                    collapsed: this.state.collapsed[channel.team_id],\n                    id: channel.team_id,\n                    implicit: true,\n                });\n            }\n        });\n\n        teamEntries.sort((a, b) => a.name.localeCompare(b.name));\n        teamEntries.forEach((team) => {\n            entries.push(team);\n            if (team.hasChildren && !team.collapsed) {\n                const teamChannels = channelEntriesByTeam[team.id];\n                teamChannels.sort((a, b) => a.name.localeCompare(b.name));\n                entries.push(...teamChannels);\n            }\n        });\n\n        return entries;\n    }\n\n    render = () => {\n        const entries = this.teamsAndChannelsToEntries(this.props.teams, this.props.channels);\n\n        if (this.props.loading) {\n            return (\n                <div className='group-teams-and-channels'>\n                    <div className='group-teams-and-channels-loading'>\n                        <i className='fa fa-spinner fa-pulse fa-2x'/>\n                    </div>\n                </div>\n            );\n        }\n\n        if (entries.length === 0) {\n            return (\n                <div className='group-teams-and-channels'>\n                    <div className='group-teams-and-channels-empty'>\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels.no-teams-or-channels-speicified'\n                            defaultMessage='No teams or channels specified yet'\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='group-teams-and-channels'>\n                <div className='group-teams-and-channels--header'>\n                    <FormattedMessage\n                        id='admin.group_settings.group_profile.group_teams_and_channels.name'\n                        defaultMessage='Name'\n                    />\n                </div>\n                <div className='group-teams-and-channels--body'>\n                    {entries.map((entry) => (\n                        <GroupTeamsAndChannelsRow\n                            key={entry.id}\n                            onRemoveItem={this.onRemoveItem}\n                            onToggleCollapse={this.onToggleCollapse}\n                            {...entry}\n                        />\n                    ))}\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nimport GlobeIcon from 'components/widgets/icons/globe_icon';\nimport LockIcon from 'components/widgets/icons/lock_icon';\n\nexport default class GroupTeamsAndChannelsRow extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        implicit: PropTypes.bool,\n        hasChildren: PropTypes.bool,\n        collapsed: PropTypes.bool,\n        onRemoveItem: PropTypes.func.isRequired,\n        onToggleCollapse: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showConfirmationModal: false,\n        };\n    }\n\n    removeItem = () => {\n        this.props.onRemoveItem(this.props.id, this.props.type);\n        this.setState({showConfirmationModal: false});\n    }\n\n    toggleCollapse = () => {\n        this.props.onToggleCollapse(this.props.id);\n    }\n\n    render = () => {\n        let extraClasses = '';\n        let arrowIcon = null;\n        if (this.props.hasChildren) {\n            arrowIcon = (\n                <i\n                    className={'fa fa-caret-right' + (this.props.collapsed ? '' : ' open')}\n                    onClick={this.toggleCollapse}\n                />\n            );\n            extraClasses += ' has-clidren';\n        }\n\n        if (this.props.collapsed) {\n            extraClasses += ' collapsed';\n        }\n\n        let teamIcon = null;\n        let channelIcon = null;\n        switch (this.props.type) {\n        case 'public-team':\n            teamIcon = (\n                <div className='team-icon team-icon-public'>\n                    <i className={'fa fa-circle-o-notch'}/>\n                </div>\n            );\n            break;\n        case 'private-team':\n            teamIcon = (\n                <div className='team-icon team-icon-private'>\n                    <span className='fa-stack fa-2x'>\n                        <i className={'fa fa-circle-thin fa-stack-2x'}/>\n                        <i className={'fa fa-lock fa-stack-1x'}/>\n                    </span>\n                </div>\n            );\n            break;\n        default:\n            teamIcon = (<div className='team-icon'/>);\n        }\n\n        switch (this.props.type) {\n        case 'public-channel':\n            channelIcon = (\n                <div className='channel-icon'>\n                    <GlobeIcon className='icon icon__globe'/>\n                </div>\n            );\n            break;\n        case 'private-channel':\n            channelIcon = (\n                <div className='channel-icon'>\n                    <LockIcon className='icon icon__lock'/>\n                </div>\n            );\n            break;\n        }\n\n        const displayType = this.props.type.split('-')[1];\n\n        return (\n            <div className={'group-teams-and-channels-row' + extraClasses}>\n                <ConfirmModal\n                    show={this.state.showConfirmationModal}\n                    title={\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_header'\n                            defaultMessage={`Remove Membership from the '${this.props.name}' ${displayType}?`}\n                            values={{name: this.props.name, displayType}}\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_body'\n                            defaultMessage={`Removing this membership will prevent future users in this group from being added to the '${this.props.name}' ${displayType}.`}\n                            values={{name: this.props.name, displayType}}\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_button'\n                            defaultMessage='Yes, Remove'\n                        />\n                    }\n                    onConfirm={this.removeItem}\n                    onCancel={() => this.setState({showConfirmationModal: false})}\n                />\n\n                <div className='arrow-icon'>\n                    {arrowIcon}\n                </div>\n                {teamIcon}\n                {channelIcon}\n                <div className='name'>\n                    {this.props.name}\n                </div>\n                <div className='remove'>\n                    {!this.props.implicit &&\n                        <button\n                            className='btn btn-link'\n                            onClick={() => this.setState({showConfirmationModal: true})}\n                        >\n                            <FormattedMessage\n                                id='admin.group_settings.group_details.group_teams_and_channels_row.remove'\n                                defaultMessage='Remove'\n                            />\n                        </button>\n                    }\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport GroupUsersRow from 'components/admin_console/group_settings/group_details/group_users_row';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nimport {getSiteURL} from 'utils/url';\n\nconst GROUP_MEMBERS_PAGE_SIZE = 20;\n\nexport default class GroupUsers extends React.PureComponent {\n    static propTypes = {\n        groupID: PropTypes.string.isRequired,\n        members: PropTypes.arrayOf(PropTypes.object),\n        total: PropTypes.number.isRequired,\n        getMembers: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            page: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.props.getMembers(this.props.groupID, 0, GROUP_MEMBERS_PAGE_SIZE).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    previousPage = async () => {\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page, loading: true});\n        await this.props.getMembers(this.props.groupID, page, GROUP_MEMBERS_PAGE_SIZE);\n        this.setState({loading: false});\n    }\n\n    nextPage = async () => {\n        const page = (this.state.page + 1) * GROUP_MEMBERS_PAGE_SIZE >= this.props.total ? this.state.page : this.state.page + 1;\n        this.setState({page, loading: true});\n        await this.props.getMembers(this.props.groupID, page, GROUP_MEMBERS_PAGE_SIZE);\n        this.setState({loading: false});\n    }\n\n    renderRows = () => {\n        if (this.props.members.length === 0) {\n            return (\n                <div className='group-users-empty'>\n                    <FormattedMessage\n                        id='admin.group_settings.group_details.group_users.no-users-found'\n                        defaultMessage='No users found'\n                    />\n                </div>\n            );\n        }\n        return this.props.members.map((member) => {\n            return (\n                <GroupUsersRow\n                    key={member.id}\n                    username={member.username}\n                    displayName={member.first_name + ' ' + member.last_name}\n                    email={member.email}\n                    userId={member.id}\n                    lastPictureUpdate={member.last_picture_update}\n                />\n            );\n        });\n    }\n\n    renderPagination = () => {\n        if (this.props.members.length === 0) {\n            return (<div className='group-users--footer empty'/>);\n        }\n\n        const startCount = (this.state.page * GROUP_MEMBERS_PAGE_SIZE) + 1;\n        let endCount = (this.state.page * GROUP_MEMBERS_PAGE_SIZE) + GROUP_MEMBERS_PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n\n        return (\n            <div className='group-users--footer'>\n                <div className='counter'>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.paginatorCount'\n                        defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                        values={{\n                            startCount,\n                            endCount,\n                            total,\n                        }}\n                    />\n                </div>\n                <button\n                    className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                    onClick={this.previousPage}\n                    disabled={firstPage}\n                >\n                    <PreviousIcon/>\n                </button>\n                <button\n                    className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                    onClick={this.nextPage}\n                    disabled={lastPage}\n                >\n                    <NextIcon/>\n                </button>\n            </div>\n        );\n    }\n\n    render = () => {\n        return (\n            <div className='group-users'>\n                <div className='group-users--header'>\n                    <FormattedMarkdownMessage\n                        id='admin.group_settings.group_profile.group_users.ldapConnector'\n                        defaultMessage={'AD/LDAP Connector is configured to sync and manage this group and its users. [Click here to view]({siteURL}/admin_console/authentication/ldap)'}\n                        values={{siteURL: getSiteURL()}}\n                    />\n                </div>\n                <div className='group-users--body'>\n                    <div className={'group-users-loading ' + (this.state.loading ? 'active' : '')}>\n                        <i className='fa fa-spinner fa-pulse fa-2x'/>\n                    </div>\n                    {this.renderRows()}\n                </div>\n                {this.renderPagination()}\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Client4} from 'mattermost-redux/client';\n\nimport Avatar from 'components/widgets/users/avatar';\n\nexport default class GroupUsersRow extends React.PureComponent {\n    static propTypes = {\n        username: PropTypes.string.isRequired,\n        displayName: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        userId: PropTypes.string.isRequired,\n        lastPictureUpdate: PropTypes.number.isRequired,\n    };\n\n    render = () => {\n        return (\n            <div className='group-users-row'>\n                <Avatar\n                    username={this.props.username}\n                    url={Client4.getProfilePictureUrl(this.props.userId, this.props.lastPictureUpdate)}\n                    size='lg'\n                />\n                <div className='user-data'>\n                    <div className='name-row'>\n                        <span className='username'>{'@' + this.props.username}</span>\n                        {'-'}\n                        <span className='display-name'>{this.props.displayName}</span>\n                    </div>\n                    <div>\n                        <span className='email-label'>\n                            <FormattedMessage\n                                id='admin.group_settings.group_details.group_users.email'\n                                defaultMessage='Email:'\n                            />\n                        </span>\n                        <span className='email'>{this.props.email}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {linkGroupSyncable, unlinkGroupSyncable, getGroup as fetchGroup, getGroupMembers as fetchMembers, getGroupSyncables as fetchGroupSyncables} from 'mattermost-redux/actions/groups';\nimport {getGroup, getGroupTeams, getGroupChannels, getGroupMembers, getGroupMemberCount} from 'mattermost-redux/selectors/entities/groups';\n\nimport GroupDetails from './group_details.jsx';\n\nfunction mapStateToProps(state, props) {\n    const groupID = props.match.params.group_id;\n    const group = getGroup(state, groupID);\n    const groupTeams = getGroupTeams(state, groupID);\n    const groupChannels = getGroupChannels(state, groupID);\n    const members = getGroupMembers(state, groupID);\n    const memberCount = getGroupMemberCount(state, groupID);\n\n    return {\n        groupID,\n        group,\n        groupTeams,\n        groupChannels,\n        members,\n        memberCount,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getGroup: fetchGroup,\n            getMembers: fetchMembers,\n            getGroupSyncables: fetchGroupSyncables,\n            link: linkGroupSyncable,\n            unlink: unlinkGroupSyncable,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupDetails);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon.jsx';\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\n\nexport default class GroupRow extends React.Component {\n    static propTypes = {\n        primary_key: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        mattermost_group_id: PropTypes.string,\n        has_syncables: PropTypes.bool,\n        checked: PropTypes.bool,\n        failed: PropTypes.bool,\n        onCheckToggle: PropTypes.func,\n        actions: PropTypes.shape({\n            link: PropTypes.func.isRequired,\n            unlink: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        };\n    }\n\n    onRowClick = () => {\n        this.props.onCheckToggle(this.props.primary_key);\n    }\n\n    linkHandler = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        this.setState({loading: true});\n        await this.props.actions.link(this.props.primary_key);\n        this.setState({loading: false});\n    }\n\n    unlinkHandler = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.setState({loading: true});\n        await this.props.actions.unlink(this.props.primary_key);\n        this.setState({loading: false});\n    }\n\n    renderActions = () => {\n        if (!this.props.mattermost_group_id) {\n            return null;\n        }\n        if (this.props.has_syncables) {\n            return (\n                <Link to={'/admin_console/user_management/groups/' + this.props.mattermost_group_id}>\n                    <FormattedMessage\n                        id='admin.group_settings.group_row.edit'\n                        defaultMessage='Edit'\n                    />\n                </Link>\n            );\n        }\n        return (\n            <Link to={'/admin_console/user_management/groups/' + this.props.mattermost_group_id}>\n                <FormattedMessage\n                    id='admin.group_settings.group_row.configure'\n                    defaultMessage='Configure'\n                />\n            </Link>\n        );\n    }\n\n    renderLinked = () => {\n        if (this.state.loading) {\n            return (\n                <a href='#'>\n                    {this.props.mattermost_group_id &&\n                        <LoadingSpinner text={localizeMessage('admin.group_settings.group_row.unlinking', 'Unlinking')}/>\n                    }\n                    {!this.props.mattermost_group_id &&\n                        <LoadingSpinner text={localizeMessage('admin.group_settings.group_row.linking', 'Linking')}/>\n                    }\n                </a>\n            );\n        }\n        if (this.props.mattermost_group_id) {\n            if (this.props.failed) {\n                return (\n                    <a\n                        href='#'\n                        onClick={this.unlinkHandler}\n                        className='warning'\n                    >\n                        <i className='icon fa fa-exclamation-triangle'/>\n                        <FormattedMessage\n                            id='admin.group_settings.group_row.unlink_failed'\n                            defaultMessage='Unlink failed'\n                        />\n                    </a>\n                );\n            }\n            return (\n                <a\n                    href='#'\n                    onClick={this.unlinkHandler}\n                >\n                    <i className='icon fa fa-link'/>\n                    <FormattedMessage\n                        id='admin.group_settings.group_row.linked'\n                        defaultMessage='Linked'\n                    />\n                </a>\n            );\n        }\n        if (this.props.failed) {\n            return (\n                <a\n                    href='#'\n                    onClick={this.linkHandler}\n                    className='warning'\n                >\n                    <i className='icon fa fa-exclamation-triangle'/>\n                    <FormattedMessage\n                        id='admin.group_settings.group_row.link_failed'\n                        defaultMessage='Link failed'\n                    />\n                </a>\n            );\n        }\n        return (\n            <a\n                href='#'\n                onClick={this.linkHandler}\n            >\n                <i className='icon fa fa-unlink'/>\n                <FormattedMessage\n                    id='admin.group_settings.group_row.not_linked'\n                    defaultMessage='Not Linked'\n                />\n            </a>\n        );\n    }\n\n    render = () => {\n        return (\n            <div\n                className={'group ' + (this.props.checked ? 'checked' : '')}\n                onClick={this.onRowClick}\n            >\n                <div className='group-row'>\n                    <div className='group-name'>\n                        <div\n                            className={'group-check ' + (this.props.checked ? 'checked' : '')}\n                        >\n                            {this.props.checked && <CheckboxCheckedIcon/>}\n                        </div>\n                        <span>\n                            {this.props.name}\n                        </span>\n                    </div>\n                    <div className='group-content'>\n                        <span className='group-description'>\n                            {this.renderLinked()}\n                        </span>\n                        <span className='group-actions'>\n                            {this.renderActions()}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport GroupsList from 'components/admin_console/group_settings/groups_list';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport {getSiteURL} from 'utils/url';\n\nexport default class GroupSettings extends React.PureComponent {\n    render = () => {\n        const siteURL = getSiteURL();\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header'>\n                    <FormattedMessage\n                        id='admin.group_settings.groupsPageTitle'\n                        defaultMessage='Groups'\n                    />\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className={'banner info'}>\n                            <div className='banner__content'>\n                                <FormattedMarkdownMessage\n                                    id='admin.group_settings.introBanner'\n                                    defaultMessage={'Groups are a way to organize users and apply actions to all users within that group.\\nFor more information on Groups, please see [documentation](!https://www.mattermost.com/default-ad-ldap-groups).'}\n                                />\n                            </div>\n                        </div>\n\n                        <AdminPanel\n                            id='ldap_groups'\n                            titleId={t('admin.group_settings.ldapGroupsTitle')}\n                            titleDefault='AD/LDAP Groups'\n                            subtitleId={t('admin.group_settings.ldapGroupsDescription')}\n                            subtitleDefault={`Link and configure groups from your AD/LDAP to Mattermost. Please ensure you have configured a [group filter](${siteURL}/admin_console/authentication/ldap).`}\n                            subtitleValues={{siteURL}}\n                        >\n                            <GroupsList/>\n                        </AdminPanel>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport GroupRow from 'components/admin_console/group_settings/group_row.jsx';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\nimport SearchIcon from 'components/widgets/icons/search_icon';\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon.jsx';\n\nimport {Constants} from 'utils/constants';\n\nconst LDAP_GROUPS_PAGE_SIZE = 200;\n\nconst FILTER_STATE_SEARCH_KEY_MAPPING = {\n    filterIsConfigured: {filter: 'is:configured', option: {is_configured: true}},\n    filterIsUnconfigured: {filter: 'is:notconfigured', option: {is_configured: false}},\n    filterIsLinked: {filter: 'is:linked', option: {is_linked: true}},\n    filterIsUnlinked: {filter: 'is:notlinked', option: {is_linked: false}},\n};\n\nexport default class GroupsList extends React.PureComponent {\n    static propTypes = {\n        groups: PropTypes.arrayOf(PropTypes.object),\n        total: PropTypes.number,\n        actions: PropTypes.shape({\n            getLdapGroups: PropTypes.func.isRequired,\n            link: PropTypes.func.isRequired,\n            unlink: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        groups: [],\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: {},\n            loading: true,\n            page: 0,\n            showFilters: false,\n            searchString: '',\n        };\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([key]) => {\n            this.state[key] = false;\n        });\n    }\n\n    closeFilters = () => {\n        this.setState({showFilters: false});\n    }\n\n    componentDidMount() {\n        this.props.actions.getLdapGroups(this.state.page, LDAP_GROUPS_PAGE_SIZE).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    previousPage = async (e) => {\n        e.preventDefault();\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({checked: {}, page, loading: true});\n        this.searchGroups(page);\n    }\n\n    nextPage = async (e) => {\n        e.preventDefault();\n        const page = this.state.page + 1;\n        this.setState({checked: {}, page, loading: true});\n        this.searchGroups(page);\n    }\n\n    onCheckToggle = (key) => {\n        const newChecked = {...this.state.checked};\n        newChecked[key] = !newChecked[key];\n        this.setState({checked: newChecked});\n    }\n\n    linkSelectedGroups = () => {\n        for (const group of this.props.groups) {\n            if (this.state.checked[group.primary_key] && !group.mattermost_group_id) {\n                this.props.actions.link(group.primary_key);\n            }\n        }\n    }\n\n    unlinkSelectedGroups = () => {\n        for (const group of this.props.groups) {\n            if (this.state.checked[group.primary_key] && group.mattermost_group_id) {\n                this.props.actions.unlink(group.primary_key);\n            }\n        }\n    }\n\n    selectionActionButtonType = () => {\n        let hasSelectedLinked = false;\n        for (const group of this.props.groups) {\n            if (this.state.checked[group.primary_key]) {\n                if (!group.mattermost_group_id) {\n                    return 'link';\n                }\n                hasSelectedLinked = true;\n            }\n        }\n        if (hasSelectedLinked) {\n            return 'unlink';\n        }\n\n        return 'disabled';\n    }\n\n    renderSelectionActionButton = () => {\n        switch (this.selectionActionButtonType()) {\n        case 'link':\n            return (\n                <button\n                    className='btn btn-primary'\n                    onClick={this.linkSelectedGroups}\n                >\n                    <i className='icon fa fa-link'/>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.link_selected'\n                        defaultMessage='Link Selected Groups'\n                    />\n                </button>\n            );\n        case 'unlink':\n            return (\n                <button\n                    className='btn btn-primary'\n                    onClick={this.unlinkSelectedGroups}\n                >\n                    <i className='icon fa fa-unlink'/>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.unlink_selected'\n                        defaultMessage='Unlink Selected Groups'\n                    />\n                </button>\n            );\n        default:\n            return (\n                <button\n                    className='btn btn-inactive disabled'\n                >\n                    <i className='icon fa fa-link'/>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.link_selected'\n                        defaultMessage='Link Selected Groups'\n                    />\n                </button>\n            );\n        }\n    }\n\n    renderRows = () => {\n        if (this.state.loading) {\n            return (\n                <div className='groups-list-loading'>\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\n                </div>\n            );\n        }\n        if (this.props.groups.length === 0) {\n            return (\n                <div className='groups-list-empty'>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.no_groups_found'\n                        defaultMessage='No groups found'\n                    />\n                </div>\n            );\n        }\n        return this.props.groups.map((item) => {\n            return (\n                <GroupRow\n                    key={item.primary_key}\n                    primary_key={item.primary_key}\n                    name={item.name}\n                    mattermost_group_id={item.mattermost_group_id}\n                    has_syncables={item.has_syncables}\n                    failed={item.failed}\n                    checked={Boolean(this.state.checked[item.primary_key])}\n                    onCheckToggle={this.onCheckToggle}\n                    actions={{\n                        link: this.props.actions.link,\n                        unlink: this.props.actions.unlink,\n                    }}\n                />\n            );\n        });\n    }\n\n    regex = (str) => {\n        return new RegExp(`(${str})`, 'i');\n    }\n\n    searchGroups = (page) => {\n        let {searchString} = this.state;\n\n        const newState = {...this.state};\n        delete newState.page;\n        delete newState.checked;\n\n        let q = searchString;\n        let opts = {q: ''};\n\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([key, value]) => {\n            const re = this.regex(value.filter);\n            if (re.test(searchString)) {\n                newState[key] = true;\n                q = q.replace(re, '');\n                opts = Object.assign(opts, value.option);\n            } else if (this.state[key]) {\n                searchString += ' ' + value.filter;\n            }\n        });\n\n        opts.q = q.trim();\n\n        newState.searchString = searchString;\n        newState.showFilters = false;\n        newState.loading = true;\n        newState.showFilters = false;\n        this.setState(newState);\n\n        this.props.actions.getLdapGroups(page, LDAP_GROUPS_PAGE_SIZE, opts).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    handleGroupSearchKeyUp = (e) => {\n        const {key} = e;\n        const {searchString} = this.state;\n        if (key === Constants.KeyCodes.ENTER[0]) {\n            this.setState({page: 0});\n            this.searchGroups();\n        }\n        const newState = {};\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([k, value]) => {\n            if (!this.regex(value.filter).test(searchString)) {\n                newState[k] = false;\n            }\n        });\n        this.setState(newState);\n    }\n\n    newSearchString = (searchString, stateKey, checked) => {\n        let newSearchString = searchString;\n        const {filter} = FILTER_STATE_SEARCH_KEY_MAPPING[stateKey];\n        const re = this.regex(filter);\n        const stringFilterPresent = re.test(searchString);\n\n        if (stringFilterPresent && !checked) {\n            newSearchString = searchString.replace(re, '').trim();\n        }\n\n        if (!stringFilterPresent && checked) {\n            newSearchString += ' ' + filter;\n        }\n\n        return newSearchString.replace(/\\s{2,}/g, ' ');\n    }\n\n    handleFilterCheck = (updates) => {\n        let {searchString} = this.state;\n        updates.forEach((item) => {\n            searchString = this.newSearchString(searchString, item[0], item[1]);\n            this.setState({[item[0]]: item[1]});\n        });\n        this.setState({searchString});\n    }\n\n    renderSearchFilters = () => {\n        return (\n            <div\n                id='group-filters'\n                className='group-search-filters'\n                onClick={(e) => {\n                    e.nativeEvent.stopImmediatePropagation();\n                }}\n            >\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsLinked ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsLinked', !this.state.filterIsLinked], ['filterIsUnlinked', false]])}\n                    >\n                        {this.state.filterIsLinked && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isLinked'\n                            defaultMessage='Is Linked'\n                        />\n                    </span>\n                </div>\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsUnlinked ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsUnlinked', !this.state.filterIsUnlinked], ['filterIsLinked', false]])}\n                    >\n                        {this.state.filterIsUnlinked && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isUnlinked'\n                            defaultMessage='Is Not Linked'\n                        />\n                    </span>\n                </div>\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsConfigured ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsConfigured', !this.state.filterIsConfigured], ['filterIsUnconfigured', false]])}\n                    >\n                        {this.state.filterIsConfigured && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isConfigured'\n                            defaultMessage='Is Configured'\n                        />\n                    </span>\n                </div>\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsUnconfigured ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsUnconfigured', !this.state.filterIsUnconfigured], ['filterIsConfigured', false]])}\n                    >\n                        {this.state.filterIsUnconfigured && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isUnconfigured'\n                            defaultMessage='Is Not Configured'\n                        />\n                    </span>\n                </div>\n                <a\n                    onClick={() => {\n                        this.setState({page: 0});\n                        this.searchGroups(0);\n                    }}\n                    className='btn btn-primary search-groups-btn'\n                >\n                    <FormattedMessage\n                        id='search_bar.search'\n                        defaultMessage='Search'\n                    />\n                </a>\n            </div>\n        );\n    }\n\n    resetFiltersAndSearch = () => {\n        const newState = {\n            showFilters: false,\n            searchString: '',\n            loading: true,\n            page: 0,\n        };\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([key]) => {\n            newState[key] = false;\n        });\n        this.setState(newState);\n        this.props.actions.getLdapGroups(this.state.page, LDAP_GROUPS_PAGE_SIZE, {q: ''}).then(() => {\n            this.setState({loading: false});\n        });\n    };\n\n    render = () => {\n        const startCount = (this.state.page * LDAP_GROUPS_PAGE_SIZE) + 1;\n        let endCount = (this.state.page * LDAP_GROUPS_PAGE_SIZE) + LDAP_GROUPS_PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n        return (\n            <div className='groups-list'>\n                <div className='groups-list--global-actions'>\n                    <div className='group-list-search'>\n                        <input\n                            type='text'\n                            placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                            onKeyUp={this.handleGroupSearchKeyUp}\n                            onChange={(e) => this.setState({searchString: e.target.value})}\n                            value={this.state.searchString}\n                        />\n                        <SearchIcon\n                            className='search__icon'\n                            aria-hidden='true'\n                        />\n                        <i\n                            className={'fa fa-times-circle group-filter-action ' + (this.state.searchString.length ? '' : 'hidden')}\n                            onClick={this.resetFiltersAndSearch}\n                        />\n                        <i\n                            className={'fa fa-caret-down group-filter-action ' + (this.state.showFilters ? 'hidden' : '')}\n                            onClick={() => {\n                                document.addEventListener('click', this.closeFilters, {once: true});\n                                this.setState({showFilters: true});\n                            }}\n                        />\n                    </div>\n                    {this.state.showFilters && this.renderSearchFilters()}\n                    <div className='group-list-link-unlink'>\n                        {this.renderSelectionActionButton()}\n                    </div>\n                </div>\n                <div className='groups-list--header'>\n                    <div className='group-name'>\n                        <FormattedMessage\n                            id='admin.group_settings.groups_list.nameHeader'\n                            defaultMessage='Name'\n                        />\n                    </div>\n                    <div className='group-content'>\n                        <div className='group-description'>\n                            <FormattedMessage\n                                id='admin.group_settings.groups_list.mappingHeader'\n                                defaultMessage='Mattermost Linking'\n                            />\n                        </div>\n                        <div className='group-actions'/>\n                    </div>\n                </div>\n                <div className='groups-list--body'>\n                    {this.renderRows()}\n                </div>\n                {total > 0 &&\n                    <div className='groups-list--footer'>\n                        <div className='counter'>\n                            <FormattedMessage\n                                id='admin.group_settings.groups_list.paginatorCount'\n                                defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                                values={{\n                                    startCount,\n                                    endCount,\n                                    total,\n                                }}\n                            />\n                        </div>\n                        <button\n                            className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                            onClick={firstPage ? null : this.previousPage}\n                            disabled={firstPage}\n                        >\n                            <PreviousIcon/>\n                        </button>\n                        <button\n                            className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                            onClick={lastPage ? null : this.nextPage}\n                            disabled={lastPage}\n                        >\n                            <NextIcon/>\n                        </button>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {linkLdapGroup, unlinkLdapGroup, getLdapGroups as fetchLdapGroups} from 'mattermost-redux/actions/admin';\nimport {getLdapGroups, getLdapGroupsCount} from 'mattermost-redux/selectors/entities/admin';\n\nimport GroupsList from './groups_list.jsx';\n\nconst getSortedListOfLdapGroups = createSelector(\n    getLdapGroups,\n    (ldapGroups) => {\n        const groups = Object.values(ldapGroups);\n        groups.sort((a, b) => a.name.localeCompare(b.name));\n        return groups;\n    }\n);\n\nfunction mapStateToProps(state) {\n    return {\n        groups: getSortedListOfLdapGroups(state),\n        total: getLdapGroupsCount(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getLdapGroups: fetchLdapGroups,\n            link: linkLdapGroup,\n            unlink: unlinkLdapGroup,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupsList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport Mark from 'mark.js';\nimport debounce from 'lodash/debounce';\n\ntype Props = {\n    filter: string;\n    children: React.ReactNode;\n}\n\nexport default class Highlight extends React.Component<Props> {\n    private markInstance? : Mark;\n    private ref: React.RefObject<HTMLDivElement>;\n\n    public constructor(props: Props) {\n        super(props);\n        this.ref = React.createRef<HTMLDivElement>();\n    }\n\n    private redrawHighlight = debounce(() => {\n        if (this.markInstance) {\n            this.markInstance.unmark();\n        }\n\n        if (!this.props.filter) {\n            return;\n        }\n\n        if (!this.ref.current) {\n            return;\n        }\n\n        // Is necesary to recreate the instances to get again the DOM elements after the re-render\n        this.markInstance = new Mark(this.ref.current);\n        this.markInstance.mark(this.props.filter, {accuracy: 'complementary'});\n    }, 100, {leading: true, trailing: true});\n\n    public render() {\n        // Run on next frame\n        setTimeout(this.redrawHighlight, 0);\n        return (\n            <div ref={this.ref}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getConfig, getEnvironmentConfig, updateConfig} from 'mattermost-redux/actions/admin';\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\nimport {withRouter} from 'react-router-dom';\nimport {getConfig as getGeneralConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {isCurrentUserSystemAdmin, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {General} from 'mattermost-redux/constants';\n\nimport {setNavigationBlocked, deferNavigation, cancelNavigation, confirmNavigation} from 'actions/admin_actions.jsx';\nimport {getNavigationBlocked, showNavigationPrompt} from 'selectors/views/admin';\nimport {getAdminDefinition} from 'selectors/admin_console';\n\nimport LocalStorageStore from 'stores/local_storage_store';\n\nimport AdminConsole from './admin_console.jsx';\n\nfunction mapStateToProps(state) {\n    const generalConfig = getGeneralConfig(state);\n    const buildEnterpriseReady = generalConfig.BuildEnterpriseReady === 'true';\n    const adminDefinition = getAdminDefinition(state);\n    const teamId = LocalStorageStore.getPreviousTeamId(getCurrentUserId(state));\n    const team = getTeam(state, teamId);\n    const unauthorizedRoute = team ? `/${team.name}/channels/${General.DEFAULT_CHANNEL}` : '/';\n\n    return {\n        config: Selectors.getConfig(state),\n        environmentConfig: Selectors.getEnvironmentConfig(state),\n        license: getLicense(state),\n        buildEnterpriseReady,\n        unauthorizedRoute,\n        navigationBlocked: getNavigationBlocked(state),\n        showNavigationPrompt: showNavigationPrompt(state),\n        isCurrentUserSystemAdmin: isCurrentUserSystemAdmin(state),\n        roles: getRoles(state),\n        adminDefinition,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getConfig,\n            getEnvironmentConfig,\n            updateConfig,\n            setNavigationBlocked,\n            deferNavigation,\n            cancelNavigation,\n            confirmNavigation,\n            loadRolesIfNeeded,\n            editRole,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AdminConsole));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getJobsByType, createJob, cancelJob} from 'mattermost-redux/actions/jobs';\nimport * as Selectors from 'mattermost-redux/selectors/entities/jobs';\n\nimport Table from './table.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        jobs: Selectors.makeGetJobsByType(ownProps.jobType)(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getJobsByType,\n            createJob,\n            cancelJob,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate, FormattedMessage, FormattedTime, injectIntl, intlShape} from 'react-intl';\n\nimport {JobStatuses} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\nclass JobTable extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Used for formatting dates\n         */\n        intl: intlShape.isRequired,\n\n        /**\n         * Array of jobs\n         */\n        jobs: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /**\n         * Function called when displaying extra text.\n         */\n        getExtraInfoText: PropTypes.func,\n\n        /**\n         * Grey buttons out when disabled\n         */\n        disabled: PropTypes.bool,\n\n        /**\n         * Help text under the create job button\n         */\n        createJobHelpText: PropTypes.element.isRequired,\n\n        /**\n         * Button text to create a new job\n         */\n        createJobButtonText: PropTypes.element.isRequired,\n\n        /**\n         * The type of jobs to include in this table.\n         */\n        jobType: PropTypes.string.isRequired,\n\n        actions: PropTypes.shape({\n            getJobsByType: PropTypes.func.isRequired,\n            cancelJob: PropTypes.func.isRequired,\n            createJob: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.interval = null;\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getJobsByType(this.props.jobType).then(\n            () => this.setState({loading: false})\n        );\n\n        this.interval = setInterval(this.reload, 15000);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    getStatus = (job) => {\n        const formatMessage = this.props.intl.formatMessage;\n        if (job.status === JobStatuses.PENDING) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusPending'\n                        defaultMessage='Pending'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.IN_PROGRESS) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusInProgress'\n                        defaultMessage='In Progress'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.SUCCESS) {\n            return (\n                <span\n                    className='status-icon-success'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusSuccess'\n                        defaultMessage='Success'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.ERROR) {\n            return (\n                <span\n                    className='status-icon-error'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusError'\n                        defaultMessage='Error'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.CANCEL_REQUESTED) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusCanceling'\n                        defaultMessage='Canceling...'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.CANCELED) {\n            return (\n                <span\n                    className='status-icon-error'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusCanceled'\n                        defaultMessage='Canceled'\n                    />\n                </span>\n            );\n        }\n\n        return (\n            <span title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}>{job.status}</span>\n        );\n    }\n\n    getExtraInfoText = (job) => {\n        if (job.data && job.data.error && job.data.error.length > 0) {\n            return <span title={job.data.error}>{job.data.error}</span>;\n        }\n\n        if (this.props.getExtraInfoText) {\n            return this.props.getExtraInfoText(job);\n        }\n\n        return <span/>;\n    }\n\n    getRunLength = (job) => {\n        let millis = job.last_activity_at - job.start_at;\n        if (job.status === JobStatuses.IN_PROGRESS) {\n            const runningMillis = Date.now() - job.start_at;\n            if (runningMillis > millis) {\n                millis = runningMillis;\n            }\n        }\n\n        let lastActivity = Utils.localizeMessage('admin.jobTable.lastActivityAt', 'Last Activity: ') + '--';\n\n        if (job.last_activity_at > 0) {\n            lastActivity = Utils.localizeMessage('admin.jobTable.lastActivityAt', 'Last Activity: ') +\n                this.props.intl.formatDate(new Date(job.last_activity_at), {\n                    year: 'numeric',\n                    month: 'short',\n                    day: '2-digit',\n                }) + ' - ' +\n                this.props.intl.formatTime(new Date(job.last_activity_at), {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit',\n                });\n        }\n\n        var seconds = Math.round(millis / 1000);\n        var minutes = Math.round(millis / (1000 * 60));\n\n        if (millis <= 0 || job.status === JobStatuses.CANCELED) {\n            return (\n                <span className='whitespace--nowrap'>{'--'}</span>\n            );\n        }\n\n        if (seconds <= 120) {\n            return (\n                <span\n                    className='whitespace--nowrap'\n                    title={lastActivity}\n                >\n                    {seconds + Utils.localizeMessage('admin.jobTable.runLengthSeconds', ' seconds')}\n                </span>\n            );\n        }\n\n        return (\n            <span\n                className='whitespace--nowrap'\n                title={lastActivity}\n            >\n                {minutes + Utils.localizeMessage('admin.jobTable.runLengthMinutes', ' minutes')}\n            </span>\n        );\n    }\n\n    getFinishAt = (status, millis) => {\n        if (millis === 0 || status === JobStatuses.PENDING || status === JobStatuses.IN_PROGRESS || status === JobStatuses.CANCEL_REQUESTED) {\n            return (\n                <span className='whitespace--nowrap'>{'--'}</span>\n            );\n        }\n\n        const date = new Date(millis);\n\n        return (\n            <span className='whitespace--nowrap'>\n                <FormattedDate\n                    value={date}\n                    day='2-digit'\n                    month='short'\n                    year='numeric'\n                />\n                {' - '}\n                <FormattedTime\n                    value={date}\n                    hour='2-digit'\n                    minute='2-digit'\n                />\n            </span>\n        );\n    }\n\n    reload = () => {\n        this.setState({loading: true});\n\n        this.props.actions.getJobsByType(this.props.jobType).then(\n            () => {\n                this.setState({\n                    loading: false,\n                });\n            }\n        );\n    };\n\n    handleCancelJob = async (e) => {\n        e.preventDefault();\n        const jobId = e.currentTarget.getAttribute('data-job-id');\n        await this.props.actions.cancelJob(jobId);\n        this.reload();\n    };\n\n    handleCreateJob = async (e) => {\n        e.preventDefault();\n        const job = {\n            type: this.props.jobType,\n        };\n\n        await this.props.actions.createJob(job);\n        this.reload();\n    };\n\n    getCancelButton = (job) => {\n        const formatMessage = this.props.intl.formatMessage;\n        let cancelButton = null;\n\n        if (!this.props.disabled && (job.status === JobStatuses.PENDING || job.status === JobStatuses.IN_PROGRESS)) {\n            cancelButton = (\n                <span\n                    data-job-id={job.id}\n                    onClick={this.handleCancelJob}\n                    className='job-table__cancel-button'\n                    title={formatMessage({id: 'admin.jobTable.cancelButton', defaultMessage: 'Cancel'})}\n                >\n                    {'×'}\n                </span>\n            );\n        }\n\n        return cancelButton;\n    }\n\n    render() {\n        var items = this.props.jobs.map((job) => {\n            return (\n                <tr key={job.id}>\n                    <td\n                        width='30px'\n                        className='whitespace--nowrap text-center'\n                    >\n                        {this.getCancelButton(job)}\n                    </td>\n                    <td className='whitespace--nowrap'>{this.getStatus(job)}</td>\n                    <td className='whitespace--nowrap'>{this.getFinishAt(job.status, job.last_activity_at)}</td>\n                    <td className='whitespace--nowrap'>{this.getRunLength(job)}</td>\n                    <td>{this.getExtraInfoText(job)}</td>\n                </tr>\n            );\n        });\n\n        return (\n            <div className='job-table__panel'>\n                <div className='job-table__create-button'>\n                    <div>\n                        <button\n                            className='btn btn-default'\n                            onClick={this.handleCreateJob}\n                            disabled={this.props.disabled}\n                        >\n                            {this.props.createJobButtonText}\n                        </button>\n                    </div>\n                    <div className='help-text'>\n                        {this.props.createJobHelpText}\n                    </div>\n                </div>\n                <div className='job-table__table'>\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th width='30px'/>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerStatus'\n                                        defaultMessage='Status'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerFinishAt'\n                                        defaultMessage='Finish Time'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerRunTime'\n                                        defaultMessage='Run Time'\n                                    />\n                                </th>\n                                <th colSpan='3'>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerExtraInfo'\n                                        defaultMessage='Details'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {items}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default injectIntl(JobTable);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getLicenseConfig} from 'mattermost-redux/actions/general';\nimport {uploadLicense, removeLicense} from 'mattermost-redux/actions/admin';\n\nimport LicenseSettings from './license_settings.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getLicenseConfig,\n            uploadLicense,\n            removeLicense,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(LicenseSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate, FormattedTime, FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nexport default class LicenseSettings extends React.Component {\n    static propTypes = {\n        license: PropTypes.object.isRequired,\n        config: PropTypes.object,\n        actions: PropTypes.shape({\n            getLicenseConfig: PropTypes.func.isRequired,\n            uploadLicense: PropTypes.func.isRequired,\n            removeLicense: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fileSelected: false,\n            fileName: null,\n            serverError: null,\n            removing: false,\n            uploading: false,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getLicenseConfig();\n    }\n\n    handleChange = () => {\n        const element = this.refs.fileInput;\n        if (element && element.files.length > 0) {\n            this.setState({fileSelected: true, fileName: element.files[0].name});\n        }\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const element = this.refs.fileInput;\n        if (!element || element.files.length === 0) {\n            return;\n        }\n        const file = element.files[0];\n\n        this.setState({uploading: true});\n\n        const {error} = await this.props.actions.uploadLicense(file);\n        if (error) {\n            Utils.clearFileInput(element[0]);\n            this.setState({fileSelected: false, fileName: null, serverError: error.message, uploading: false});\n            return;\n        }\n\n        await this.props.actions.getLicenseConfig();\n        this.setState({fileSelected: false, fileName: null, serverError: null, uploading: false});\n    }\n\n    handleRemove = async (e) => {\n        e.preventDefault();\n\n        this.setState({removing: true});\n\n        const {error} = await this.props.actions.removeLicense();\n        if (error) {\n            this.setState({fileSelected: false, fileName: null, serverError: error.message, removing: false});\n            return;\n        }\n\n        await this.props.actions.getLicenseConfig();\n        this.setState({fileSelected: false, fileName: null, serverError: null, removing: false});\n    }\n\n    render() {\n        let serverError = '';\n        if (this.state.serverError) {\n            serverError = <div className='col-sm-12'><div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div></div>;\n        }\n\n        var btnClass = 'btn';\n        if (this.state.fileSelected) {\n            btnClass = 'btn btn-primary';\n        }\n\n        const {license} = this.props;\n        const {uploading} = this.state;\n\n        let edition;\n        let licenseType;\n        let licenseKey;\n\n        const issued = (\n            <React.Fragment>\n                <FormattedDate value={new Date(parseInt(license.IssuedAt, 10))}/>\n                {' '}\n                <FormattedTime value={new Date(parseInt(license.IssuedAt, 10))}/>\n            </React.Fragment>\n        );\n        const startsAt = <FormattedDate value={new Date(parseInt(license.StartsAt, 10))}/>;\n        const expiresAt = <FormattedDate value={new Date(parseInt(license.ExpiresAt, 10))}/>;\n\n        if (license.IsLicensed === 'true' && !uploading) {\n            // Note: DO NOT LOCALISE THESE STRINGS. Legally we can not since the license is in English.\n            const sku = license.SkuShortName ? <React.Fragment>{`Edition: Mattermost Enterprise Edition ${license.SkuShortName}`}<br/></React.Fragment> : null;\n            edition = 'Mattermost Enterprise Edition. Enterprise features on this server have been unlocked with a license key and a valid subscription.';\n            licenseType = (\n                <div>\n                    <p>\n                        {'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.\\n\\nYour subscription details are as follows:'}\n                    </p>\n                    {`Name: ${license.Name}`}<br/>\n                    {`Company or organization name: ${license.Company}`}<br/>\n                    {sku}\n                    {`Number of users: ${license.Users}`}<br/>\n                    {'License issued: '}{issued}<br/>\n                    {'Start date of license: '}{startsAt}<br/>\n                    {'Expiry date of license: '}{expiresAt}<br/>\n                    <br/>\n                    {'See also '}\n                    <a\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://about.mattermost.com/enterprise-edition-terms/'\n                    >{'Enterprise Edition Terms of Service'}</a>{' and '}\n                    <a\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://about.mattermost.com/default-privacy-policy/'\n                    >{'Privacy Policy.'}</a>\n                </div>\n            );\n\n            let removeButtonText = (\n                <FormattedMessage\n                    id='admin.license.keyRemove'\n                    defaultMessage='Remove Enterprise License and Downgrade Server'\n                />\n            );\n            if (this.state.removing) {\n                removeButtonText = (\n                    <FormattedMessage\n                        id='admin.license.removing'\n                        defaultMessage='Removing License...'\n                    />\n                );\n            }\n\n            licenseKey = (\n                <div className='col-sm-8'>\n                    <button\n                        className='btn btn-danger'\n                        onClick={this.handleRemove}\n                        id='remove-button'\n                    >\n                        {removeButtonText}\n                    </button>\n                    <br/>\n                    <br/>\n                    <p className='help-text'>\n                        {'If you migrate servers you may need to remove your license key to install it elsewhere. You can remove the key here, which will revert functionality to that of Team Edition.'}\n                    </p>\n                </div>\n            );\n        } else {\n            // Note: DO NOT LOCALISE THESE STRINGS. Legally we can not since the license is in English.\n            edition = (\n                <p>\n                    {'Mattermost Enterprise Edition. A license is required to unlock enterprise features. Start a trial subscription at '}\n                    <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href='https://mattermost.com/trial/?utm_medium=product&utm_source=product-trial'\n                    >\n                        {'https://mattermost.com/trial/'}\n                    </a>\n                </p>\n            );\n\n            licenseType = 'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.';\n\n            let fileName;\n            if (this.state.fileName) {\n                fileName = this.state.fileName;\n            } else {\n                fileName = (\n                    <FormattedMessage\n                        id='admin.license.noFile'\n                        defaultMessage='No file uploaded'\n                    />\n                );\n            }\n\n            let uploadButtonText = (\n                <FormattedMessage\n                    id='admin.license.upload'\n                    defaultMessage='Upload'\n                />\n            );\n            if (uploading) {\n                uploadButtonText = (\n                    <FormattedMessage\n                        id='admin.license.uploading'\n                        defaultMessage='Uploading License...'\n                    />\n                );\n            }\n\n            licenseKey = (\n                <div className='col-sm-8'>\n                    <div className='file__upload'>\n                        <button className='btn btn-primary'>\n                            <FormattedMessage\n                                id='admin.license.choose'\n                                defaultMessage='Choose File'\n                            />\n                        </button>\n                        <input\n                            ref='fileInput'\n                            type='file'\n                            accept='.mattermost-license'\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <button\n                        className={btnClass}\n                        disabled={!this.state.fileSelected}\n                        onClick={this.handleSubmit}\n                        id='upload-button'\n                    >\n                        {uploadButtonText}\n                    </button>\n                    <div className='help-text no-margin'>\n                        {fileName}\n                    </div>\n                    <br/>\n                    {serverError}\n                    <p className='help-text no-margin'>\n                        <FormattedMarkdownMessage\n                            id='admin.license.uploadDesc'\n                            defaultMessage='Upload a license key for Mattermost Enterprise Edition to upgrade this server. [Visit us online](!http://mattermost.com) to learn more about the benefits of Enterprise Edition or to purchase a key.'\n                        />\n                    </p>\n                </div>\n            );\n        }\n\n        return (\n            <div className='wrapper--fixed'>\n                <FormattedAdminHeader\n                    id='admin.license.title'\n                    defaultMessage='Edition and License'\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <form\n                            className='form-horizontal'\n                            role='form'\n                        >\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                >\n                                    <FormattedMessage\n                                        id='admin.license.edition'\n                                        defaultMessage='Edition: '\n                                    />\n                                </label>\n                                <div className='col-sm-8'>\n                                    {edition}\n                                </div>\n                            </div>\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                >\n                                    <FormattedMessage\n                                        id='admin.license.type'\n                                        defaultMessage='License: '\n                                    />\n                                </label>\n                                <div className='col-sm-8'>\n                                    {licenseType}\n                                </div>\n                            </div>\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                >\n                                    <FormattedMessage\n                                        id='admin.license.key'\n                                        defaultMessage='License Key: '\n                                    />\n                                </label>\n                                {licenseKey}\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {updateUserRoles} from 'mattermost-redux/actions/users';\n\nimport ManageRolesModal from './manage_roles_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        userAccessTokensEnabled: state.entities.admin.config.ServiceSettings.EnableUserAccessTokens,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateUserRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageRolesModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\nimport {General} from 'mattermost-redux/constants';\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport BotBadge from 'components/widgets/badges/bot_badge';\nimport Avatar from 'components/widgets/users/avatar';\n\nfunction getStateFromProps(props) {\n    const roles = props.user && props.user.roles ? props.user.roles : '';\n\n    return {\n        user: props.user,\n        error: null,\n        hasPostAllRole: UserUtils.hasPostAllRole(roles),\n        hasPostAllPublicRole: UserUtils.hasPostAllPublicRole(roles),\n        hasUserAccessTokenRole: UserUtils.hasUserAccessTokenRole(roles),\n        isSystemAdmin: UserUtils.isSystemAdmin(roles),\n    };\n}\n\nexport default class ManageRolesModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Set to render the modal\n         */\n        show: PropTypes.bool.isRequired,\n\n        /**\n         * The user the roles are being managed for\n         */\n        user: PropTypes.object,\n\n        /**\n         * Set if user access tokens are enabled\n         */\n        userAccessTokensEnabled: PropTypes.bool.isRequired,\n\n        /**\n         * Function called when modal is dismissed\n         */\n        onModalDismissed: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Function to update a user's roles\n             */\n            updateUserRoles: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = getStateFromProps(props);\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const prevUser = prevState.user || {};\n        const user = nextProps.user || {};\n\n        if (prevUser.id !== user.id) {\n            return getStateFromProps(nextProps);\n        }\n        return null;\n    }\n\n    handleError = (error) => {\n        this.setState({\n            error,\n        });\n    }\n\n    handleSystemAdminChange = (e) => {\n        if (e.target.name === 'systemadmin') {\n            this.setState({isSystemAdmin: true});\n        } else if (e.target.name === 'systemmember') {\n            this.setState({isSystemAdmin: false});\n        }\n    };\n\n    handleUserAccessTokenChange = (e) => {\n        this.setState({\n            hasUserAccessTokenRole: e.target.checked,\n        });\n    };\n\n    handlePostAllChange = (e) => {\n        this.setState({\n            hasPostAllRole: e.target.checked,\n        });\n    };\n\n    handlePostAllPublicChange = (e) => {\n        this.setState({\n            hasPostAllPublicRole: e.target.checked,\n        });\n    };\n\n    trackRoleChanges = (roles, oldRoles) => {\n        if (UserUtils.hasUserAccessTokenRole(roles) && !UserUtils.hasUserAccessTokenRole(oldRoles)) {\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_USER_ACCESS_TOKEN_ROLE});\n        } else if (!UserUtils.hasUserAccessTokenRole(roles) && UserUtils.hasUserAccessTokenRole(oldRoles)) {\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_USER_ACCESS_TOKEN_ROLE});\n        }\n\n        if (UserUtils.hasPostAllRole(roles) && !UserUtils.hasPostAllRole(oldRoles)) {\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_POST_ALL_ROLE});\n        } else if (!UserUtils.hasPostAllRole(roles) && UserUtils.hasPostAllRole(oldRoles)) {\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_POST_ALL_ROLE});\n        }\n\n        if (UserUtils.hasPostAllPublicRole(roles) && !UserUtils.hasPostAllPublicRole(oldRoles)) {\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_POST_ALL_PUBLIC_ROLE});\n        } else if (!UserUtils.hasPostAllPublicRole(roles) && UserUtils.hasPostAllPublicRole(oldRoles)) {\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_POST_ALL_PUBLIC_ROLE});\n        }\n    }\n\n    handleSave = async () => {\n        this.setState({error: null});\n\n        let roles = General.SYSTEM_USER_ROLE;\n\n        if (this.state.isSystemAdmin) {\n            roles += ' ' + General.SYSTEM_ADMIN_ROLE;\n        } else if (this.state.hasUserAccessTokenRole) {\n            roles += ' ' + General.SYSTEM_USER_ACCESS_TOKEN_ROLE;\n            if (this.state.hasPostAllRole) {\n                roles += ' ' + General.SYSTEM_POST_ALL_ROLE;\n            } else if (this.state.hasPostAllPublicRole) {\n                roles += ' ' + General.SYSTEM_POST_ALL_PUBLIC_ROLE;\n            }\n        }\n\n        const {data} = await this.props.actions.updateUserRoles(this.props.user.id, roles);\n\n        this.trackRoleChanges(roles, this.props.user.roles);\n\n        if (data) {\n            this.props.onModalDismissed();\n        } else {\n            this.handleError(\n                <FormattedMessage\n                    id='admin.manage_roles.saveError'\n                    defaultMessage='Unable to save roles.'\n                />\n            );\n        }\n    }\n\n    renderContents = () => {\n        const {user} = this.props;\n\n        if (user == null) {\n            return <div/>;\n        }\n\n        let name = UserUtils.getFullName(user);\n        if (name) {\n            name += ` (@${user.username})`;\n        } else {\n            name = `@${user.username}`;\n        }\n\n        let additionalRoles;\n        if (this.state.hasUserAccessTokenRole || this.state.isSystemAdmin || user.is_bot) {\n            additionalRoles = (\n                <div>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='admin.manage_roles.additionalRoles'\n                            defaultMessage='Select additional permissions for the account. [Read more about roles and permissions](!https://about.mattermost.com/default-permissions).'\n                        />\n                    </p>\n                    <div className='checkbox'>\n                        <label>\n                            <input\n                                type='checkbox'\n                                ref='postall'\n                                checked={this.state.hasPostAllRole || this.state.isSystemAdmin}\n                                disabled={this.state.isSystemAdmin}\n                                onChange={this.handlePostAllChange}\n                            />\n                            <strong>\n                                <FormattedMessage\n                                    id='admin.manage_roles.postAllRoleTitle'\n                                    defaultMessage='post:all'\n                                />\n                            </strong>\n                            <FormattedMessage\n                                id='admin.manage_roles.postAllRole'\n                                defaultMessage='Access to post to all Mattermost channels including direct messages.'\n                            />\n                        </label>\n                    </div>\n                    <div className='checkbox'>\n                        <label>\n                            <input\n                                type='checkbox'\n                                ref='postallpublic'\n                                checked={this.state.hasPostAllPublicRole || this.state.hasPostAllRole || this.state.isSystemAdmin}\n                                disabled={this.state.hasPostAllRole || this.state.isSystemAdmin}\n                                onChange={this.handlePostAllPublicChange}\n                            />\n                            <strong>\n                                <FormattedMessage\n                                    id='admin.manage_roles.postAllPublicRoleTitle'\n                                    defaultMessage='post:channels'\n                                />\n                            </strong>\n                            <FormattedMessage\n                                id='admin.manage_roles.postAllPublicRole'\n                                defaultMessage='Access to post to all Mattermost public channels.'\n                            />\n                        </label>\n                    </div>\n                </div>\n            );\n        }\n\n        let userAccessTokenContent;\n        if (this.props.userAccessTokensEnabled) {\n            if (user.is_bot) {\n                userAccessTokenContent = (\n                    <div>\n                        <div className='member-row--padded member-row-lone-padding'>\n                            {additionalRoles}\n                        </div>\n                    </div>\n                );\n            } else {\n                userAccessTokenContent = (\n                    <div>\n                        <div className='checkbox'>\n                            <label>\n                                <input\n                                    type='checkbox'\n                                    ref='postall'\n                                    checked={this.state.hasUserAccessTokenRole || this.state.isSystemAdmin}\n                                    disabled={this.state.isSystemAdmin}\n                                    onChange={this.handleUserAccessTokenChange}\n                                />\n                                <FormattedMarkdownMessage\n                                    id='admin.manage_roles.allowUserAccessTokens'\n                                    defaultMessage='Allow this account to generate [personal access tokens](!https://about.mattermost.com/default-user-access-tokens).'\n                                />\n                                <span className='d-block padding-top padding-bottom light'>\n                                    <FormattedHTMLMessage\n                                        id='admin.manage_roles.allowUserAccessTokensDesc'\n                                        defaultMessage=\"Removing this permission doesn't delete existing tokens. To delete them, go to the user's Manage Tokens menu.\"\n                                    />\n                                </span>\n                            </label>\n                        </div>\n                        <div className='member-row--padded'>\n                            {additionalRoles}\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        let email = user.email;\n        if (user.is_bot) {\n            email = '';\n        }\n\n        return (\n            <div>\n                <div className='manage-teams__user'>\n                    <Avatar\n                        size='lg'\n                        username={user.username}\n                        url={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                    />\n                    <div className='manage-teams__info'>\n                        <div className='manage-teams__name'>\n                            {name}\n                            <BotBadge\n                                show={Boolean(user.is_bot)}\n                                className='badge-admin'\n                            />\n                        </div>\n                        <div className='manage-teams__email'>\n                            {email}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <div className='manage-row--inner'>\n                        <div className='radio-inline'>\n                            <label>\n                                <input\n                                    name='systemadmin'\n                                    type='radio'\n                                    checked={this.state.isSystemAdmin}\n                                    onChange={this.handleSystemAdminChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.manage_roles.systemAdmin'\n                                    defaultMessage='System Admin'\n                                />\n                            </label>\n                        </div>\n                        <div className='radio-inline'>\n                            <label>\n                                <input\n                                    name='systemmember'\n                                    type='radio'\n                                    checked={!this.state.isSystemAdmin}\n                                    onChange={this.handleSystemAdminChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.manage_roles.systemMember'\n                                    defaultMessage='Member'\n                                />\n                            </label>\n                        </div>\n                    </div>\n                    {userAccessTokenContent}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onModalDismissed}\n                dialogClassName='a11y__modal manage-teams'\n                role='dialog'\n                aria-labelledby='manageRolesModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='manageRolesModalLabel'\n                    >\n                        <FormattedMessage\n                            id='admin.manage_roles.manageRolesTitle'\n                            defaultMessage='Manage Roles'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.renderContents()}\n                    {this.state.error}\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-link'\n                        onClick={this.props.onModalDismissed}\n                    >\n                        <FormattedMessage\n                            id='admin.manage_roles.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        onClick={this.handleSave}\n                    >\n                        <FormattedMessage\n                            id='admin.manage_roles.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {updateTeamMemberSchemeRoles, getTeamMembersForUser, getTeamsForUser, removeUserFromTeam} from 'mattermost-redux/actions/teams';\n\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport ManageTeamsModal from './manage_teams_modal';\n\nfunction mapStateToProps(state) {\n    return {\n        locale: getCurrentLocale(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeamMembersForUser,\n            getTeamsForUser,\n            updateTeamMemberSchemeRoles,\n            removeUserFromTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeamsModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Menu from 'components/widgets/menu/menu';\n\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ManageTeamsDropdown extends React.Component {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        user: PropTypes.object.isRequired,\n        teamMember: PropTypes.object.isRequired,\n        onError: PropTypes.func.isRequired,\n        onMemberChange: PropTypes.func.isRequired,\n        updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\n        handleRemoveUserFromTeam: PropTypes.func.isRequired,\n    };\n\n    makeTeamAdmin = async () => {\n        const {error} = await this.props.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, true);\n        if (error) {\n            this.props.onError(error.message);\n        } else {\n            this.props.onMemberChange(this.props.teamMember.team_id);\n        }\n    };\n\n    makeMember = async () => {\n        const {error} = await this.props.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, false);\n        if (error) {\n            this.props.onError(error.message);\n        } else {\n            this.props.onMemberChange(this.props.teamMember.team_id);\n        }\n    };\n\n    removeFromTeam = () => {\n        this.props.handleRemoveUserFromTeam(this.props.teamMember.team_id);\n    }\n\n    render() {\n        const isTeamAdmin = Utils.isAdmin(this.props.teamMember.roles) || this.props.teamMember.scheme_admin;\n        const isSysAdmin = Utils.isSystemAdmin(this.props.user.roles);\n        const isGuest = Utils.isGuest(this.props.user);\n\n        const {team} = this.props;\n        let title;\n        if (isSysAdmin) {\n            title = Utils.localizeMessage('admin.user_item.sysAdmin', 'System Admin');\n        } else if (isTeamAdmin) {\n            title = Utils.localizeMessage('admin.user_item.teamAdmin', 'Team Admin');\n        } else if (isGuest) {\n            title = Utils.localizeMessage('admin.user_item.guest', 'Guest');\n        } else {\n            title = Utils.localizeMessage('admin.user_item.teamMember', 'Team Member');\n        }\n\n        return (\n            <MenuWrapper>\n                <a>\n                    <span>{title} </span>\n                    <span className='caret'/>\n                </a>\n                <Menu\n                    openLeft={true}\n                    ariaLabel={Utils.localizeMessage('team_members_dropdown.menuAriaLabel', 'Team member role change')}\n                >\n                    <Menu.ItemAction\n                        show={!isTeamAdmin && !isGuest}\n                        onClick={this.makeTeamAdmin}\n                        text={Utils.localizeMessage('admin.user_item.makeTeamAdmin', 'Make Team Admin')}\n                    />\n                    <Menu.ItemAction\n                        show={isTeamAdmin}\n                        onClick={this.makeMember}\n                        text={Utils.localizeMessage('admin.user_item.makeMember', 'Make Member')}\n                    />\n                    <Menu.ItemAction\n                        show={!team.group_constrained}\n                        onClick={this.removeFromTeam}\n                        text={Utils.localizeMessage('team_members_dropdown.leave_team', 'Remove from Team')}\n                    />\n                </Menu>\n            </MenuWrapper>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen';\nimport Avatar from 'components/widgets/users/avatar';\n\nimport ManageTeamsDropdown from './manage_teams_dropdown.jsx';\nimport RemoveFromTeamButton from './remove_from_team_button.jsx';\n\nexport default class ManageTeamsModal extends React.Component {\n    static propTypes = {\n        locale: PropTypes.string.isRequired,\n        onModalDismissed: PropTypes.func.isRequired,\n        show: PropTypes.bool.isRequired,\n        user: PropTypes.object,\n        actions: PropTypes.shape({\n            getTeamMembersForUser: PropTypes.func.isRequired,\n            getTeamsForUser: PropTypes.func.isRequired,\n            updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\n            removeUserFromTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: null,\n            teams: null,\n            teamMembers: null,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.user) {\n            this.loadTeamsAndTeamMembers();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        const userId = this.props.user ? this.props.user.id : '';\n        const nextUserId = nextProps.user ? nextProps.user.id : '';\n\n        if (userId !== nextUserId) {\n            this.setState({\n                teams: null,\n                teamMembers: null,\n            });\n\n            if (nextProps.user) {\n                this.loadTeamsAndTeamMembers(nextProps.user);\n            }\n        }\n    }\n\n    loadTeamsAndTeamMembers = async (user = this.props.user) => {\n        this.getTeamMembers(user.id);\n        const {data} = await this.props.actions.getTeamsForUser(user.id);\n        this.setState({\n            teams: filterAndSortTeamsByDisplayName(data, this.props.locale),\n        });\n    }\n\n    handleError = (error) => {\n        this.setState({\n            error,\n        });\n    }\n\n    getTeamMembers = async (userId = this.props.user.id) => {\n        const {data} = await this.props.actions.getTeamMembersForUser(userId);\n        if (data) {\n            this.setState({\n                teamMembers: data,\n            });\n        }\n    }\n\n    handleMemberRemove = (teamId) => {\n        this.setState({\n            teams: this.state.teams.filter((team) => team.id !== teamId),\n            teamMembers: this.state.teamMembers.filter((teamMember) => teamMember.team_id !== teamId),\n        });\n    }\n\n    handleRemoveUserFromTeam = async (teamId) => {\n        const {actions, user} = this.props;\n\n        const {data, error} = await actions.removeUserFromTeam(teamId, user.id);\n        if (data) {\n            this.handleMemberRemove(teamId);\n        } else if (error) {\n            this.handleError(error.message);\n        }\n    }\n\n    handleMemberChange = () => {\n        this.getTeamMembers(this.props.user.id);\n    };\n\n    renderContents = () => {\n        const {user} = this.props;\n        const {teams, teamMembers} = this.state;\n\n        if (!user) {\n            return <LoadingScreen/>;\n        }\n\n        const isSystemAdmin = Utils.isAdmin(user.roles);\n\n        let name = Utils.getFullName(user);\n        if (name) {\n            name += ` (@${user.username})`;\n        } else {\n            name = `@${user.username}`;\n        }\n\n        let teamList;\n        if (teams && teamMembers) {\n            teamList = teams.map((team) => {\n                const teamMember = teamMembers.find((member) => member.team_id === team.id);\n                if (!teamMember) {\n                    return null;\n                }\n\n                let action;\n                if (isSystemAdmin) {\n                    action = (\n                        <RemoveFromTeamButton\n                            teamId={team.id}\n                            handleRemoveUserFromTeam={this.handleRemoveUserFromTeam}\n                        />\n                    );\n                } else {\n                    action = (\n                        <ManageTeamsDropdown\n                            user={user}\n                            team={team}\n                            teamMember={teamMember}\n                            onError={this.handleError}\n                            onMemberChange={this.handleMemberChange}\n                            updateTeamMemberSchemeRoles={this.props.actions.updateTeamMemberSchemeRoles}\n                            handleRemoveUserFromTeam={this.handleRemoveUserFromTeam}\n                        />\n                    );\n                }\n\n                return (\n                    <div\n                        key={team.id}\n                        className='manage-teams__team'\n                    >\n                        <div className='manage-teams__team-name'>\n                            {team.display_name}\n                        </div>\n                        <div className='manage-teams__team-actions'>\n                            {action}\n                        </div>\n                    </div>\n                );\n            });\n        } else {\n            teamList = <LoadingScreen/>;\n        }\n\n        let systemAdminIndicator = null;\n        if (isSystemAdmin) {\n            systemAdminIndicator = (\n                <div className='manage-teams__system-admin'>\n                    <FormattedMessage\n                        id='admin.user_item.sysAdmin'\n                        defaultMessage='System Admin'\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <div className='manage-teams__user'>\n                    <Avatar\n                        username={user.username}\n                        url={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                        size='lg'\n                    />\n                    <div className='manage-teams__info'>\n                        <div className='manage-teams__name'>\n                            {name}\n                        </div>\n                        <div className='manage-teams__email'>\n                            {user.email}\n                        </div>\n                    </div>\n                    {systemAdminIndicator}\n                </div>\n                <div className='manage-teams__teams'>\n                    {teamList}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onModalDismissed}\n                dialogClassName='a11y__modal manage-teams modal--overflow-visible'\n                role='dialog'\n                aria-labelledby='manageTeamsModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='manageTeamsModalLabel'\n                    >\n                        <FormattedMessage\n                            id='admin.user_item.manageTeams'\n                            defaultMessage='Manage Teams'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.renderContents()}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class RemoveFromTeamButton extends React.PureComponent {\n    static propTypes = {\n        teamId: PropTypes.string.isRequired,\n        handleRemoveUserFromTeam: PropTypes.func.isRequired,\n    };\n\n    handleClick = (e) => {\n        e.preventDefault();\n        this.props.handleRemoveUserFromTeam(this.props.teamId);\n    }\n\n    render() {\n        return (\n            <button\n                className='btn btn-danger'\n                onClick={this.handleClick}\n            >\n                <FormattedMessage\n                    id='team_members_dropdown.leave_team'\n                    defaultMessage='Remove from Team'\n                />\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getUserAccessTokensForUser} from 'mattermost-redux/actions/users';\n\nimport ManageTokensModal from './manage_tokens_modal.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const userId = ownProps.user ? ownProps.user.id : '';\n\n    return {\n        userAccessTokens: state.entities.admin.userAccessTokensByUser[userId],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getUserAccessTokensForUser,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTokensModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\n\nimport RevokeTokenButton from 'components/admin_console/revoke_token_button';\nimport LoadingScreen from 'components/loading_screen';\nimport Avatar from 'components/widgets/users/avatar';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class ManageTokensModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Set to render the modal\n         */\n        show: PropTypes.bool.isRequired,\n\n        /**\n         * The user the roles are being managed for\n         */\n        user: PropTypes.object,\n\n        /**\n         * The personal access tokens for a user, object with token ids as keys\n         */\n        userAccessTokens: PropTypes.object,\n\n        /**\n         * Function called when modal is dismissed\n         */\n        onModalDismissed: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Function to get a user's access tokens\n             */\n            getUserAccessTokensForUser: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {error: null};\n    }\n\n    componentDidUpdate(prevProps) {\n        const userId = this.props.user ? this.props.user.id : null;\n        const prevUserId = prevProps.user ? prevProps.user.id : null;\n        if (userId && prevUserId !== userId) {\n            this.props.actions.getUserAccessTokensForUser(userId, 0, 200);\n        }\n    }\n\n    handleError = (error) => {\n        this.setState({\n            error,\n        });\n    }\n\n    renderContents = () => {\n        const {user, userAccessTokens} = this.props;\n\n        if (!user) {\n            return <LoadingScreen/>;\n        }\n\n        let name = UserUtils.getFullName(user);\n        if (name) {\n            name += ` (@${user.username})`;\n        } else {\n            name = `@${user.username}`;\n        }\n\n        let tokenList;\n        if (userAccessTokens) {\n            const userAccessTokensList = Object.values(userAccessTokens);\n\n            if (userAccessTokensList.length === 0) {\n                tokenList = (\n                    <div className='manage-row__empty'>\n                        <FormattedMessage\n                            id='admin.manage_tokens.userAccessTokensNone'\n                            defaultMessage='No personal access tokens.'\n                        />\n                    </div>\n                );\n            } else {\n                tokenList = userAccessTokensList.map((token) => {\n                    return (\n                        <div\n                            key={token.id}\n                            className='manage-teams__team'\n                        >\n                            <div className='manage-teams__team-name'>\n                                <div className='whitespace--nowrap overflow--ellipsis'>\n                                    <FormattedMessage\n                                        id='admin.manage_tokens.userAccessTokensNameLabel'\n                                        defaultMessage='Token Description: '\n                                    />\n                                    {token.description}\n                                </div>\n                                <div className='whitespace--nowrap overflow--ellipsis'>\n                                    <FormattedMessage\n                                        id='admin.manage_tokens.userAccessTokensIdLabel'\n                                        defaultMessage='Token ID: '\n                                    />\n                                    {token.id}\n                                </div>\n                            </div>\n                            <div className='manage-teams__team-actions'>\n                                <RevokeTokenButton\n                                    tokenId={token.id}\n                                    onError={this.handleError}\n                                />\n                            </div>\n                        </div>\n                    );\n                });\n            }\n        } else {\n            tokenList = <LoadingScreen/>;\n        }\n\n        return (\n            <div>\n                <div className='manage-teams__user'>\n                    <Avatar\n                        username={user.username}\n                        url={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                        size='lg'\n                    />\n                    <div className='manage-teams__info'>\n                        <div className='manage-teams__name'>\n                            {name}\n                        </div>\n                        <div className='manage-teams__email'>\n                            {user.email}\n                        </div>\n                    </div>\n                </div>\n                <div className='padding-top x2'>\n                    <FormattedMarkdownMessage\n                        id='admin.manage_tokens.userAccessTokensDescription'\n                        defaultMessage='Personal access tokens function similarly to session tokens and can be used by integrations to [interact with this Mattermost server](!https://about.mattermost.com/default-api-authentication). Tokens are disabled if the user is deactivated. Learn more about [personal access tokens](!https://about.mattermost.com/default-user-access-tokens).'\n                    />\n                </div>\n                <div className='manage-teams__teams'>\n                    {tokenList}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onModalDismissed}\n                dialogClassName='a11y__modal manage-teams'\n                role='dialog'\n                aria-labelledby='manageTokensModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='manageTokensModalLabel'\n                    >\n                        <FormattedMessage\n                            id='admin.manage_tokens.manageTokensTitle'\n                            defaultMessage='Manage Personal Access Tokens'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.renderContents()}\n                    {this.state.error}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport {JobTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {getSiteURL} from 'utils/url';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport DropdownSetting from './dropdown_setting.jsx';\nimport JobsTable from './jobs';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\nimport RadioSetting from './radio_setting';\n\nconst exportFormats = {\n    EXPORT_FORMAT_CSV: 'csv',\n    EXPORT_FORMAT_ACTIANCE: 'actiance',\n    EXPORT_FORMAT_GLOBALRELAY: 'globalrelay',\n};\n\nexport default class MessageExportSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.MessageExportSettings.EnableExport = this.state.enableComplianceExport;\n        config.MessageExportSettings.ExportFormat = this.state.exportFormat;\n        config.MessageExportSettings.DailyRunTime = this.state.exportJobStartTime;\n\n        if (this.state.exportFormat === exportFormats.EXPORT_FORMAT_GLOBALRELAY) {\n            config.MessageExportSettings.GlobalRelaySettings = {\n                CustomerType: this.state.globalRelayCustomerType,\n                SmtpUsername: this.state.globalRelaySmtpUsername,\n                SmtpPassword: this.state.globalRelaySmtpPassword,\n                EmailAddress: this.state.globalRelayEmailAddress,\n\n            };\n        }\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        const state = {\n            enableComplianceExport: config.MessageExportSettings.EnableExport,\n            exportFormat: config.MessageExportSettings.ExportFormat,\n            exportJobStartTime: config.MessageExportSettings.DailyRunTime,\n        };\n        if (config.MessageExportSettings.GlobalRelaySettings) {\n            state.globalRelayCustomerType = config.MessageExportSettings.GlobalRelaySettings.CustomerType;\n            state.globalRelaySmtpUsername = config.MessageExportSettings.GlobalRelaySettings.SmtpUsername;\n            state.globalRelaySmtpPassword = config.MessageExportSettings.GlobalRelaySettings.SmtpPassword;\n            state.globalRelayEmailAddress = config.MessageExportSettings.GlobalRelaySettings.EmailAddress;\n        }\n        return state;\n    }\n\n    getJobDetails = (job) => {\n        if (job.data && job.data.messages_exported) {\n            return (\n                <FormattedMessage\n                    id='admin.complianceExport.messagesExportedCount'\n                    defaultMessage='{count} messages exported.'\n                    values={{\n                        count: job.data.messages_exported,\n                    }}\n                />\n            );\n        }\n        return null;\n    };\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.complianceExport.title'\n                defaultMessage='Compliance Export (Beta)'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const exportFormatOptions = [\n            {value: exportFormats.EXPORT_FORMAT_ACTIANCE, text: Utils.localizeMessage('admin.complianceExport.exportFormat.actiance', 'Actiance XML')},\n            {value: exportFormats.EXPORT_FORMAT_CSV, text: Utils.localizeMessage('admin.complianceExport.exportFormat.csv', 'CSV')},\n            {value: exportFormats.EXPORT_FORMAT_GLOBALRELAY, text: Utils.localizeMessage('admin.complianceExport.exportFormat.globalrelay', 'GlobalRelay EML')},\n        ];\n\n        // if the export format is globalrelay, the user needs to set some additional parameters\n        let globalRelaySettings;\n        if (this.state.exportFormat === exportFormats.EXPORT_FORMAT_GLOBALRELAY) {\n            const globalRelayCustomerType = (\n                <RadioSetting\n                    id='globalRelayCustomerType'\n                    values={[\n                        {value: 'A9', text: Utils.localizeMessage('admin.complianceExport.globalRelayCustomerType.a9.description', 'A9/Type 9')},\n                        {value: 'A10', text: Utils.localizeMessage('admin.complianceExport.globalRelayCustomerType.a10.description', 'A10/Type 10')},\n                    ]}\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelayCustomerType.title'\n                            defaultMessage='Customer Type:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelayCustomerType.description'\n                            defaultMessage='The type of GlobalRelay customer account that your organization has.'\n                        />\n                    }\n                    value={this.state.globalRelayCustomerType ? this.state.globalRelayCustomerType : ''}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.CustomerType')}\n                />\n            );\n\n            const globalRelaySmtpUsername = (\n                <TextSetting\n                    id='globalRelaySmtpUsername'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpUsername.title'\n                            defaultMessage='SMTP Username:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelaySmtpUsername.example', 'E.g.: \"globalRelayUser\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpUsername.description'\n                            defaultMessage='The username that is used to authenticate against the GlobalRelay SMTP server.'\n                        />\n                    }\n                    value={this.state.globalRelaySmtpUsername ? this.state.globalRelaySmtpUsername : ''}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.SmtpUsername')}\n                />\n            );\n\n            const globalRelaySmtpPassword = (\n                <TextSetting\n                    id='globalRelaySmtpPassword'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpPassword.title'\n                            defaultMessage='SMTP Password:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelaySmtpPassword.example', 'E.g.: \"globalRelayPassword\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpPassword.description'\n                            defaultMessage='The password that is used to authenticate against the GlobalRelay SMTP server.'\n                        />\n                    }\n                    value={this.state.globalRelaySmtpPassword ? this.state.globalRelaySmtpPassword : ''}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.SmtpPassword')}\n                />\n            );\n\n            const globalRelayEmail = (\n                <TextSetting\n                    id='globalRelayEmailAddress'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelayEmailAddress.title'\n                            defaultMessage='Email Address:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelayEmailAddress.example', 'E.g.: \"globalrelay@mattermost.com\"')}\n                    helpText={\n                        <FormattedHTMLMessage\n                            id='admin.complianceExport.globalRelayEmailAddress.description'\n                            defaultMessage='The email address that your GlobalRelay server monitors for incoming Compliance Exports.'\n                        />\n                    }\n                    value={this.state.globalRelayEmailAddress ? this.state.globalRelayEmailAddress : ''}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.EmailAddress')}\n                />\n            );\n\n            globalRelaySettings = (\n                <SettingsGroup id={'globalRelaySettings'} >\n                    {globalRelayCustomerType}\n                    {globalRelaySmtpUsername}\n                    {globalRelaySmtpPassword}\n                    {globalRelayEmail}\n                </SettingsGroup>\n            );\n        }\n\n        const dropdownHelpText = (\n            <FormattedMarkdownMessage\n                id='admin.complianceExport.exportFormat.description'\n                defaultMessage='Format of the compliance export. Corresponds to the system that you want to import the data into.\\n \\nFor Actiance XML, compliance export files are written to the \\\"exports\\\" subdirectory of the configured [Local Storage Directory]({siteURL}/admin_console/environment/file_storage). For Global Relay EML, they are emailed to the configured email address.'\n                values={{siteURL: getSiteURL()}}\n            />\n        );\n\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    id='enableComplianceExport'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.complianceExportTitle'\n                            defaultMessage='Enable Compliance Export:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.service.complianceExportDesc'\n                            defaultMessage='When true, Mattermost will export all messages that were posted in the last 24 hours. The export task is scheduled to run once per day. See [the documentation](!https://about.mattermost.com/default-compliance-export-documentation) to learn more.'\n                        />\n                    }\n                    value={this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableExport')}\n                />\n\n                <TextSetting\n                    id='exportJobStartTime'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.exportJobStartTime.title'\n                            defaultMessage='Compliance Export Time:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.exportJobStartTime.example', 'E.g.: \"02:00\"')}\n                    helpText={\n                        <FormattedHTMLMessage\n                            id='admin.complianceExport.exportJobStartTime.description'\n                            defaultMessage='Set the start time of the daily scheduled compliance export job. Choose a time when fewer people are using your system. Must be a 24-hour time stamp in the form HH:MM.'\n                        />\n                    }\n                    value={this.state.exportJobStartTime}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.DailyRunTime')}\n                />\n\n                <DropdownSetting\n                    id='exportFormat'\n                    values={exportFormatOptions}\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.exportFormat.title'\n                            defaultMessage='Export Format:'\n                        />\n                    }\n                    helpText={dropdownHelpText}\n                    value={this.state.exportFormat}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.ExportFormat')}\n                />\n\n                {globalRelaySettings}\n\n                <JobsTable\n                    jobType={JobTypes.MESSAGE_EXPORT}\n                    disabled={!this.state.enableComplianceExport}\n                    createJobButtonText={\n                        <FormattedMessage\n                            id='admin.complianceExport.createJob.title'\n                            defaultMessage='Run Compliance Export Job Now'\n                        />\n                    }\n                    createJobHelpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.createJob.help'\n                            defaultMessage='Initiates a Compliance Export job immediately.'\n                        />\n                    }\n                    getExtraInfoText={this.getJobDetails}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactSelect from 'react-select';\n\nimport FormError from 'components/form_error';\n\nimport Setting from './setting';\n\nexport default class MultiSelectSetting extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        values: PropTypes.array.isRequired,\n        label: PropTypes.node.isRequired,\n        selected: PropTypes.array.isRequired,\n        mustBePresent: PropTypes.string,\n        onChange: PropTypes.func.isRequired,\n        disabled: PropTypes.bool,\n        setByEnv: PropTypes.bool.isRequired,\n        helpText: PropTypes.node,\n        noResultText: PropTypes.node,\n        errorText: PropTypes.node,\n        notPresent: PropTypes.node,\n    };\n\n    static defaultProps = {\n        disabled: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {error: false};\n    }\n\n    handleChange = (newValue) => {\n        const values = newValue.map((n) => {\n            return n.value;\n        });\n\n        if (this.props.selected.length > 0 && this.props.mustBePresent && values.join(',').indexOf(this.props.mustBePresent) === -1) {\n            this.setState({error: this.props.notPresent});\n        } else {\n            this.props.onChange(this.props.id, values);\n            this.setState({error: false});\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) { // eslint-disable-line camelcase\n        if (newProps.selected.length > 0 && newProps.mustBePresent && newProps.selected.join(',').indexOf(newProps.mustBePresent) === -1) {\n            this.setState({error: this.props.notPresent});\n        } else {\n            this.setState({error: false});\n        }\n    }\n\n    calculateValue = () => {\n        return this.props.selected.reduce((values, item) => {\n            const found = this.props.values.find((e) => {\n                return e.value === item;\n            });\n            if (found !== null) {\n                values.push(found);\n            }\n            return values;\n        }, []);\n    };\n\n    getOptionLabel = ({text}) => text;\n\n    render() {\n        return (\n            <Setting\n                label={this.props.label}\n                inputId={this.props.id}\n                helpText={this.props.helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                <ReactSelect\n                    id={this.props.id}\n                    isMulti={true}\n                    getOptionLabel={this.getOptionLabel}\n                    options={this.props.values}\n                    delimiter={','}\n                    clearable={false}\n                    disabled={this.props.disabled || this.props.setByEnv}\n                    noResultsText={this.props.noResultText}\n                    onChange={this.handleChange}\n                    value={this.calculateValue()}\n                />\n                <FormError error={this.state.error}/>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport Setting from './setting';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class PasswordSettings extends AdminSettings {\n    constructor(props) {\n        super(props);\n\n        this.state = Object.assign(this.state, {\n            passwordMinimumLength: props.config.PasswordSettings.MinimumLength,\n            passwordLowercase: props.config.PasswordSettings.Lowercase,\n            passwordNumber: props.config.PasswordSettings.Number,\n            passwordUppercase: props.config.PasswordSettings.Uppercase,\n            passwordSymbol: props.config.PasswordSettings.Symbol,\n            maximumLoginAttempts: props.config.ServiceSettings.MaximumLoginAttempts,\n        });\n\n        // Update sample message from config settings\n        t('user.settings.security.passwordErrorLowercase');\n        t('user.settings.security.passwordErrorLowercaseUppercase');\n        t('user.settings.security.passwordErrorLowercaseUppercaseNumber');\n        t('user.settings.security.passwordErrorLowercaseUppercaseNumberSymbol');\n        t('user.settings.security.passwordErrorLowercaseUppercaseSymbol');\n        t('user.settings.security.passwordErrorLowercaseNumber');\n        t('user.settings.security.passwordErrorLowercaseNumberSymbol');\n        t('user.settings.security.passwordErrorLowercaseSymbol');\n        t('user.settings.security.passwordErrorUppercase');\n        t('user.settings.security.passwordErrorUppercaseNumber');\n        t('user.settings.security.passwordErrorUppercaseNumberSymbol');\n        t('user.settings.security.passwordErrorUppercaseSymbol');\n        t('user.settings.security.passwordErrorNumber');\n        t('user.settings.security.passwordErrorNumberSymbol');\n        t('user.settings.security.passwordErrorSymbol');\n\n        let sampleErrorMsgId = 'user.settings.security.passwordError';\n        if (props.config.PasswordSettings.Lowercase) {\n            sampleErrorMsgId += 'Lowercase';\n        }\n        if (props.config.PasswordSettings.Uppercase) {\n            sampleErrorMsgId += 'Uppercase';\n        }\n        if (props.config.PasswordSettings.Number) {\n            sampleErrorMsgId += 'Number';\n        }\n        if (props.config.PasswordSettings.Symbol) {\n            sampleErrorMsgId += 'Symbol';\n        }\n        this.sampleErrorMsg = (\n            <FormattedMessage\n                id={sampleErrorMsgId}\n                default='Your password must contain between {min} and {max} characters.'\n                values={{\n                    min: (this.state.passwordMinimumLength || Constants.MIN_PASSWORD_LENGTH),\n                    max: Constants.MAX_PASSWORD_LENGTH,\n                }}\n            />\n        );\n    }\n\n    getConfigFromState = (config) => {\n        config.PasswordSettings.MinimumLength = this.parseIntNonZero(this.state.passwordMinimumLength, Constants.MIN_PASSWORD_LENGTH);\n        config.PasswordSettings.Lowercase = this.refs.lowercase.checked;\n        config.PasswordSettings.Uppercase = this.refs.uppercase.checked;\n        config.PasswordSettings.Number = this.refs.number.checked;\n        config.PasswordSettings.Symbol = this.refs.symbol.checked;\n\n        config.ServiceSettings.MaximumLoginAttempts = this.parseIntNonZero(this.state.maximumLoginAttempts);\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            passwordMinimumLength: config.PasswordSettings.MinimumLength,\n            passwordLowercase: config.PasswordSettings.Lowercase,\n            passwordNumber: config.PasswordSettings.Number,\n            passwordUppercase: config.PasswordSettings.Uppercase,\n            passwordSymbol: config.PasswordSettings.Symbol,\n            maximumLoginAttempts: config.ServiceSettings.MaximumLoginAttempts,\n        };\n    }\n\n    getSampleErrorMsg = (minLength) => {\n        if (this.props.config.PasswordSettings.MinimumLength > Constants.MAX_PASSWORD_LENGTH || this.props.config.PasswordSettings.MinimumLength < Constants.MIN_PASSWORD_LENGTH) {\n            return (\n                <FormattedMessage\n                    id='user.settings.security.passwordMinLength'\n                    default='Invalid minimum length, cannot show preview.'\n                />\n            );\n        }\n        let sampleErrorMsgId = 'user.settings.security.passwordError';\n        if (this.refs.lowercase.checked) {\n            sampleErrorMsgId += 'Lowercase';\n        }\n        if (this.refs.uppercase.checked) {\n            sampleErrorMsgId += 'Uppercase';\n        }\n        if (this.refs.number.checked) {\n            sampleErrorMsgId += 'Number';\n        }\n        if (this.refs.symbol.checked) {\n            sampleErrorMsgId += 'Symbol';\n        }\n        return (\n            <FormattedMessage\n                id={sampleErrorMsgId}\n                default='Your password must contain between {min} and {max} characters.'\n                values={{\n                    min: (minLength || Constants.MIN_PASSWORD_LENGTH),\n                    max: Constants.MAX_PASSWORD_LENGTH,\n                }}\n            />\n        );\n    }\n\n    handlePasswordLengthChange = (id, value) => {\n        this.sampleErrorMsg = this.getSampleErrorMsg(value);\n        this.handleChange(id, value);\n    }\n\n    handleCheckboxChange = (id, value) => {\n        this.sampleErrorMsg = this.getSampleErrorMsg(this.state.passwordMinimumLength);\n        this.handleChange(id, value);\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.security.password'\n                defaultMessage='Password'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        return (\n            <SettingsGroup>\n                <div>\n                    <TextSetting\n                        id='passwordMinimumLength'\n                        label={\n                            <FormattedMessage\n                                id='admin.password.minimumLength'\n                                defaultMessage='Minimum Password Length:'\n                            />\n                        }\n                        placeholder={Utils.localizeMessage('admin.password.minimumLengthExample', 'E.g.: \"5\"')}\n                        helpText={\n                            <FormattedMessage\n                                id='admin.password.minimumLengthDescription'\n                                defaultMessage='Minimum number of characters required for a valid password. Must be a whole number greater than or equal to {min} and less than or equal to {max}.'\n                                values={{\n                                    min: Constants.MIN_PASSWORD_LENGTH,\n                                    max: Constants.MAX_PASSWORD_LENGTH,\n                                }}\n                            />\n                        }\n                        value={this.state.passwordMinimumLength}\n                        onChange={this.handlePasswordLengthChange}\n                        setByEnv={this.isSetByEnv('PasswordSettings.MinimumLength')}\n                    />\n                    <Setting\n                        label={\n                            <FormattedMessage\n                                id='passwordRequirements'\n                                defaultMessage='Password Requirements:'\n                            />\n                        }\n                    >\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref='lowercase'\n                                    defaultChecked={this.state.passwordLowercase}\n                                    name='admin.password.lowercase'\n                                    onChange={this.handleCheckboxChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.lowercase'\n                                    defaultMessage='At least one lowercase letter'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref='uppercase'\n                                    defaultChecked={this.state.passwordUppercase}\n                                    name='admin.password.uppercase'\n                                    onChange={this.handleCheckboxChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.uppercase'\n                                    defaultMessage='At least one uppercase letter'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref='number'\n                                    defaultChecked={this.state.passwordNumber}\n                                    name='admin.password.number'\n                                    onChange={this.handleCheckboxChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.number'\n                                    defaultMessage='At least one number'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref='symbol'\n                                    defaultChecked={this.state.passwordSymbol}\n                                    name='admin.password.symbol'\n                                    onChange={this.handleCheckboxChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.symbol'\n                                    defaultMessage='At least one symbol (e.g. \"~!@#$%^&*()\")'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <br/>\n                            <label>\n                                <FormattedMessage\n                                    id='admin.password.preview'\n                                    defaultMessage='Error message preview:'\n                                />\n                            </label>\n                            <br/>\n                            {this.sampleErrorMsg}\n                        </div>\n                    </Setting>\n                </div>\n                <TextSetting\n                    id='maximumLoginAttempts'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.attemptTitle'\n                            defaultMessage='Maximum Login Attempts:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.attemptExample', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.service.attemptDescription'\n                            defaultMessage='Login attempts allowed before user is locked out and required to reset password via email.'\n                        />\n                    }\n                    value={this.state.maximumLoginAttempts}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.MaximumLoginAttempts')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport {t} from 'utils/i18n';\n\nexport default class EditPostTimeLimitButton extends React.Component {\n    static propTypes = {\n        timeLimit: PropTypes.number.isRequired,\n        onClick: PropTypes.func,\n    };\n\n    render = () => {\n        let messageID;\n        if (this.props.timeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT) {\n            messageID = t('edit_post.time_limit_button.no_limit');\n        } else {\n            messageID = t('edit_post.time_limit_button.for_n_seconds');\n        }\n\n        return (\n            <button\n                className='edit-post-time-limit-button'\n                onClick={this.props.onClick}\n            >\n                <i className='fa fa-gear'/>\n                <FormattedMessage\n                    id={messageID}\n                    values={{n: this.props.timeLimit}}\n                />\n            </button>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditPostTimeLimitButton from './edit_post_time_limit_button';\n\nfunction mapStateToProps(state) {\n    const {PostEditTimeLimit} = getConfig(state);\n\n    return {\n        timeLimit: parseInt(PostEditTimeLimit, 10),\n    };\n}\n\nexport default connect(mapStateToProps)(EditPostTimeLimitButton);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage, FormattedHTMLMessage} from 'react-intl';\nimport {Modal} from 'react-bootstrap';\n\nimport {Constants} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nconst INT32_MAX = 2147483647;\n\nexport default class EditPostTimeLimitModal extends React.Component {\n    static propTypes = {\n        config: PropTypes.object.isRequired,\n        show: PropTypes.bool,\n        onClose: PropTypes.func.isRequired,\n        actions: PropTypes.shape({\n            updateConfig: PropTypes.func.isRequired,\n            getConfig: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            postEditTimeLimit: parseInt(props.config.ServiceSettings.PostEditTimeLimit, 10),\n            saving: false,\n            errorMessage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getConfig();\n    }\n\n    save = async () => {\n        this.setState({saving: true, errorMessage: ''});\n\n        const val = parseInt(this.state.postEditTimeLimit, 10);\n        if (val !== Constants.UNSET_POST_EDIT_TIME_LIMIT) {\n            if (val.toString() === 'NaN' || val <= 0 || val > INT32_MAX) {\n                this.setState({errorMessage: localizeMessage('edit_post.time_limit_modal.invalid_time_limit', 'Invalid time limit'), saving: false});\n                return false;\n            }\n        }\n\n        const newConfig = JSON.parse(JSON.stringify(this.props.config));\n        newConfig.ServiceSettings.PostEditTimeLimit = val;\n\n        const {error: err} = await this.props.actions.updateConfig(newConfig);\n        if (err) {\n            this.setState({errorMessage: err, saving: false});\n        } else {\n            this.setState({saving: false});\n            this.props.onClose();\n        }\n\n        return true;\n    }\n\n    handleOptionChange = (e) => {\n        const {value} = e.target;\n        if (value === Constants.ALLOW_EDIT_POST_ALWAYS) {\n            this.setState({postEditTimeLimit: Constants.UNSET_POST_EDIT_TIME_LIMIT});\n        } else {\n            this.setState({postEditTimeLimit: ''});\n        }\n    }\n\n    handleSecondsChange = (e) => {\n        const {value} = e.target;\n        this.setState({postEditTimeLimit: value});\n    }\n\n    render = () => {\n        return (\n            <Modal\n                dialogClassName='a11y__modal admin-modal edit-post-time-limit-modal'\n                show={this.props.show}\n                role='dialog'\n                aria-labelledby='editPostTimeModalLabel'\n            >\n                <Modal.Header\n                    closeButton={true}\n                >\n                    <Modal.Title\n                        componentClass='h1'\n                        id='editPostTimeModalLabel'\n                    >\n                        <FormattedMessage\n                            id='edit_post.time_limit_modal.title'\n                            defaultMessage='Configure Global Edit Post Time Limit'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FormattedHTMLMessage\n                        id='edit_post.time_limit_modal.description'\n                        defaultMessage='Setting a time limit <strong>applies to all users</strong> who have the \"Edit Post\" permissions in any permission scheme.'\n                    />\n                    <div className='padding-left x2 padding-top padding-bottom'>\n                        <div className='padding-top x2'>\n                            <input\n                                id='anytime'\n                                type='radio'\n                                name='limit'\n                                value={Constants.ALLOW_EDIT_POST_ALWAYS}\n                                checked={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT}\n                                onChange={this.handleOptionChange}\n                            />\n                            <label htmlFor='anytime'>\n                                <FormattedMessage\n                                    id='edit_post.time_limit_modal.option_label_anytime'\n                                    defaultMessage='Anytime'\n                                />\n                            </label>\n                        </div>\n                        <div className='padding-top'>\n                            <input\n                                id='timelimit'\n                                type='radio'\n                                name='limit'\n                                value={Constants.ALLOW_EDIT_POST_TIME_LIMIT}\n                                checked={this.state.postEditTimeLimit !== Constants.UNSET_POST_EDIT_TIME_LIMIT}\n                                onChange={this.handleOptionChange}\n                            />\n                            <label htmlFor='timelimit'>\n                                <FormattedMessage\n                                    id='edit_post.time_limit_modal.option_label_time_limit.preinput'\n                                    defaultMessage='Can edit for'\n                                />\n                            </label>\n                            <input\n                                type='number'\n                                className='form-control inline'\n                                min='0'\n                                step='1'\n                                max={INT32_MAX}\n                                id='editPostTimeLimit'\n                                readOnly={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT}\n                                onChange={this.handleSecondsChange}\n                                value={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT ? '' : this.state.postEditTimeLimit}\n                            />\n                            <label htmlFor='timelimit'>\n                                <FormattedMessage\n                                    id='edit_post.time_limit_modal.option_label_time_limit.postinput'\n                                    defaultMessage='seconds after posting'\n                                />\n                            </label>\n                        </div>\n                        <div className='padding-top x2 light'>\n                            <FormattedMessage\n                                id='edit_post.time_limit_modal.subscript'\n                                defaultMessage='Set the length of time users have to edit their messages after posting.'\n                            />\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div className='edit-post-time-limit-modal__error'>\n                        {this.state.errorMessage}\n                    </div>\n                    <button\n                        type='button'\n                        className='btn btn-cancel'\n                        onClick={this.props.onClose}\n                    >\n                        <FormattedMessage\n                            id='confirm_modal.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        id='linkModalCloseButton'\n                        type='button'\n                        className='btn btn-default'\n                        onClick={this.save}\n                        disabled={this.state.saving}\n                    >\n                        <FormattedMessage\n                            id={this.state.saving ? t('save_button.saving') : t('edit_post.time_limit_modal.save_button')}\n                            defaultMessage='Save Edit Time'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getConfig, updateConfig} from 'mattermost-redux/actions/admin';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\n\nimport EditPostTimeLimitModal from './edit_post_time_limit_modal';\n\nfunction mapStateToProps(state) {\n    return {\n        config: Selectors.getConfig(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateConfig,\n            getConfig,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPostTimeLimitModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport PermissionGroup from '../permission_group.jsx';\n\nimport EditPostTimeLimitButton from '../edit_post_time_limit_button';\nimport EditPostTimeLimitModal from '../edit_post_time_limit_modal';\n\nexport default class GuestPermissionsTree extends React.Component {\n    static propTypes = {\n        scope: PropTypes.string.isRequired,\n        role: PropTypes.object.isRequired,\n        onToggle: PropTypes.func.isRequired,\n        parentRole: PropTypes.object,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        readOnly: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        role: {\n            permissions: [],\n        },\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editTimeLimitModalIsVisible: false,\n        };\n\n        this.ADDITIONAL_VALUES = {\n            edit_post: {\n                editTimeLimitButton: <EditPostTimeLimitButton onClick={this.openPostTimeLimitModal}/>,\n            },\n        };\n\n        this.permissions = [\n            Permissions.CREATE_PRIVATE_CHANNEL,\n            Permissions.EDIT_POST,\n            Permissions.DELETE_POST,\n            {\n                id: 'reactions',\n                combined: true,\n                permissions: [\n                    Permissions.ADD_REACTION,\n                    Permissions.REMOVE_REACTION,\n                ],\n            },\n        ];\n    }\n\n    openPostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: true});\n    }\n\n    closePostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: false});\n    }\n\n    toggleGroup = (ids) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onToggle(this.props.role.name, ids);\n    }\n\n    render = () => {\n        return (\n            <div className='permissions-tree guest'>\n                <div className='permissions-tree--header'>\n                    <div className='permission-name'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.permission'\n                            defaultMessage='Permission'\n                        />\n                    </div>\n                    <div className='permission-description'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.description'\n                            defaultMessage='Description'\n                        />\n                    </div>\n                </div>\n                <div className='permissions-tree--body'>\n                    <PermissionGroup\n                        key='all'\n                        id='all'\n                        uniqId={this.props.role.name}\n                        selected={this.props.selected}\n                        selectRow={this.props.selectRow}\n                        readOnly={this.props.readOnly}\n                        permissions={this.permissions}\n                        additionalValues={this.ADDITIONAL_VALUES}\n                        role={this.props.role}\n                        parentRole={this.props.parentRole}\n                        scope={this.props.scope}\n                        combined={false}\n                        onChange={this.toggleGroup}\n                        root={true}\n                    />\n                </div>\n                <EditPostTimeLimitModal\n                    onClose={this.closePostTimeLimitModal}\n                    show={this.state.editTimeLimitModalIsVisible}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport GuestPermissionsTree from './guest_permissions_tree.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        config,\n    };\n}\n\nexport default connect(mapStateToProps)(GuestPermissionsTree);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getSchemeTeams as loadSchemeTeams, getSchemes as loadSchemes} from 'mattermost-redux/actions/schemes';\nimport {getSchemes} from 'mattermost-redux/selectors/entities/schemes';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport PermissionSchemesSettings from './permission_schemes_settings.jsx';\n\nfunction mapStateToProps(state) {\n    const schemes = getSchemes(state);\n    const config = getConfig(state);\n\n    return {\n        schemes,\n        jobsAreEnabled: config.RunJobs === 'true',\n        clusterIsEnabled: config.EnableCluster === 'true',\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadSchemes,\n            loadSchemeTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionSchemesSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon.jsx';\nimport CheckboxPartialIcon from 'components/widgets/icons/checkbox_partial_icon.jsx';\n\nexport default class PermissionCheckbox extends React.PureComponent {\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n    };\n\n    static defaultProps = {\n        value: '',\n    }\n\n    render() {\n        const {value} = this.props;\n        let icon = null;\n        let extraClass = '';\n        if (value === 'checked') {\n            icon = (<CheckboxCheckedIcon/>);\n            extraClass = 'checked';\n        } else if (value === 'intermediate') {\n            icon = (<CheckboxPartialIcon/>);\n            extraClass = 'intermediate';\n        }\n        return (\n            <div className={'permission-check ' + extraClass}>\n                {icon}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage, FormattedHTMLMessage, injectIntl, intlShape} from 'react-intl';\nimport {Overlay, Tooltip} from 'react-bootstrap';\n\nimport {generateId} from 'utils/utils.jsx';\nimport Constants from 'utils/constants';\n\nexport class PermissionDescription extends React.Component {\n    static propTypes = {\n        intl: intlShape.isRequired,\n        id: PropTypes.string.isRequired,\n        rowType: PropTypes.string.isRequired,\n        inherited: PropTypes.object,\n        selectRow: PropTypes.func.isRequired,\n        additionalValues: PropTypes.object,\n    };\n\n    constructor(props) {\n        super(props);\n        this.id = generateId();\n\n        this.state = {\n            open: false,\n        };\n    }\n\n    closeTooltip = () => {\n        this.setState({open: false});\n    }\n\n    openTooltip = (e) => {\n        const elm = e.currentTarget.querySelector('span');\n        const isElipsis = elm.offsetWidth < elm.scrollWidth;\n        this.setState({open: isElipsis});\n    }\n\n    parentPermissionClicked = (e) => {\n        const isInheritLink = e.target.parentElement.parentElement.className === 'inherit-link-wrapper';\n        if (e.target.parentElement.className !== 'permission-description' && !isInheritLink) {\n            e.stopPropagation();\n        } else if (isInheritLink) {\n            this.props.selectRow(this.props.id);\n            e.stopPropagation();\n        }\n    }\n\n    render() {\n        const {inherited, id, rowType} = this.props;\n\n        let content = '';\n        if (inherited) {\n            content = (\n                <span className='inherit-link-wrapper'>\n                    <FormattedHTMLMessage\n                        id='admin.permissions.inherited_from'\n                        values={{\n                            name: this.props.intl.formatMessage({\n                                id: 'admin.permissions.roles.' + inherited.name + '.name',\n                                defaultMessage: inherited.display_name,\n                            }),\n                        }}\n                    />\n                </span>\n            );\n        } else {\n            content = (\n                <FormattedMessage\n                    id={'admin.permissions.' + rowType + '.' + id + '.description'}\n                    values={this.props.additionalValues}\n                />\n            );\n        }\n        let tooltip = (\n            <Overlay\n                show={this.state.open}\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                target={this.refs.content}\n            >\n                <Tooltip id={this.id}>\n                    {content}\n                </Tooltip>\n            </Overlay>\n        );\n        if (content.props.values && Object.keys(content.props.values).length > 0) {\n            tooltip = null;\n        }\n        content = (\n            <span\n                className='permission-description'\n                onClick={this.parentPermissionClicked}\n                ref='content'\n                onMouseOver={this.openTooltip}\n                onMouseOut={this.closeTooltip}\n            >\n                {content}\n                {tooltip}\n            </span>\n        );\n\n        return content;\n    }\n}\n\nexport default injectIntl(PermissionDescription);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {PermissionsScope} from 'utils/constants';\n\nimport PermissionCheckbox from './permission_checkbox.jsx';\nimport PermissionRow from './permission_row.jsx';\nimport PermissionDescription from './permission_description.jsx';\n\nexport default class PermissionGroup extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        uniqId: PropTypes.string.isRequired,\n        permissions: PropTypes.array.isRequired,\n        readOnly: PropTypes.bool,\n        role: PropTypes.object,\n        parentRole: PropTypes.object,\n        scope: PropTypes.string.isRequired,\n        combined: PropTypes.bool,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        root: PropTypes.bool,\n        onChange: PropTypes.func.isRequired,\n        additionalValues: PropTypes.object,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            prevPermissions: [],\n        };\n    }\n\n    UNSAFE_componentWillUpdate(nextProps) { // eslint-disable-line camelcase\n        if (this.props.selected !== nextProps.selected) {\n            if (this.getRecursivePermissions(this.props.permissions).indexOf(nextProps.selected) !== -1) {\n                this.setState({expanded: true});\n            }\n        }\n    }\n\n    toggleExpanded = (e) => {\n        e.stopPropagation();\n        this.setState({expanded: !this.state.expanded});\n    }\n\n    toggleSelectRow = (id) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onChange([id]);\n    }\n\n    getRecursivePermissions = (permissions) => {\n        let result = [];\n        for (const permission of permissions) {\n            if (typeof permission === 'string') {\n                result.push(permission);\n            } else {\n                result = result.concat(this.getRecursivePermissions(permission.permissions));\n            }\n        }\n        return result;\n    }\n\n    toggleSelectSubGroup = (ids) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onChange(ids);\n    }\n\n    toggleSelectGroup = () => {\n        const {readOnly, permissions, role, onChange} = this.props;\n        if (readOnly) {\n            return;\n        }\n        if (this.getStatus(permissions) === 'checked') {\n            const permissionsToToggle = [];\n            for (const permission of this.getRecursivePermissions(permissions)) {\n                if (!this.fromParent(permission)) {\n                    permissionsToToggle.push(permission);\n                }\n            }\n            this.setState({expanded: true});\n            onChange(permissionsToToggle);\n        } else if (this.getStatus(permissions) === '') {\n            const permissionsToToggle = [];\n            let expanded = true;\n            if (this.state.prevPermissions.length === 0) {\n                for (const permission of this.getRecursivePermissions(permissions)) {\n                    if (!this.fromParent(permission)) {\n                        permissionsToToggle.push(permission);\n                        expanded = false;\n                    }\n                }\n            } else {\n                for (const permission of this.getRecursivePermissions(permissions)) {\n                    if (this.state.prevPermissions.indexOf(permission) !== -1 && !this.fromParent(permission)) {\n                        permissionsToToggle.push(permission);\n                    }\n                }\n            }\n            onChange(permissionsToToggle);\n            this.setState({prevPermissions: [], expanded});\n        } else {\n            const permissionsToToggle = [];\n            for (const permission of this.getRecursivePermissions(permissions)) {\n                if (role.permissions.indexOf(permission) === -1 && !this.fromParent(permission)) {\n                    permissionsToToggle.push(permission);\n                }\n            }\n            this.setState({prevPermissions: role.permissions, expanded: false});\n            onChange(permissionsToToggle);\n        }\n    }\n\n    isInScope = (permission) => {\n        if (this.props.scope === 'channel_scope' && PermissionsScope[permission] !== 'channel_scope') {\n            return false;\n        }\n        if (this.props.scope === 'team_scope' && PermissionsScope[permission] === 'system_scope') {\n            return false;\n        }\n        return true;\n    }\n\n    renderPermission = (permission, additionalValues) => {\n        if (!this.isInScope(permission)) {\n            return null;\n        }\n        const comesFromParent = this.fromParent(permission);\n        const active = comesFromParent || this.props.role.permissions.indexOf(permission) !== -1;\n        return (\n            <PermissionRow\n                key={permission}\n                id={permission}\n                uniqId={this.props.uniqId + '-' + permission}\n                selected={this.props.selected}\n                selectRow={this.props.selectRow}\n                readOnly={this.props.readOnly || comesFromParent}\n                inherited={comesFromParent ? this.props.parentRole : null}\n                value={active ? 'checked' : ''}\n                onChange={this.toggleSelectRow}\n                additionalValues={additionalValues}\n            />\n        );\n    }\n\n    renderGroup = (g) => {\n        return (\n            <PermissionGroup\n                key={g.id}\n                id={g.id}\n                uniqId={this.props.uniqId + '-' + g.id}\n                selected={this.props.selected}\n                selectRow={this.props.selectRow}\n                readOnly={this.props.readOnly}\n                permissions={g.permissions}\n                additionalValues={this.props.additionalValues}\n                role={this.props.role}\n                parentRole={this.props.parentRole}\n                scope={this.props.scope}\n                onChange={this.toggleSelectSubGroup}\n                combined={g.combined}\n                root={false}\n            />\n        );\n    }\n\n    fromParent = (id) => {\n        return this.props.parentRole && this.props.parentRole.permissions.indexOf(id) !== -1;\n    }\n\n    getStatus = (permissions) => {\n        let anyChecked = false;\n        let anyUnchecked = false;\n        for (const permission of permissions) {\n            if (typeof permission === 'string') {\n                if (!this.isInScope(permission)) {\n                    continue;\n                }\n                anyChecked = anyChecked || this.fromParent(permission) || this.props.role.permissions.indexOf(permission) !== -1;\n                anyUnchecked = anyUnchecked || (!this.fromParent(permission) && this.props.role.permissions.indexOf(permission) === -1);\n            } else {\n                const status = this.getStatus(permission.permissions);\n                if (status === 'intermediate') {\n                    return 'intermediate';\n                }\n                if (status === 'checked') {\n                    anyChecked = true;\n                }\n                if (status === '') {\n                    anyUnchecked = true;\n                }\n            }\n        }\n        if (anyChecked && anyUnchecked) {\n            return 'intermediate';\n        }\n        if (anyChecked && !anyUnchecked) {\n            return 'checked';\n        }\n        return '';\n    }\n\n    hasPermissionsOnScope = () => {\n        return this.getRecursivePermissions(this.props.permissions).some((permission) => this.isInScope(permission));\n    }\n\n    allPermissionsFromParent = (permissions) => {\n        for (const permission of permissions) {\n            if (typeof permission !== 'string') {\n                if (!this.allPermissionsFromParent(permission.permissions)) {\n                    return false;\n                }\n                continue;\n            }\n            if (this.isInScope(permission) && !this.fromParent(permission)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    render = () => {\n        const {id, uniqId, permissions, readOnly, combined, root, selected, additionalValues} = this.props;\n        if (!this.hasPermissionsOnScope()) {\n            return null;\n        }\n        const permissionsRows = permissions.map((group) => {\n            if (typeof group === 'string') {\n                const addVals = additionalValues && additionalValues[group] ? additionalValues[group] : {};\n                return this.renderPermission(group, addVals);\n            }\n            return this.renderGroup(group);\n        });\n        if (root) {\n            return (\n                <div className={'permission-group-permissions ' + (this.state.expanded ? 'open' : '')}>\n                    {permissionsRows}\n                </div>\n            );\n        }\n\n        let inherited = null;\n        if (this.allPermissionsFromParent(this.props.permissions) && this.props.combined) {\n            inherited = this.props.parentRole;\n        }\n\n        let classes = '';\n        if (selected === id) {\n            classes += ' selected';\n        }\n\n        if (readOnly || this.allPermissionsFromParent(this.props.permissions)) {\n            classes += ' read-only';\n        }\n\n        if (combined) {\n            classes += ' combined';\n        }\n\n        return (\n            <div className='permission-group'>\n                {!root &&\n                    <div\n                        className={'permission-group-row ' + classes}\n                        onClick={this.toggleSelectGroup}\n                        id={uniqId}\n                    >\n                        {!combined &&\n                            <div\n                                className={'fa fa-caret-right permission-arrow ' + (this.state.expanded ? 'open' : '')}\n                                onClick={this.toggleExpanded}\n                            />}\n                        <PermissionCheckbox value={this.getStatus(this.props.permissions)}/>\n                        <span className='permission-name'>\n                            <FormattedMessage id={'admin.permissions.group.' + id + '.name'}/>\n                        </span>\n                        <PermissionDescription\n                            inherited={inherited}\n                            id={id}\n                            selectRow={this.props.selectRow}\n                            rowType='group'\n                        />\n                    </div>}\n                {!combined &&\n                    <div className={'permission-group-permissions ' + (this.state.expanded ? 'open' : '')}>\n                        {permissionsRows}\n                    </div>}\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport PermissionCheckbox from './permission_checkbox.jsx';\nimport PermissionDescription from './permission_description.jsx';\n\nexport default class PermissionRow extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        uniqId: PropTypes.string.isRequired,\n        inherited: PropTypes.object,\n        readOnly: PropTypes.bool,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        additionalValues: PropTypes.object,\n    };\n\n    toggleSelect = () => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onChange(this.props.id);\n    }\n\n    render = () => {\n        const {id, uniqId, inherited, value, readOnly, selected, additionalValues} = this.props;\n        let classes = 'permission-row';\n        if (readOnly) {\n            classes += ' read-only';\n        }\n\n        if (selected === id) {\n            classes += ' selected';\n        }\n\n        return (\n            <div\n                className={classes}\n                onClick={this.toggleSelect}\n                id={uniqId}\n            >\n                <PermissionCheckbox value={value}/>\n                <span className='permission-name'>\n                    <FormattedMessage\n                        id={'admin.permissions.permission.' + id + '.name'}\n                    />\n                </span>\n                <PermissionDescription\n                    inherited={inherited}\n                    id={id}\n                    selectRow={this.props.selectRow}\n                    rowType='permission'\n                    additionalValues={additionalValues}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport * as Utils from 'utils/utils';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport LoadingScreen from 'components/loading_screen';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport AdminPanelWithLink from 'components/widgets/admin_console/admin_panel_with_link';\n\nimport PermissionsSchemeSummary from './permissions_scheme_summary';\n\nconst PAGE_SIZE = 30;\nconst PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE = 501;\n\nexport default class PermissionSchemesSettings extends React.PureComponent {\n    static propTypes = {\n        schemes: PropTypes.object.isRequired,\n        jobsAreEnabled: PropTypes.bool,\n        clusterIsEnabled: PropTypes.bool,\n        license: PropTypes.shape({\n            CustomPermissionsSchemes: PropTypes.string,\n        }),\n        actions: PropTypes.shape({\n            loadSchemes: PropTypes.func.isRequired,\n            loadSchemeTeams: PropTypes.func.isRequired,\n        }),\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            loadingMore: false,\n            page: 0,\n            phase2MigrationIsComplete: false,\n        };\n    }\n\n    static defaultProps = {\n        schemes: {},\n    };\n\n    async UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        let schemes;\n        let phase2MigrationIsComplete = true; // Assume migration is complete unless HTTP status code says otherwise.\n        try {\n            schemes = await this.props.actions.loadSchemes('team', 0, PAGE_SIZE);\n            if (schemes.error.status_code === PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE) {\n                phase2MigrationIsComplete = false;\n            }\n            const promises = [];\n            for (const scheme of schemes.data) {\n                promises.push(this.props.actions.loadSchemeTeams(scheme.id));\n            }\n            Promise.all(promises).then(() => this.setState({loading: false, phase2MigrationIsComplete}));\n        } catch (err) {\n            this.setState({loading: false, phase2MigrationIsComplete});\n        }\n    }\n\n    loadMoreSchemes = () => {\n        this.setState({loadingMore: true});\n        this.props.actions.loadSchemes('team', this.state.page + 1, PAGE_SIZE).then((schemes) => {\n            const promises = [];\n            for (const scheme of schemes.data) {\n                promises.push(this.props.actions.loadSchemeTeams(scheme.id));\n            }\n            Promise.all(promises).then(() => this.setState({loadingMore: false, page: this.state.page + 1}));\n        });\n    }\n\n    // |RunJobs && !EnableCluster|(*App).IsPhase2MigrationCompleted|View                                                   |\n    // |-------------------------|---------------------------------|-------------------------------------------------------|\n    // |true                     |true                             |null                                                   |\n    // |false                    |true                             |null (Jobs were disabled after a successful migration.)|\n    // |false                    |false                            |On hold view.                                          |\n    // |true                     |false                            |In progress view.                                      |\n    teamOverrideSchemesMigrationView = () => {\n        if (this.state.phase2MigrationIsComplete) {\n            return null;\n        }\n\n        const docLink = (\n            <a\n                href='https://docs.mattermost.com/administration/config-settings.html#jobs'\n                rel='noopener noreferrer'\n                target='_blank'\n            >\n                <FormattedMessage\n                    id='admin.permissions.documentationLinkText'\n                    defaultMessage='documentation'\n                />\n            </a>\n        );\n\n        if (this.props.jobsAreEnabled && !this.props.clusterIsEnabled) {\n            return this.teamOverrideUnavalableView(\n                t('admin.permissions.teamOverrideSchemesInProgress'),\n                'Migration job in progress: Team Override Schemes are not available until the job server completes the permissions migration. Learn more in the {documentationLink}.',\n                docLink\n            );\n        }\n\n        return this.teamOverrideUnavalableView(\n            t('admin.permissions.teamOverrideSchemesNoJobsEnabled'),\n            'Migration job on hold: Team Override Schemes are not available until the job server can execute the permissions migration. The job will be automatically started when the job server is enabled. Learn more in the {documentationLink}.',\n            docLink,\n        );\n    }\n\n    teamOverrideUnavalableView = (id, defaultMsg, documentationLink) => {\n        return (\n            <div className='team-override-unavailable'>\n                <div className='team-override-unavailable__inner'>\n                    <FormattedMessage\n                        id={id}\n                        defaultMessage={defaultMsg}\n                        values={{documentationLink}}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    renderTeamOverrideSchemes = () => {\n        const schemes = Object.values(this.props.schemes).map((scheme) => (\n            <PermissionsSchemeSummary\n                scheme={scheme}\n                history={this.props.history}\n                key={scheme.id}\n            />\n        ));\n        const hasCustomSchemes = this.props.license.CustomPermissionsSchemes === 'true';\n        const teamOverrideView = this.teamOverrideSchemesMigrationView();\n\n        if (hasCustomSchemes) {\n            return (\n                <AdminPanelWithLink\n                    className='permissions-block'\n                    titleId={t('admin.permissions.teamOverrideSchemesTitle')}\n                    titleDefault='Team Override Schemes'\n                    subtitleId={t('admin.permissions.teamOverrideSchemesBannerText')}\n                    subtitleDefault='Use when specific teams need permission exceptions to the [System Scheme](!https://about.mattermost.com/default-system-scheme).'\n                    url='/admin_console/user_management/permissions/team_override_scheme'\n                    disabled={teamOverrideView !== null}\n                    linkTextId={t('admin.permissions.teamOverrideSchemesNewButton')}\n                    linkTextDefault='New Team Override Scheme'\n                >\n                    {schemes.length === 0 && teamOverrideView === null &&\n                        <div className='no-team-schemes'>\n                            <FormattedMessage\n                                id='admin.permissions.teamOverrideSchemesNoSchemes'\n                                defaultMessage='No team override schemes created.'\n                            />\n                        </div>}\n                    {teamOverrideView}\n                    {schemes.length > 0 && schemes}\n                    {schemes.length === (PAGE_SIZE * (this.state.page + 1)) &&\n                        <button\n                            className='more-schemes theme style--none color--link'\n                            onClick={this.loadMoreSchemes}\n                            disabled={this.state.loadingMore}\n                        >\n                            <LoadingWrapper\n                                loading={this.state.loadingMore}\n                                text={Utils.localizeMessage('admin.permissions.loadingMoreSchemes', 'Loading...')}\n                            >\n                                <FormattedMessage\n                                    id='admin.permissions.loadMoreSchemes'\n                                    defaultMessage='Load more schemes'\n                                />\n                            </LoadingWrapper>\n                        </button>}\n                </AdminPanelWithLink>\n            );\n        }\n        return false;\n    }\n\n    render = () => {\n        if (this.state.loading) {\n            return (<LoadingScreen/>);\n        }\n\n        const teamOverrideView = this.teamOverrideSchemesMigrationView();\n\n        return (\n            <div className='wrapper--fixed'>\n                <FormattedAdminHeader\n                    id='admin.permissions.permissionSchemes'\n                    defaultMessage='Permission Schemes'\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='banner info'>\n                            <div className='banner__content'>\n                                <span>\n                                    <FormattedMarkdownMessage\n                                        id='admin.permissions.introBanner'\n                                        defaultMessage='Permission Schemes set the default permissions for Team Admins, Channel Admins and everyone else. Learn more about permission schemes in our [documentation](!https://about.mattermost.com/default-advanced-permissions).'\n                                    />\n                                </span>\n                            </div>\n                        </div>\n\n                        <AdminPanelWithLink\n                            titleId={t('admin.permissions.systemSchemeBannerTitle')}\n                            titleDefault='System Scheme'\n                            subtitleId={t('admin.permissions.systemSchemeBannerText')}\n                            subtitleDefault='Set the default permissions inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied.'\n                            url='/admin_console/user_management/permissions/system_scheme'\n                            disabled={teamOverrideView !== null}\n                            linkTextId={t('admin.permissions.systemSchemeBannerButton')}\n                            linkTextDefault='Edit Scheme'\n                        />\n\n                        {this.renderTeamOverrideSchemes()}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nt('admin.permissions.group.delete_posts.description');\nt('admin.permissions.group.delete_posts.name');\nt('admin.permissions.group.integrations.description');\nt('admin.permissions.group.integrations.name');\nt('admin.permissions.group.posts.description');\nt('admin.permissions.group.posts.name');\nt('admin.permissions.group.private_channel.description');\nt('admin.permissions.group.private_channel.name');\nt('admin.permissions.group.public_channel.description');\nt('admin.permissions.group.public_channel.name');\nt('admin.permissions.group.reactions.description');\nt('admin.permissions.group.reactions.name');\nt('admin.permissions.group.send_invites.description');\nt('admin.permissions.group.send_invites.name');\nt('admin.permissions.group.teams.description');\nt('admin.permissions.group.teams.name');\nt('admin.permissions.group.edit_posts.description');\nt('admin.permissions.group.edit_posts.name');\nt('admin.permissions.group.teams_team_scope.description');\nt('admin.permissions.group.teams_team_scope.name');\nt('admin.permissions.permission.assign_system_admin_role.description');\nt('admin.permissions.permission.assign_system_admin_role.name');\nt('admin.permissions.permission.create_direct_channel.description');\nt('admin.permissions.permission.create_direct_channel.name');\nt('admin.permissions.permission.create_group_channel.description');\nt('admin.permissions.permission.create_group_channel.name');\nt('admin.permissions.permission.create_private_channel.description');\nt('admin.permissions.permission.create_private_channel.name');\nt('admin.permissions.permission.create_public_channel.description');\nt('admin.permissions.permission.create_public_channel.name');\nt('admin.permissions.permission.create_team.description');\nt('admin.permissions.permission.create_team.name');\nt('admin.permissions.permission.create_user_access_token.description');\nt('admin.permissions.permission.create_user_access_token.name');\nt('admin.permissions.permission.delete_others_posts.description');\nt('admin.permissions.permission.delete_others_posts.name');\nt('admin.permissions.permission.delete_post.description');\nt('admin.permissions.permission.delete_post.name');\nt('admin.permissions.permission.delete_private_channel.description');\nt('admin.permissions.permission.delete_private_channel.name');\nt('admin.permissions.permission.delete_public_channel.description');\nt('admin.permissions.permission.delete_public_channel.name');\nt('admin.permissions.permission.edit_other_users.description');\nt('admin.permissions.permission.edit_other_users.name');\nt('admin.permissions.permission.edit_post.description');\nt('admin.permissions.permission.edit_post.name');\nt('admin.permissions.permission.import_team.description');\nt('admin.permissions.permission.import_team.name');\nt('admin.permissions.permission.list_team_channels.description');\nt('admin.permissions.permission.list_team_channels.name');\nt('admin.permissions.permission.list_users_without_team.description');\nt('admin.permissions.permission.list_users_without_team.name');\nt('admin.permissions.permission.manage_channel_roles.description');\nt('admin.permissions.permission.manage_channel_roles.name');\nt('admin.permissions.permission.create_emojis.description');\nt('admin.permissions.permission.create_emojis.name');\nt('admin.permissions.permission.delete_emojis.description');\nt('admin.permissions.permission.delete_emojis.name');\nt('admin.permissions.permission.delete_others_emojis.description');\nt('admin.permissions.permission.delete_others_emojis.name');\nt('admin.permissions.permission.manage_jobs.description');\nt('admin.permissions.permission.manage_jobs.name');\nt('admin.permissions.permission.manage_oauth.description');\nt('admin.permissions.permission.manage_oauth.name');\nt('admin.permissions.permission.manage_private_channel_members.description');\nt('admin.permissions.permission.manage_private_channel_members.name');\nt('admin.permissions.permission.manage_private_channel_properties.description');\nt('admin.permissions.permission.manage_private_channel_properties.name');\nt('admin.permissions.permission.manage_public_channel_members.description');\nt('admin.permissions.permission.manage_public_channel_members.name');\nt('admin.permissions.permission.manage_public_channel_properties.description');\nt('admin.permissions.permission.manage_public_channel_properties.name');\nt('admin.permissions.permission.manage_roles.description');\nt('admin.permissions.permission.manage_roles.name');\nt('admin.permissions.permission.manage_slash_commands.description');\nt('admin.permissions.permission.manage_slash_commands.name');\nt('admin.permissions.permission.manage_system.description');\nt('admin.permissions.permission.manage_system.name');\nt('admin.permissions.permission.manage_team.description');\nt('admin.permissions.permission.manage_team.name');\nt('admin.permissions.permission.manage_team_roles.description');\nt('admin.permissions.permission.manage_team_roles.name');\nt('admin.permissions.permission.manage_incoming_webhooks.description');\nt('admin.permissions.permission.manage_incoming_webhooks.name');\nt('admin.permissions.permission.manage_outgoing_webhooks.description');\nt('admin.permissions.permission.manage_outgoing_webhooks.name');\nt('admin.permissions.permission.permanent_delete_user.description');\nt('admin.permissions.permission.permanent_delete_user.name');\nt('admin.permissions.permission.read_channel.description');\nt('admin.permissions.permission.read_channel.name');\nt('admin.permissions.permission.read_user_access_token.description');\nt('admin.permissions.permission.read_user_access_token.name');\nt('admin.permissions.permission.remove_user_from_team.description');\nt('admin.permissions.permission.remove_user_from_team.name');\nt('admin.permissions.permission.revoke_user_access_token.description');\nt('admin.permissions.permission.revoke_user_access_token.name');\nt('admin.permissions.permission.upload_file.description');\nt('admin.permissions.permission.upload_file.name');\nt('admin.permissions.permission.view_team.description');\nt('admin.permissions.permission.view_team.name');\nt('admin.permissions.permission.edit_others_posts.description');\nt('admin.permissions.permission.edit_others_posts.name');\nt('admin.permissions.permission.invite_guest.name');\nt('admin.permissions.permission.invite_guest.description');\nt('admin.permissions.roles.all_users.name');\nt('admin.permissions.roles.channel_admin.name');\nt('admin.permissions.roles.channel_user.name');\nt('admin.permissions.roles.system_admin.name');\nt('admin.permissions.roles.system_user.name');\nt('admin.permissions.roles.team_admin.name');\nt('admin.permissions.roles.team_user.name');\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {getLicense, getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {setNavigationBlocked} from 'actions/admin_actions.jsx';\n\nimport PermissionSystemSchemeSettings from './permission_system_scheme_settings.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        config: getConfig(state),\n        license: getLicense(state),\n        roles: getRoles(state),\n        rolesRequest: state.requests.roles.getRolesByNames,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n            editRole,\n            setNavigationBlocked,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionSystemSchemeSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport GeneralConstants from 'mattermost-redux/constants/general';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nimport {PermissionsScope, DefaultRolePermissions} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport SaveButton from 'components/save_button';\nimport LoadingScreen from 'components/loading_screen';\nimport FormError from 'components/form_error';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport AdminPanelTogglable from 'components/widgets/admin_console/admin_panel_togglable';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport PermissionsTree from '../permissions_tree';\nimport GuestPermissionsTree from '../guest_permissions_tree';\n\nconst EXCLUDED_PERMISSIONS = [\n    Permissions.VIEW_MEMBERS,\n    Permissions.JOIN_PUBLIC_TEAMS,\n    Permissions.LIST_PUBLIC_TEAMS,\n    Permissions.JOIN_PRIVATE_TEAMS,\n    Permissions.LIST_PRIVATE_TEAMS,\n];\n\nconst GUEST_INCLUDED_PERMISSIONS = [\n    Permissions.CREATE_PRIVATE_CHANNEL,\n    Permissions.EDIT_POST,\n    Permissions.DELETE_POST,\n    Permissions.ADD_REACTION,\n    Permissions.REMOVE_REACTION,\n];\n\nexport default class PermissionSystemSchemeSettings extends React.Component {\n    static propTypes = {\n        config: PropTypes.object.isRequired,\n        roles: PropTypes.object.isRequired,\n        license: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n            editRole: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showResetDefaultModal: false,\n            loaded: false,\n            saving: false,\n            saveNeeded: false,\n            serverError: null,\n            roles: {},\n            openRoles: {\n                guests: true,\n                all_users: true,\n                system_admin: true,\n                team_admin: true,\n                channel_admin: true,\n            },\n        };\n        this.rolesNeeded = [\n            GeneralConstants.SYSTEM_ADMIN_ROLE,\n            GeneralConstants.SYSTEM_USER_ROLE,\n            GeneralConstants.TEAM_ADMIN_ROLE,\n            GeneralConstants.TEAM_USER_ROLE,\n            GeneralConstants.CHANNEL_ADMIN_ROLE,\n            GeneralConstants.CHANNEL_USER_ROLE,\n            GeneralConstants.SYSTEM_GUEST_ROLE,\n            GeneralConstants.TEAM_GUEST_ROLE,\n            GeneralConstants.CHANNEL_GUEST_ROLE,\n        ];\n    }\n\n    componentDidMount() {\n        this.props.actions.loadRolesIfNeeded(this.rolesNeeded);\n        if (this.rolesNeeded.every((roleName) => this.props.roles[roleName])) {\n            this.loadRolesIntoState(this.props);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.state.loaded && this.rolesNeeded.every((roleName) => nextProps.roles[roleName])) {\n            this.loadRolesIntoState(nextProps);\n        }\n    }\n\n    goToSelectedRow = () => {\n        const selected = document.querySelector('.permission-row.selected,.permission-group-row.selected');\n        if (selected) {\n            if (this.state.openRoles.all_users) {\n                selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n            } else {\n                this.toggleRole('all_users');\n\n                // Give it time to open and show everything\n                setTimeout(() => {\n                    selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n                }, 300);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    selectRow = (permission) => {\n        this.setState({selectedPermission: permission});\n\n        // Wait until next render\n        setTimeout(this.goToSelectedRow);\n\n        // Remove selection after animation\n        setTimeout(() => {\n            this.setState({selectedPermission: null});\n        }, 3000);\n    }\n\n    loadRolesIntoState(props) {\n        const {system_admin, team_admin, channel_admin, system_user, team_user, channel_user, system_guest, team_guest, channel_guest} = props.roles; // eslint-disable-line camelcase, @typescript-eslint/camelcase\n        this.setState({\n            selectedPermission: null,\n            loaded: true,\n            roles: {\n                system_admin,\n                team_admin,\n                channel_admin,\n                all_users: {\n                    name: 'all_users',\n                    displayName: 'All members',\n                    permissions: system_user.permissions.concat(team_user.permissions).concat(channel_user.permissions),\n                },\n                guests: {\n                    name: 'guests',\n                    displayName: 'Guests',\n                    permissions: system_guest.permissions.concat(team_guest.permissions).concat(channel_guest.permissions),\n                },\n            },\n        });\n    }\n\n    deriveRolesFromAllUsers = (role) => {\n        return {\n            system_user: {\n                ...this.props.roles.system_user,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'system_scope'),\n            },\n            team_user: {\n                ...this.props.roles.team_user,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_user: {\n                ...this.props.roles.channel_user,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    deriveRolesFromGuests = (role) => {\n        return {\n            system_guest: {\n                ...this.props.roles.system_guest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'system_scope'),\n            },\n            team_guest: {\n                ...this.props.roles.team_guest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_guest: {\n                ...this.props.roles.channel_guest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    restoreExcludedPermissions = (roles) => {\n        for (const permission of this.props.roles.system_user.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.system_user.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.team_user.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_user.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.channel_user.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_user.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    restoreGuestPermissions = (roles) => {\n        for (const permission of this.props.roles.system_guest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.system_guest.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.team_guest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_guest.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.channel_guest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_guest.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    handleSubmit = async () => {\n        const teamAdminPromise = this.props.actions.editRole(this.state.roles.team_admin);\n        const channelAdminPromise = this.props.actions.editRole(this.state.roles.channel_admin);\n        const roles = this.restoreExcludedPermissions(this.deriveRolesFromAllUsers(this.state.roles.all_users));\n        const guestRoles = this.restoreGuestPermissions(this.deriveRolesFromGuests(this.state.roles.guests));\n        const systemUserPromise = this.props.actions.editRole(roles.system_user);\n        const teamUserPromise = this.props.actions.editRole(roles.team_user);\n        const channelUserPromise = this.props.actions.editRole(roles.channel_user);\n\n        const promises = [teamAdminPromise, channelAdminPromise, systemUserPromise, teamUserPromise, channelUserPromise];\n\n        if (this.haveGuestAccountsPermissions()) {\n            const systemGuestPromise = this.props.actions.editRole(guestRoles.system_guest);\n            const teamGuestPromise = this.props.actions.editRole(guestRoles.team_guest);\n            const channelGuestPromise = this.props.actions.editRole(guestRoles.channel_guest);\n            promises.push(systemGuestPromise, teamGuestPromise, channelGuestPromise);\n        }\n\n        this.setState({saving: true});\n\n        const results = await Promise.all(promises);\n        let serverError = null;\n        let saveNeeded = false;\n        for (const result of results) {\n            if (result.error) {\n                serverError = result.error.message;\n                saveNeeded = true;\n                break;\n            }\n        }\n\n        this.setState({serverError, saving: false, saveNeeded});\n        this.props.actions.setNavigationBlocked(saveNeeded);\n    }\n\n    toggleRole = (roleId) => {\n        const newOpenRoles = {...this.state.openRoles};\n        newOpenRoles[roleId] = !newOpenRoles[roleId];\n        this.setState({openRoles: newOpenRoles});\n    }\n\n    togglePermission = (roleId, permissions) => {\n        const roles = {...this.state.roles};\n        const role = {...roles[roleId]};\n        const newPermissions = [...role.permissions];\n        for (const permission of permissions) {\n            if (newPermissions.indexOf(permission) === -1) {\n                newPermissions.push(permission);\n            } else {\n                newPermissions.splice(newPermissions.indexOf(permission), 1);\n            }\n        }\n        role.permissions = newPermissions;\n        roles[roleId] = role;\n\n        this.setState({roles, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    resetDefaults = () => {\n        const newRolesState = JSON.parse(JSON.stringify({...this.state.roles}));\n\n        Object.entries(DefaultRolePermissions).forEach(([roleName, permissions]) => {\n            newRolesState[roleName].permissions = permissions;\n        });\n\n        this.setState({roles: newRolesState, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    haveGuestAccountsPermissions = () => {\n        return this.props.license.GuestAccountsPermissions === 'true';\n    }\n\n    render = () => {\n        if (!this.state.loaded) {\n            return <LoadingScreen/>;\n        }\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/permissions'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme'\n                            defaultMessage='System Scheme'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className={'banner info'}>\n                            <div className='banner__content'>\n                                <span>\n                                    <FormattedMarkdownMessage\n                                        id='admin.permissions.systemScheme.introBanner'\n                                        defaultMessage='Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams.'\n                                    />\n                                </span>\n                            </div>\n                        </div>\n\n                        {this.props.license && this.props.config.EnableGuestAccounts === 'true' &&\n                            <AdminPanelTogglable\n                                className='permissions-block'\n                                open={this.state.openRoles.guests}\n                                id='all_users'\n                                onToggle={() => this.toggleRole('guests')}\n                                titleId={t('admin.permissions.systemScheme.GuestsTitle')}\n                                titleDefault='Guests'\n                                subtitleId={t('admin.permissions.systemScheme.GuestsDescription')}\n                                subtitleDefault='Permissions granted to guest users.'\n                            >\n                                <GuestPermissionsTree\n                                    selected={this.state.selectedPermission}\n                                    role={this.state.roles.guests}\n                                    scope={'system_scope'}\n                                    onToggle={this.togglePermission}\n                                    selectRow={this.selectRow}\n                                    readOnly={!this.haveGuestAccountsPermissions()}\n                                />\n                            </AdminPanelTogglable>}\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.all_users}\n                            id='all_users'\n                            onToggle={() => this.toggleRole('all_users')}\n                            titleId={t('admin.permissions.systemScheme.allMembersTitle')}\n                            titleDefault='All Members'\n                            subtitleId={t('admin.permissions.systemScheme.allMembersDescription')}\n                            subtitleDefault='Permissions granted to all members, including administrators and newly created users.'\n                        >\n                            <PermissionsTree\n                                selected={this.state.selectedPermission}\n                                role={this.state.roles.all_users}\n                                scope={'system_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.channel_admin}\n                            onToggle={() => this.toggleRole('channel_admin')}\n                            titleId={t('admin.permissions.systemScheme.channelAdminsTitle')}\n                            titleDefault='Channel Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.channelAdminsDescription')}\n                            subtitleDefault='Permissions granted to channel creators and any users promoted to Channel Administrator.'\n                        >\n                            <PermissionsTree\n                                parentRole={this.state.roles.all_users}\n                                role={this.state.roles.channel_admin}\n                                scope={'channel_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.team_admin}\n                            onToggle={() => this.toggleRole('team_admin')}\n                            titleId={t('admin.permissions.systemScheme.teamAdminsTitle')}\n                            titleDefault='Team Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.teamAdminsDescription')}\n                            subtitleDefault='Permissions granted to team creators and any users promoted to Team Administrator.'\n                        >\n                            <PermissionsTree\n                                parentRole={this.state.roles.all_users}\n                                role={this.state.roles.team_admin}\n                                scope={'team_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.system_admin}\n                            onToggle={() => this.toggleRole('system_admin')}\n                            titleId={t('admin.permissions.systemScheme.systemAdminsTitle')}\n                            titleDefault='System Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.systemAdminsDescription')}\n                            subtitleDefault='Full permissions granted to System Administrators.'\n                        >\n                            <PermissionsTree\n                                readOnly={true}\n                                role={this.state.roles.system_admin}\n                                scope={'system_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n                    </div>\n                </div>\n\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <BlockableLink\n                        className='cancel-button'\n                        to='/admin_console/user_management/permissions'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.permissionSchemes.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </BlockableLink>\n                    <a\n                        onClick={() => this.setState({showResetDefaultModal: true})}\n                        className='cancel-button reset-defaults-btn'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsButton'\n                            defaultMessage='Reset to Defaults'\n                        />\n                    </a>\n                    <div className='error-message'>\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                </div>\n\n                <ConfirmModal\n                    show={this.state.showResetDefaultModal}\n                    title={\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsButtonModalTitle'\n                            defaultMessage='Reset to Default?'\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsButtonModalBody'\n                            defaultMessage='This will reset all selections on this page to their default settings. Are you sure you want to reset?'\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsConfirmationButton'\n                            defaultMessage='Yes, Reset'\n                        />\n                    }\n                    onConfirm={() => {\n                        this.resetDefaults();\n                        this.setState({showResetDefaultModal: false});\n                    }}\n                    onCancel={() => this.setState({showResetDefaultModal: false})}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {getScheme, makeGetSchemeTeams} from 'mattermost-redux/selectors/entities/schemes';\n\nimport {getScheme as loadScheme, patchScheme, createScheme, getSchemeTeams as loadSchemeTeams} from 'mattermost-redux/actions/schemes';\n\nimport {updateTeamScheme} from 'mattermost-redux/actions/teams';\n\nimport {setNavigationBlocked} from 'actions/admin_actions.jsx';\n\nimport PermissionTeamSchemeSettings from './permission_team_scheme_settings.jsx';\n\nfunction makeMapStateToProps() {\n    const getSchemeTeams = makeGetSchemeTeams();\n\n    return (state, ownProps) => {\n        const schemeId = ownProps.match.params.scheme_id;\n        return {\n            schemeId,\n            scheme: schemeId ? getScheme(state, schemeId) : null,\n            teams: schemeId ? getSchemeTeams(state, {schemeId}) : null,\n            roles: getRoles(state),\n            rolesRequest: state.requests.roles.getRolesByNames,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n            loadScheme,\n            loadSchemeTeams,\n            editRole,\n            patchScheme,\n            updateTeamScheme,\n            createScheme,\n            setNavigationBlocked,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(PermissionTeamSchemeSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport {PermissionsScope, ModalIdentifiers} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport SaveButton from 'components/save_button';\nimport LoadingScreen from 'components/loading_screen';\nimport FormError from 'components/form_error';\nimport TeamSelectorModal from 'components/team_selector_modal';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport AdminPanelTogglable from 'components/widgets/admin_console/admin_panel_togglable';\nimport AdminPanelWithButton from 'components/widgets/admin_console/admin_panel_with_button';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport PermissionsTree from '../permissions_tree';\n\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport TeamInList from './team_in_list';\n\nconst EXCLUDED_PERMISSIONS = [\n    Permissions.VIEW_MEMBERS,\n    Permissions.JOIN_PUBLIC_TEAMS,\n    Permissions.LIST_PUBLIC_TEAMS,\n    Permissions.JOIN_PRIVATE_TEAMS,\n    Permissions.LIST_PRIVATE_TEAMS,\n];\n\nexport default class PermissionTeamSchemeSettings extends React.Component {\n    static propTypes = {\n        schemeId: PropTypes.string,\n        scheme: PropTypes.object,\n        roles: PropTypes.object,\n        teams: PropTypes.array,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n            loadScheme: PropTypes.func.isRequired,\n            loadSchemeTeams: PropTypes.func.isRequired,\n            editRole: PropTypes.func.isRequired,\n            patchScheme: PropTypes.func.isRequired,\n            createScheme: PropTypes.func.isRequired,\n            updateTeamScheme: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            saving: false,\n            saveNeeded: false,\n            serverError: null,\n            roles: null,\n            teams: null,\n            addTeamOpen: false,\n            selectedPermission: null,\n            openRoles: {\n                all_users: true,\n                team_admin: true,\n                channel_admin: true,\n            },\n        };\n    }\n\n    static defaultProps = {\n        scheme: null,\n    }\n\n    componentDidMount() {\n        this.props.actions.loadRolesIfNeeded(['team_admin', 'team_user', 'channel_admin', 'channel_user']);\n        if (this.props.schemeId) {\n            this.props.actions.loadScheme(this.props.schemeId).then((result) => {\n                this.props.actions.loadRolesIfNeeded([\n                    result.data.default_team_user_role,\n                    result.data.default_team_admin_role,\n                    result.data.default_channel_user_role,\n                    result.data.default_channel_admin_role,\n                ]);\n            });\n            this.props.actions.loadSchemeTeams(this.props.schemeId);\n        }\n    }\n\n    isLoaded = (props) => {\n        if (props.schemeId) {\n            if (props.scheme !== null &&\n                props.teams !== null &&\n                props.roles[props.scheme.default_team_user_role] &&\n                props.roles[props.scheme.default_team_admin_role] &&\n                props.roles[props.scheme.default_channel_user_role] &&\n                props.roles[props.scheme.default_channel_admin_role]) {\n                return true;\n            }\n            return false;\n        } else if (props.roles.team_user &&\n            props.roles.team_admin &&\n            props.roles.channel_user &&\n            props.roles.channel_admin) {\n            return true;\n        }\n        return false;\n    }\n\n    goToSelectedRow = () => {\n        const selected = document.querySelector('.permission-row.selected,.permission-group-row.selected');\n        if (selected) {\n            if (this.state.openRoles.all_users) {\n                selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n            } else {\n                this.toggleRole('all_users');\n\n                // Give it time to open and show everything\n                setTimeout(() => {\n                    selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n                }, 300);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    selectRow = (permission) => {\n        this.setState({selectedPermission: permission});\n\n        // Wait until next render\n        setTimeout(this.goToSelectedRow);\n\n        // Remove selection after animation\n        setTimeout(() => {\n            this.setState({selectedPermission: null});\n        }, 3000);\n    }\n\n    getStateRoles = () => {\n        if (this.state.roles !== null) {\n            return this.state.roles;\n        }\n\n        let teamUser = null;\n        let teamAdmin = null;\n        let channelUser = null;\n        let channelAdmin = null;\n\n        if (this.props.schemeId) {\n            if (this.isLoaded(this.props)) {\n                teamUser = this.props.roles[this.props.scheme.default_team_user_role];\n                teamAdmin = this.props.roles[this.props.scheme.default_team_admin_role];\n                channelUser = this.props.roles[this.props.scheme.default_channel_user_role];\n                channelAdmin = this.props.roles[this.props.scheme.default_channel_admin_role];\n            }\n        } else if (this.isLoaded(this.props)) {\n            teamUser = this.props.roles.team_user;\n            teamAdmin = this.props.roles.team_admin;\n            channelUser = this.props.roles.channel_user;\n            channelAdmin = this.props.roles.channel_admin;\n        } else {\n            return null;\n        }\n        return {\n            team_admin: teamAdmin,\n            channel_admin: channelAdmin,\n            all_users: {\n                name: 'all_users',\n                displayName: 'All members',\n                permissions: teamUser.permissions.concat(channelUser.permissions),\n            },\n        };\n    }\n\n    deriveRolesFromAllUsers = (baseTeam, baseChannel, role) => {\n        return {\n            team_user: {\n                ...baseTeam,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_user: {\n                ...baseChannel,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    restoreExcludedPermissions = (baseTeam, baseChannel, roles) => {\n        for (const permission of baseTeam.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_user.permissions.push(permission);\n            }\n        }\n        for (const permission of baseChannel.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_user.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    handleNameChange = (e) => {\n        this.setState({schemeName: e.target.value, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    handleDescriptionChange = (e) => {\n        this.setState({schemeDescription: e.target.value, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    handleSubmit = async () => {\n        const roles = this.getStateRoles();\n        let teamAdmin = roles.team_admin;\n        let channelAdmin = roles.channel_admin;\n        const allUsers = roles.all_users;\n        const schemeName = this.state.schemeName || (this.props.scheme && this.props.scheme.display_name) || '';\n        const schemeDescription = this.state.schemeDescription || (this.props.scheme && this.props.scheme.description) || '';\n        let teamUser = null;\n        let channelUser = null;\n        let schemeId = null;\n\n        this.setState({saving: true});\n        if (this.props.schemeId) {\n            let derived = this.deriveRolesFromAllUsers(\n                this.props.roles[this.props.scheme.default_team_user_role],\n                this.props.roles[this.props.scheme.default_channel_user_role],\n                allUsers\n            );\n            derived = this.restoreExcludedPermissions(\n                this.props.roles[this.props.scheme.default_team_user_role],\n                this.props.roles[this.props.scheme.default_channel_user_role],\n                derived\n            );\n            teamUser = derived.team_user;\n            channelUser = derived.channel_user;\n            await this.props.actions.patchScheme(this.props.schemeId, {\n                display_name: schemeName,\n                description: schemeDescription,\n            });\n            schemeId = this.props.schemeId;\n        } else {\n            let derived = this.deriveRolesFromAllUsers(\n                this.props.roles.team_user,\n                this.props.roles.channel_user,\n                allUsers\n            );\n            derived = this.restoreExcludedPermissions(\n                this.props.roles.team_user,\n                this.props.roles.channel_user,\n                derived\n            );\n            teamUser = derived.team_user;\n            channelUser = derived.channel_user;\n            const result = await this.props.actions.createScheme({\n                display_name: schemeName,\n                description: schemeDescription,\n                scope: 'team',\n            });\n            if (result.error) {\n                this.setState({serverError: result.error.message, saving: false, saveNeeded: true});\n                this.props.actions.setNavigationBlocked(true);\n                return;\n            }\n            const newScheme = result.data;\n            schemeId = newScheme.id;\n            await this.props.actions.loadRolesIfNeeded([\n                newScheme.default_team_user_role,\n                newScheme.default_team_admin_role,\n                newScheme.default_channel_user_role,\n                newScheme.default_channel_admin_role,\n            ]);\n            teamUser = {...teamUser, id: this.props.roles[newScheme.default_team_user_role].id};\n            teamAdmin = {...teamAdmin, id: this.props.roles[newScheme.default_team_admin_role].id};\n            channelUser = {...channelUser, id: this.props.roles[newScheme.default_channel_user_role].id};\n            channelAdmin = {...channelAdmin, id: this.props.roles[newScheme.default_channel_admin_role].id};\n        }\n\n        const teamAdminPromise = this.props.actions.editRole(teamAdmin);\n        const channelAdminPromise = this.props.actions.editRole(channelAdmin);\n        const teamUserPromise = this.props.actions.editRole(teamUser);\n        const channelUserPromise = this.props.actions.editRole(channelUser);\n\n        const teamEditPromises = [];\n\n        const currentTeams = new Set((this.state.teams || this.props.teams || []).map((team) => team.id));\n        const serverTeams = new Set((this.props.teams || []).map((team) => team.id));\n\n        // Difference of sets (currentTeams - serverTeams)\n        const addedTeams = new Set([...currentTeams].filter((team) => !serverTeams.has(team)));\n\n        // Difference of sets (serverTeams - currentTeams)\n        const removedTeams = new Set([...serverTeams].filter((team) => !currentTeams.has(team)));\n\n        for (const teamId of addedTeams) {\n            teamEditPromises.push(this.props.actions.updateTeamScheme(teamId, schemeId));\n        }\n\n        for (const teamId of removedTeams) {\n            teamEditPromises.push(this.props.actions.updateTeamScheme(teamId, ''));\n        }\n\n        const results = await Promise.all([teamAdminPromise, channelAdminPromise, teamUserPromise, channelUserPromise, ...teamEditPromises]);\n\n        let serverError = null;\n        let saveNeeded = false;\n        for (const result of results) {\n            if (result.error) {\n                serverError = result.error.message;\n                saveNeeded = true;\n                break;\n            }\n        }\n\n        this.setState({serverError, saving: false, saveNeeded});\n        this.props.actions.setNavigationBlocked(saveNeeded);\n        this.props.history.push('/admin_console/user_management/permissions');\n    }\n\n    toggleRole = (roleId) => {\n        const newOpenRoles = {...this.state.openRoles};\n        newOpenRoles[roleId] = !newOpenRoles[roleId];\n        this.setState({openRoles: newOpenRoles});\n    }\n\n    togglePermission = (roleId, permissions) => {\n        const roles = {...this.getStateRoles()};\n        let role = null;\n        if (roles.team_admin.name === roleId) {\n            role = {...roles.team_admin};\n        } else if (roles.channel_admin.name === roleId) {\n            role = {...roles.channel_admin};\n        } else if (roles.all_users.name === roleId) {\n            role = {...roles.all_users};\n        }\n        const newPermissions = [...role.permissions];\n        for (const permission of permissions) {\n            if (newPermissions.indexOf(permission) === -1) {\n                newPermissions.push(permission);\n            } else {\n                newPermissions.splice(newPermissions.indexOf(permission), 1);\n            }\n        }\n        role.permissions = newPermissions;\n        if (roles.team_admin.name === roleId) {\n            roles.team_admin = role;\n        } else if (roles.channel_admin.name === roleId) {\n            roles.channel_admin = role;\n        } else if (roles.all_users.name === roleId) {\n            roles.all_users = role;\n        }\n\n        this.setState({roles, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    openAddTeam = () => {\n        this.setState({addTeamOpen: true});\n    }\n\n    removeTeam = (teamId) => {\n        const teams = (this.state.teams || this.props.teams).filter((team) => team.id !== teamId);\n        this.setState({teams, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    addTeams = (teams) => {\n        const currentTeams = this.state.teams || this.props.teams || [];\n        this.setState({\n            teams: [...currentTeams, ...teams],\n            saveNeeded: true,\n        });\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    closeAddTeam = () => {\n        this.setState({addTeamOpen: false});\n    }\n\n    render = () => {\n        if (!this.isLoaded(this.props)) {\n            return <LoadingScreen/>;\n        }\n        const roles = this.getStateRoles();\n        const teams = this.state.teams || this.props.teams || [];\n        const schemeName = this.state.schemeName || (this.props.scheme && this.props.scheme.display_name) || '';\n        const schemeDescription = this.state.schemeDescription || (this.props.scheme && this.props.scheme.description) || '';\n        return (\n            <div className='wrapper--fixed'>\n                {this.state.addTeamOpen &&\n                    <TeamSelectorModal\n                        modalID={ModalIdentifiers.ADD_TEAMS_TO_SCHEME}\n                        onModalDismissed={this.closeAddTeam}\n                        onTeamsSelected={this.addTeams}\n                        currentSchemeId={this.props.schemeId}\n                        alreadySelected={teams.map((team) => team.id)}\n                    />\n                }\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/permissions'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.permissions.teamScheme'\n                            defaultMessage='Team Scheme'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className={'banner info'}>\n                            <div className='banner__content'>\n                                <span>\n                                    <FormattedMarkdownMessage\n                                        id='admin.permissions.teamScheme.introBanner'\n                                        defaultMessage='[Team Override Schemes](!https://about.mattermost.com/default-team-override-scheme) set the permissions for Team Admins, Channel Admins and other members in specific teams. Use a Team Override Scheme when specific teams need permission exceptions to the [System Scheme](!https://about.mattermost.com/default-system-scheme).'\n                                    />\n                                </span>\n                            </div>\n                        </div>\n\n                        <AdminPanel\n                            titleId={t('admin.permissions.teamScheme.schemeDetailsTitle')}\n                            titleDefault='Scheme Details'\n                            subtitleId={t('admin.permissions.teamScheme.schemeDetailsDescription')}\n                            subtitleDefault='Set the name and description for this scheme.'\n                        >\n                            <div className='team-scheme-details'>\n                                <div className='form-group'>\n                                    <label\n                                        className='control-label'\n                                        htmlFor='scheme-name'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.permissions.teamScheme.schemeNameLabel'\n                                            defaultMessage='Scheme Name:'\n                                        />\n                                    </label>\n                                    <LocalizedInput\n                                        id='scheme-name'\n                                        className='form-control'\n                                        type='text'\n                                        value={schemeName}\n                                        placeholder={{id: t('admin.permissions.teamScheme.schemeNamePlaceholder'), defaultMessage: 'Scheme Name'}}\n                                        onChange={this.handleNameChange}\n                                    />\n                                </div>\n                                <div className='form-group'>\n                                    <label\n                                        className='control-label'\n                                        htmlFor='scheme-description'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.permissions.teamScheme.schemeDescriptionLabel'\n                                            defaultMessage='Scheme Description:'\n                                        />\n                                    </label>\n                                    <textarea\n                                        id='scheme-description'\n                                        className='form-control'\n                                        rows='5'\n                                        value={schemeDescription}\n                                        placeholder={localizeMessage('admin.permissions.teamScheme.schemeDescriptionPlaceholder', 'Scheme Description')}\n                                        onChange={this.handleDescriptionChange}\n                                    />\n                                </div>\n                            </div>\n                        </AdminPanel>\n\n                        <AdminPanelWithButton\n                            className='permissions-block'\n                            titleId={t('admin.permissions.teamScheme.selectTeamsTitle')}\n                            titleDefault='Select teams to override permissions'\n                            subtitleId={t('admin.permissions.teamScheme.selectTeamsDescription')}\n                            subtitleDefault='Select teams where permission exceptions are required.'\n                            onButtonClick={this.openAddTeam}\n                            buttonTextId={t('admin.permissions.teamScheme.addTeams')}\n                            buttonTextDefault='Add Teams'\n                        >\n                            <div className='teams-list'>\n                                {teams.length === 0 &&\n                                    <div className='no-team-schemes'>\n                                        <FormattedMessage\n                                            id='admin.permissions.teamScheme.noTeams'\n                                            defaultMessage='No team selected. Please add teams to this list.'\n                                        />\n                                    </div>}\n                                {teams.map((team) => (\n                                    <TeamInList\n                                        key={team.id}\n                                        team={team}\n                                        onRemoveTeam={this.removeTeam}\n                                    />\n                                ))}\n                            </div>\n                        </AdminPanelWithButton>\n\n                        <AdminPanelTogglable\n                            className='permissions-block all_users'\n                            open={this.state.openRoles.all_users}\n                            id='all_users'\n                            onToggle={() => this.toggleRole('all_users')}\n                            titleId={t('admin.permissions.systemScheme.allMembersTitle')}\n                            titleDefault='All Members'\n                            subtitleId={t('admin.permissions.systemScheme.allMembersDescription')}\n                            subtitleDefault='Permissions granted to all members, including administrators and newly created users.'\n                        >\n                            <PermissionsTree\n                                selected={this.state.selectedPermission}\n                                role={roles.all_users}\n                                scope={'team_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block channel_admin'\n                            open={this.state.openRoles.channel_admin}\n                            onToggle={() => this.toggleRole('channel_admin')}\n                            titleId={t('admin.permissions.systemScheme.channelAdminsTitle')}\n                            titleDefault='Channel Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.channelAdminsDescription')}\n                            subtitleDefault='Permissions granted to channel creators and any users promoted to Channel Administrator.'\n                        >\n                            <PermissionsTree\n                                parentRole={roles.all_users}\n                                role={roles.channel_admin}\n                                scope={'channel_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block team_admin'\n                            open={this.state.openRoles.team_admin}\n                            onToggle={() => this.toggleRole('team_admin')}\n                            titleId={t('admin.permissions.systemScheme.teamAdminsTitle')}\n                            titleDefault='Team Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.teamAdminsDescription')}\n                            subtitleDefault='Permissions granted to team creators and any users promoted to Team Administrator.'\n                        >\n                            <PermissionsTree\n                                parentRole={roles.all_users}\n                                role={roles.team_admin}\n                                scope={'team_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n                    </div>\n                </div>\n\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <BlockableLink\n                        className='cancel-button'\n                        to='/admin_console/user_management/permissions'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.permissionSchemes.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </BlockableLink>\n                    <div className='error-message'>\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getTeamStats as loadTeamStats} from 'mattermost-redux/actions/teams';\n\nimport {getTeamStats} from 'mattermost-redux/selectors/entities/teams';\n\nimport TeamInList from './team_in_list.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        stats: getTeamStats(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadTeamStats,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamInList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nimport {imageURLForTeam} from 'utils/utils';\n\nexport default class TeamInList extends React.Component {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        onRemoveTeam: PropTypes.func,\n    }\n\n    render() {\n        const team = this.props.team;\n        return (\n            <div\n                className='team'\n                key={team.id}\n            >\n                <TeamIcon\n                    name={team.display_name}\n                    url={imageURLForTeam(team)}\n                />\n                <a\n                    className='remove'\n                    onClick={() => this.props.onRemoveTeam(team.id)}\n                >\n                    <FormattedMessage\n                        id='admin.permissions.teamScheme.removeTeam'\n                        defaultMessage='Remove'\n                    />\n                </a>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {deleteScheme} from 'mattermost-redux/actions/schemes';\n\nimport {makeGetSchemeTeams} from 'mattermost-redux/selectors/entities/schemes';\n\nimport PermissionsSchemeSummary from './permissions_scheme_summary.jsx';\n\nfunction makeMapStateToProps() {\n    const getSchemeTeams = makeGetSchemeTeams();\n\n    return function mapStateToProps(state, ownProps) {\n        return {\n            teams: getSchemeTeams(state, {schemeId: ownProps.scheme.id}),\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteScheme,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(PermissionsSchemeSummary);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants';\n\nconst MAX_TEAMS_PER_SCHEME_SUMMARY = 8;\n\nexport default class PermissionsSchemeSummary extends React.Component {\n    static propTypes = {\n        scheme: PropTypes.object.isRequired,\n        teams: PropTypes.array,\n        actions: PropTypes.shape({\n            deleteScheme: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showConfirmModal: false,\n            deleting: false,\n            serverError: null,\n        };\n    }\n\n    renderConfirmModal = () => {\n        const title = (\n            <FormattedMessage\n                id='admin.permissions.permissionsSchemeSummary.deleteSchemeTitle'\n                defaultMessage='Delete {scheme} scheme?'\n                values={{scheme: this.props.scheme.display_name}}\n            />\n        );\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='permission-scheme-summary-error-message'>\n                    <i className='fa fa-exclamation-circle'/> {this.state.serverError}\n                </div>\n            );\n        }\n\n        const message = (\n            <div>\n                <p>\n                    <FormattedMessage\n                        id='admin.permissions.permissionsSchemeSummary.deleteConfirmQuestion'\n                        defaultMessage='The permissions in the teams using this scheme will reset to the defaults in the System Scheme. Are you sure you want to delete the {schemeName} scheme?'\n                        values={{schemeName: this.props.scheme.display_name}}\n                    />\n                </p>\n                {serverError}\n            </div>\n        );\n\n        const confirmButton = (\n            <LoadingWrapper\n                loading={this.state.deleting}\n                text={Utils.localizeMessage('admin.permissions.permissionsSchemeSummary.deleting', 'Deleting...')}\n            >\n                <FormattedMessage\n                    id='admin.permissions.permissionsSchemeSummary.deleteConfirmButton'\n                    defaultMessage='Yes, Delete'\n                />\n            </LoadingWrapper>\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showConfirmModal}\n                title={title}\n                message={message}\n                confirmButtonText={confirmButton}\n                onConfirm={this.handleDeleteConfirmed}\n                onCancel={this.handleDeleteCanceled}\n            />\n        );\n    }\n\n    stopPropagation = (e) => {\n        e.stopPropagation();\n    }\n\n    handleDeleteCanceled = () => {\n        this.setState({\n            showConfirmModal: false,\n        });\n    }\n\n    handleDeleteConfirmed = async () => {\n        this.setState({deleting: true, serverError: null});\n        const data = await this.props.actions.deleteScheme(this.props.scheme.id);\n        if (data.error) {\n            this.setState({deleting: false, serverError: data.error.message});\n        } else {\n            this.setState({deleting: false, showConfirmModal: false});\n        }\n    }\n\n    delete = (e) => {\n        e.stopPropagation();\n        this.setState({showConfirmModal: true, serverError: null});\n    }\n\n    goToEdit = () => {\n        this.props.history.push('/admin_console/user_management/permissions/team_override_scheme/' + this.props.scheme.id);\n    }\n\n    render = () => {\n        const scheme = this.props.scheme;\n\n        let teams = this.props.teams ? this.props.teams.map((team) => (\n            <span\n                className='team'\n                key={team.id}\n            >\n                {team.display_name}\n            </span>\n        )) : [];\n\n        let extraTeams = null;\n        if (teams.length > MAX_TEAMS_PER_SCHEME_SUMMARY) {\n            extraTeams = (\n                <OverlayTrigger\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='bottom'\n                    overlay={\n                        <Tooltip\n                            className='team-scheme-extra-teams-overlay'\n                            id={scheme.id + '-extra-teams-overlay'}\n                        >\n                            {teams.slice(MAX_TEAMS_PER_SCHEME_SUMMARY)}\n                        </Tooltip>\n                    }\n                >\n                    <span\n                        className='team'\n                        key='extra-teams'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.permissionsSchemeSummary.moreTeams'\n                            defaultMessage='+{number} more'\n                            values={{number: teams.length - MAX_TEAMS_PER_SCHEME_SUMMARY}}\n                        />\n                    </span>\n                </OverlayTrigger>\n            );\n            teams = teams.slice(0, MAX_TEAMS_PER_SCHEME_SUMMARY);\n        }\n        const confirmModal = this.renderConfirmModal();\n\n        return (\n            <div\n                className='permissions-scheme-summary'\n                onClick={this.goToEdit}\n            >\n                <div onClick={this.stopPropagation}>{confirmModal}</div>\n                <div\n                    className='permissions-scheme-summary--header'\n                >\n                    <div className='title'>\n                        {scheme.display_name}\n                    </div>\n                    <div className='actions'>\n                        <Link\n                            className='edit-button'\n                            to={'/admin_console/user_management/permissions/team_override_scheme/' + scheme.id}\n                        >\n                            <FormattedMessage\n                                id='admin.permissions.permissionsSchemeSummary.edit'\n                                defaultMessage='Edit'\n                            />\n                        </Link>\n                        {'-'}\n                        <a\n                            className='delete-button'\n                            onClick={this.delete}\n                        >\n                            <FormattedMessage\n                                id='admin.permissions.permissionsSchemeSummary.delete'\n                                defaultMessage='Delete'\n                            />\n                        </a>\n                    </div>\n                </div>\n                <div className='permissions-scheme-summary--description'>\n                    {scheme.description}\n                </div>\n                <div className='permissions-scheme-summary--teams'>\n                    {teams}\n                    {extraTeams}\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport PermissionsTree from './permissions_tree.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        config,\n    };\n}\n\nexport default connect(mapStateToProps)(PermissionsTree);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport PermissionGroup from '../permission_group.jsx';\n\nimport EditPostTimeLimitButton from '../edit_post_time_limit_button';\nimport EditPostTimeLimitModal from '../edit_post_time_limit_modal';\n\nexport default class PermissionsTree extends React.Component {\n    static propTypes = {\n        scope: PropTypes.string.isRequired,\n        config: PropTypes.object.isRequired,\n        role: PropTypes.object.isRequired,\n        onToggle: PropTypes.func.isRequired,\n        parentRole: PropTypes.object,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        readOnly: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        role: {\n            permissions: [],\n        },\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editTimeLimitModalIsVisible: false,\n        };\n\n        this.ADDITIONAL_VALUES = {\n            edit_post: {\n                editTimeLimitButton: <EditPostTimeLimitButton onClick={this.openPostTimeLimitModal}/>,\n            },\n        };\n\n        this.groups = [\n            {\n                id: 'teams',\n                permissions: [\n                    {\n                        id: 'send_invites',\n                        combined: true,\n                        permissions: [\n                            Permissions.INVITE_USER,\n                            Permissions.GET_PUBLIC_LINK,\n                            Permissions.ADD_USER_TO_TEAM,\n                        ],\n                    },\n                    Permissions.CREATE_TEAM,\n                ],\n            },\n            {\n                id: 'public_channel',\n                permissions: [\n                    Permissions.CREATE_PUBLIC_CHANNEL,\n                    Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES,\n                    Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS,\n                    Permissions.DELETE_PUBLIC_CHANNEL,\n                ],\n            },\n            {\n                id: 'private_channel',\n                permissions: [\n                    Permissions.CREATE_PRIVATE_CHANNEL,\n                    Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES,\n                    Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS,\n                    Permissions.DELETE_PRIVATE_CHANNEL,\n                ],\n            },\n            {\n                id: 'posts',\n                permissions: [\n                    {\n                        id: 'edit_posts',\n                        permissions: [\n                            Permissions.EDIT_POST,\n                            Permissions.EDIT_OTHERS_POSTS,\n                        ],\n                    },\n                    {\n                        id: 'delete_posts',\n                        permissions: [\n                            Permissions.DELETE_POST,\n                            Permissions.DELETE_OTHERS_POSTS,\n                        ],\n                    },\n                    {\n                        id: 'reactions',\n                        combined: true,\n                        permissions: [\n                            Permissions.ADD_REACTION,\n                            Permissions.REMOVE_REACTION,\n                        ],\n                    },\n                ],\n            },\n            {\n                id: 'integrations',\n                permissions: [\n                ],\n            },\n        ];\n        this.updateGroups();\n    }\n\n    updateGroups = () => {\n        const {config, scope} = this.props;\n        const integrationsGroup = this.groups[this.groups.length - 1];\n        const teamsGroup = this.groups[0];\n        if (config.EnableIncomingWebhooks === 'true' && integrationsGroup.permissions.indexOf(Permissions.MANAGE_INCOMING_WEBHOOKS) === -1) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_INCOMING_WEBHOOKS);\n        }\n        if (config.EnableOutgoingWebhooks === 'true' && integrationsGroup.permissions.indexOf(Permissions.MANAGE_OUTGOING_WEBHOOKS) === -1) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_OUTGOING_WEBHOOKS);\n        }\n        if (config.EnableOAuthServiceProvider === 'true' && integrationsGroup.permissions.indexOf(Permissions.MANAGE_OAUTH) === -1) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_OAUTH);\n        }\n        if (config.EnableCommands === 'true' && integrationsGroup.permissions.indexOf(Permissions.MANAGE_SLASH_COMMANDS) === -1) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_SLASH_COMMANDS);\n        }\n        if (config.EnableCustomEmoji === 'true' && integrationsGroup.permissions.indexOf(Permissions.CREATE_EMOJIS) === -1) {\n            integrationsGroup.permissions.push(Permissions.CREATE_EMOJIS);\n        }\n        if (config.EnableCustomEmoji === 'true' && integrationsGroup.permissions.indexOf(Permissions.DELETE_EMOJIS) === -1) {\n            integrationsGroup.permissions.push(Permissions.DELETE_EMOJIS);\n        }\n        if (config.EnableCustomEmoji === 'true' && integrationsGroup.permissions.indexOf(Permissions.DELETE_OTHERS_EMOJIS) === -1) {\n            integrationsGroup.permissions.push(Permissions.DELETE_OTHERS_EMOJIS);\n        }\n        if (config.EnableGuestAccounts === 'true' && teamsGroup.permissions.indexOf(Permissions.INVITE_GUEST) === -1) {\n            teamsGroup.permissions.push(Permissions.INVITE_GUEST);\n        }\n        if (scope === 'team_scope' && this.groups[0].id !== 'teams_team_scope') {\n            this.groups[0].id = 'teams_team_scope';\n        }\n    }\n\n    openPostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: true});\n    }\n\n    closePostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: false});\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.config !== prevProps.config) {\n            this.updateGroups();\n        }\n    }\n\n    toggleGroup = (ids) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onToggle(this.props.role.name, ids);\n    }\n\n    render = () => {\n        return (\n            <div className='permissions-tree'>\n                <div className='permissions-tree--header'>\n                    <div className='permission-name'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.permission'\n                            defaultMessage='Permission'\n                        />\n                    </div>\n                    <div className='permission-description'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.description'\n                            defaultMessage='Description'\n                        />\n                    </div>\n                </div>\n                <div className='permissions-tree--body'>\n                    <PermissionGroup\n                        key='all'\n                        id='all'\n                        uniqId={this.props.role.name}\n                        selected={this.props.selected}\n                        selectRow={this.props.selectRow}\n                        readOnly={this.props.readOnly}\n                        permissions={this.groups}\n                        additionalValues={this.ADDITIONAL_VALUES}\n                        role={this.props.role}\n                        parentRole={this.props.parentRole}\n                        scope={this.props.scope}\n                        combined={false}\n                        onChange={this.toggleGroup}\n                        root={true}\n                    />\n                </div>\n                <EditPostTimeLimitModal\n                    onClose={this.closePostTimeLimitModal}\n                    show={this.state.editTimeLimitModalIsVisible}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {\n    getPlugins,\n    getPluginStatuses,\n    removePlugin,\n    uploadPlugin,\n    installPluginFromUrl,\n    enablePlugin,\n    disablePlugin,\n} from 'mattermost-redux/actions/admin';\n\nimport PluginManagement from './plugin_management.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        plugins: state.entities.admin.plugins,\n        pluginStatuses: state.entities.admin.pluginStatuses,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            uploadPlugin,\n            installPluginFromUrl,\n            removePlugin,\n            getPlugins,\n            getPluginStatuses,\n            enablePlugin,\n            disablePlugin,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PluginManagement);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport PluginState from 'mattermost-redux/constants/plugins';\n\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nimport AdminSettings from '../admin_settings';\nimport BooleanSetting from '../boolean_setting';\nimport SettingsGroup from '../settings_group.jsx';\nimport TextSetting from '../text_setting';\n\nconst PluginItemState = ({state}) => {\n    switch (state) {\n    case PluginState.PLUGIN_STATE_NOT_RUNNING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.not_running'\n                defaultMessage='Not running'\n            />\n        );\n    case PluginState.PLUGIN_STATE_STARTING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.starting'\n                defaultMessage='Starting'\n            />\n        );\n    case PluginState.PLUGIN_STATE_RUNNING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.running'\n                defaultMessage='Running'\n            />\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_START:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.failed_to_start'\n                defaultMessage='Failed to start'\n            />\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_STAY_RUNNING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.failed_to_stay_running'\n                defaultMessage='Crashing'\n            />\n        );\n    case PluginState.PLUGIN_STATE_STOPPING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.stopping'\n                defaultMessage='Stopping'\n            />\n        );\n    default:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.unknown'\n                defaultMessage='Unknown'\n            />\n        );\n    }\n};\n\nPluginItemState.propTypes = {\n    state: PropTypes.number.isRequired,\n};\n\nconst PluginItemStateDescription = ({state}) => {\n    switch (state) {\n    case PluginState.PLUGIN_STATE_NOT_RUNNING:\n        return (\n            <div className='alert alert-info'>\n                <i className='fa fa-ban'/>\n                <FormattedMessage\n                    id='admin.plugin.state.not_running.description'\n                    defaultMessage='This plugin is not enabled.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_STARTING:\n        return (\n            <div className='alert alert-success'>\n                <i className='fa fa-info'/>\n                <FormattedMessage\n                    id='admin.plugin.state.starting.description'\n                    defaultMessage='This plugin is starting.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_RUNNING:\n        return (\n            <div className='alert alert-success'>\n                <i className='fa fa-check'/>\n                <FormattedMessage\n                    id='admin.plugin.state.running.description'\n                    defaultMessage='This plugin is running.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_START:\n        return (\n            <div className='alert alert-warning'>\n                <i className='fa fa-warning'/>\n                <FormattedMessage\n                    id='admin.plugin.state.failed_to_start.description'\n                    defaultMessage='This plugin failed to start. Check your system logs for errors.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_STAY_RUNNING:\n        return (\n            <div className='alert alert-warning'>\n                <i className='fa fa-warning'/>\n                <FormattedMessage\n                    id='admin.plugin.state.failed_to_stay_running.description'\n                    defaultMessage='This plugin crashed multiple times and is no longer running. Check your system logs for errors.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_STOPPING:\n        return (\n            <div className='alert alert-info'>\n                <i className='fa fa-info'/>\n                <FormattedMessage\n                    id='admin.plugin.state.stopping.description'\n                    defaultMessage='This plugin is stopping.'\n                />\n            </div>\n        );\n    default:\n        return null;\n    }\n};\n\nPluginItemStateDescription.propTypes = {\n    state: PropTypes.number.isRequired,\n};\n\nconst PluginItem = ({\n    pluginStatus,\n    removing,\n    handleEnable,\n    handleDisable,\n    handleRemove,\n    showInstances,\n    hasSettings,\n}) => {\n    let activateButton;\n    const activating = pluginStatus.state === PluginState.PLUGIN_STATE_STARTING;\n    const deactivating = pluginStatus.state === PluginState.PLUGIN_STATE_STOPPING;\n\n    if (pluginStatus.active) {\n        activateButton = (\n            <a\n                data-plugin-id={pluginStatus.id}\n                disabled={deactivating}\n                onClick={handleDisable}\n            >\n                {deactivating ?\n                    <FormattedMessage\n                        id='admin.plugin.disabling'\n                        defaultMessage='Disabling...'\n                    /> :\n                    <FormattedMessage\n                        id='admin.plugin.disable'\n                        defaultMessage='Disable'\n                    />\n                }\n            </a>\n        );\n    } else {\n        activateButton = (\n            <a\n                data-plugin-id={pluginStatus.id}\n                disabled={activating}\n                onClick={handleEnable}\n            >\n                {activating ?\n                    <FormattedMessage\n                        id='admin.plugin.enabling'\n                        defaultMessage='Enabling...'\n                    /> :\n                    <FormattedMessage\n                        id='admin.plugin.enable'\n                        defaultMessage='Enable'\n                    />\n                }\n            </a>\n        );\n    }\n\n    let settingsButton = null;\n    if (hasSettings) {\n        settingsButton = (\n            <span>\n                {' - '}\n                <Link\n                    to={'/admin_console/plugins/plugin_' + pluginStatus.id}\n                >\n                    <FormattedMessage\n                        id='admin.plugin.settingsButton'\n                        defaultMessage='Settings'\n                    />\n                </Link>\n            </span>\n        );\n    }\n\n    let removeButton;\n    if (!pluginStatus.is_prepackaged) {\n        let removeButtonText;\n        if (removing) {\n            removeButtonText = (\n                <FormattedMessage\n                    id='admin.plugin.removing'\n                    defaultMessage='Removing...'\n                />\n            );\n        } else {\n            removeButtonText = (\n                <FormattedMessage\n                    id='admin.plugin.remove'\n                    defaultMessage='Remove'\n                />\n            );\n        }\n        removeButton = (\n            <span>\n                {' - '}\n                <a\n                    data-plugin-id={pluginStatus.id}\n                    disabled={removing}\n                    onClick={handleRemove}\n                >\n                    {removeButtonText}\n                </a>\n            </span>\n        );\n    }\n\n    let description;\n    if (pluginStatus.description) {\n        description = (\n            <div className='padding-top'>\n                {pluginStatus.description}\n            </div>\n        );\n    }\n\n    let prepackagedLabel;\n    if (pluginStatus.is_prepackaged) {\n        prepackagedLabel = (\n            <span>\n                {', '}\n                <FormattedMessage\n                    id='admin.plugin.prepackaged'\n                    defaultMessage='pre-packaged'\n                />\n            </span>\n        );\n    }\n\n    const notices = [];\n    if (pluginStatus.instances.some((instance) => instance.version !== pluginStatus.version)) {\n        notices.push(\n            <div\n                key='multiple-versions'\n                className='alert alert-warning'\n            >\n                <i className='fa fa-warning'/>\n                <FormattedMessage\n                    id='admin.plugin.multiple_versions_warning'\n                    defaultMessage='There are multiple versions of this plugin installed across your cluster. Re-install this plugin to ensure it works consistently.'\n                />\n            </div>\n        );\n    }\n\n    notices.push(\n        <PluginItemStateDescription\n            key='state-description'\n            state={pluginStatus.state}\n        />\n    );\n\n    const instances = pluginStatus.instances.slice();\n    instances.sort((a, b) => {\n        if (a.cluster_id < b.cluster_id) {\n            return -1;\n        } else if (a.cluster_id > b.cluster_id) {\n            return 1;\n        }\n\n        return 0;\n    });\n\n    let clusterSummary;\n    if (showInstances) {\n        clusterSummary = (\n            <div className='padding-top x2 padding-bottom'>\n                <div className='row'>\n                    <div className='col-md-6'>\n                        <strong>\n                            <FormattedMessage\n                                id='admin.plugin.cluster_instance'\n                                defaultMessage='Cluster Instance'\n                            />\n                        </strong>\n                    </div>\n                    <div className='col-md-3'>\n                        <strong>\n                            <FormattedMessage\n                                id='admin.plugin.version_title'\n                                defaultMessage='Version'\n                            />\n                        </strong>\n                    </div>\n                    <div className='col-md-3'>\n                        <strong>\n                            <FormattedMessage\n                                id='admin.plugin.state'\n                                defaultMessage='State'\n                            />\n                        </strong>\n                    </div>\n                </div>\n                {instances.map((instance) => (\n                    <div\n                        key={instance.cluster_id}\n                        className='row'\n                    >\n                        <div className='col-md-6'>\n                            {instance.cluster_id}\n                        </div>\n                        <div className='col-md-3'>\n                            {instance.version}\n                        </div>\n                        <div className='col-md-3'>\n                            <PluginItemState state={instance.state}/>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <div>\n                <strong>{pluginStatus.name}</strong>\n                {' ('}\n                {pluginStatus.id}\n                {' - '}\n                {pluginStatus.version}\n                {prepackagedLabel}\n                {')'}\n            </div>\n            {description}\n            <div className='padding-top'>\n                {activateButton}\n                {removeButton}\n                {settingsButton}\n            </div>\n            <div>\n                {notices}\n            </div>\n            <div>\n                {clusterSummary}\n            </div>\n            <hr/>\n        </div>\n    );\n};\n\nPluginItem.propTypes = {\n    pluginStatus: PropTypes.object.isRequired,\n    removing: PropTypes.bool.isRequired,\n    handleEnable: PropTypes.func.isRequired,\n    handleDisable: PropTypes.func.isRequired,\n    handleRemove: PropTypes.func.isRequired,\n    showInstances: PropTypes.bool.isRequired,\n    hasSettings: PropTypes.bool.isRequired,\n};\n\nexport default class PluginManagement extends AdminSettings {\n    static propTypes = {\n        config: PropTypes.object.isRequired,\n        pluginStatuses: PropTypes.object.isRequired,\n        plugins: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            uploadPlugin: PropTypes.func.isRequired,\n            removePlugin: PropTypes.func.isRequired,\n            getPlugins: PropTypes.func.isRequired,\n            getPluginStatuses: PropTypes.func.isRequired,\n            enablePlugin: PropTypes.func.isRequired,\n            disablePlugin: PropTypes.func.isRequired,\n            installPluginFromUrl: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = Object.assign(this.state, {\n            loading: true,\n            fileSelected: false,\n            file: null,\n            pluginDownloadUrl: '',\n            serverError: null,\n            lastMessage: null,\n            uploading: false,\n            installing: false,\n            overwritingUpload: false,\n            confirmOverwriteUploadModal: false,\n            overwritingInstall: false,\n            confirmOverwriteInstallModal: false,\n            showRemoveModal: false,\n            resolveRemoveModal: null,\n        });\n    }\n\n    getConfigFromState = (config) => {\n        config.PluginSettings.Enable = this.state.enable;\n        config.PluginSettings.EnableUploads = this.state.enableUploads;\n        config.PluginSettings.AllowInsecureDownloadUrl = this.state.allowInsecureDownloadUrl;\n        config.PluginSettings.EnableMarketplace = this.state.enableMarketplace;\n        config.PluginSettings.MarketplaceUrl = this.state.marketplaceUrl;\n        config.PluginSettings.RequirePluginSignature = this.state.requirePluginSignature;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        const state = {\n            enable: config.PluginSettings.Enable,\n            enableUploads: config.PluginSettings.EnableUploads,\n            allowInsecureDownloadUrl: config.PluginSettings.AllowInsecureDownloadUrl,\n            enableMarketplace: config.PluginSettings.EnableMarketplace,\n            marketplaceUrl: config.PluginSettings.MarketplaceUrl,\n            requirePluginSignature: config.PluginSettings.RequirePluginSignature,\n        };\n\n        return state;\n    }\n\n    componentDidMount() {\n        if (this.state.enable) {\n            this.props.actions.getPluginStatuses().then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    handleUpload = () => {\n        this.setState({lastMessage: null, serverError: null});\n        const element = this.refs.fileInput;\n        if (element.files.length > 0) {\n            this.setState({fileSelected: true, file: element.files[0]});\n        }\n    }\n\n    helpSubmitUpload = async (file, force) => {\n        this.setState({uploading: true});\n        const {error} = await this.props.actions.uploadPlugin(file, force);\n\n        if (error) {\n            if (error.server_error_id === 'app.plugin.install_id.app_error' && !force) {\n                this.setState({confirmOverwriteUploadModal: true, overwritingUpload: true});\n                return;\n            }\n            this.setState({\n                file: null,\n                fileSelected: false,\n                uploading: false,\n            });\n            if (error.server_error_id === 'app.plugin.activate.app_error') {\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.activate', 'Unable to upload the plugin. It may conflict with another plugin on your server.')});\n            } else if (error.server_error_id === 'app.plugin.extract.app_error') {\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.extract', 'Encountered an error when extracting the plugin. Review your plugin file content and try again.')});\n            } else {\n                this.setState({serverError: error.message});\n            }\n            this.setState({file: null, fileSelected: false});\n            return;\n        }\n\n        this.setState({loading: true});\n        await this.props.actions.getPlugins();\n\n        let msg = `Successfully uploaded plugin from ${file.name}`;\n        if (this.state.overwritingUpload) {\n            msg = `Successfully updated plugin from ${file.name}`;\n        }\n\n        this.setState({\n            file: null,\n            fileSelected: false,\n            serverError: null,\n            lastMessage: msg,\n            overwritingUpload: false,\n            uploading: false,\n            loading: false,\n        });\n    }\n\n    handleSubmitUpload = (e) => {\n        e.preventDefault();\n\n        const element = this.refs.fileInput;\n        if (element.files.length === 0) {\n            return;\n        }\n        const file = element.files[0];\n\n        this.helpSubmitUpload(file, false);\n        Utils.clearFileInput(element);\n    }\n\n    handleOverwriteUploadPluginCancel = () => {\n        this.setState({\n            file: null,\n            fileSelected: false,\n            serverError: null,\n            confirmOverwriteUploadModal: false,\n            lastMessage: null,\n            uploading: false,\n        });\n    }\n\n    handleOverwriteUploadPlugin = () => {\n        this.setState({confirmOverwriteUploadModal: false});\n        this.helpSubmitUpload(this.state.file, true);\n    }\n\n    onPluginDownloadUrlChange = (e) => {\n        this.setState({\n            pluginDownloadUrl: e.target.value,\n        });\n    }\n\n    installFromUrl = async (force) => {\n        const {pluginDownloadUrl} = this.state;\n\n        this.setState({\n            installing: true,\n            serverError: null,\n            lastMessage: null,\n        });\n        const {error} = await this.props.actions.installPluginFromUrl(pluginDownloadUrl, force);\n\n        if (error) {\n            if (error.server_error_id === 'app.plugin.install_id.app_error' && !force) {\n                this.setState({confirmOverwriteInstallModal: true, overwritingInstall: true});\n                return;\n            }\n\n            this.setState({\n                installing: false,\n            });\n\n            if (error.server_error_id === 'app.plugin.extract.app_error') {\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.extract', 'Encountered an error when extracting the plugin. Review your plugin file content and try again.')});\n            } else {\n                this.setState({serverError: error.message});\n            }\n            return;\n        }\n\n        this.setState({loading: true});\n        await this.props.actions.getPlugins();\n\n        let msg = `Successfully installed plugin from ${pluginDownloadUrl}`;\n        if (this.state.overwritingInstall) {\n            msg = `Successfully updated plugin from ${pluginDownloadUrl}`;\n        }\n\n        this.setState({\n            serverError: null,\n            lastMessage: msg,\n            overwritingInstall: false,\n            installing: false,\n            loading: false,\n        });\n    }\n\n    getMarketplaceUrlHelpText = (url) => {\n        return (\n            <div>\n                {\n                    url === '' &&\n                    <div className='alert-warning'>\n                        <i className='fa fa-warning'/>\n                        <FormattedMarkdownMessage\n                            id='admin.plugins.settings.marketplaceUrlDesc.empty'\n                            defaultMessage=' Marketplace URL is a required field.'\n                        />\n                    </div>\n                }\n                {\n                    url !== '' &&\n                    <FormattedMarkdownMessage\n                        id='admin.plugins.settings.marketplaceUrlDesc'\n                        defaultMessage='URL of the marketplace server.'\n                    />\n                }\n            </div>\n        );\n    }\n\n    canSave = () => {\n        return this.state.marketplaceUrl !== '';\n    }\n\n    handleSubmitInstall = (e) => {\n        e.preventDefault();\n        return this.installFromUrl(false);\n    }\n\n    handleOverwriteInstallPluginCancel = () => {\n        this.setState({\n            confirmOverwriteInstallModal: false,\n            installing: false,\n            serverError: null,\n            lastMessage: null,\n        });\n    }\n\n    handleOverwriteInstallPlugin = () => {\n        this.setState({confirmOverwriteInstallModal: false});\n        return this.installFromUrl(true);\n    }\n\n    showRemovePluginModal = (e) => {\n        e.preventDefault();\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\n        this.setState({showRemoveModal: true, removing: pluginId});\n    }\n\n    handleRemovePluginCancel = () => {\n        this.setState({showRemoveModal: false, removing: null});\n    }\n\n    handleRemovePlugin = () => {\n        this.setState({showRemoveModal: false});\n        this.handleRemove();\n    }\n\n    handleRemove = async () => {\n        this.setState({lastMessage: null, serverError: null});\n        const {error} = await this.props.actions.removePlugin(this.state.removing);\n        this.setState({removing: null});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    handleEnable = async (e) => {\n        e.preventDefault();\n        this.setState({lastMessage: null, serverError: null});\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\n\n        const {error} = await this.props.actions.enablePlugin(pluginId);\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    handleDisable = async (e) => {\n        this.setState({lastMessage: null, serverError: null});\n        e.preventDefault();\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\n\n        const {error} = await this.props.actions.disablePlugin(pluginId);\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.plugin.management.title'\n                defaultMessage='Management'\n            />\n        );\n    }\n\n    renderOverwritePluginModal = ({show, onConfirm, onCancel}) => {\n        const title = (\n            <FormattedMessage\n                id='admin.plugin.upload.overwrite_modal.title'\n                defaultMessage='Overwrite existing plugin?'\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='admin.plugin.upload.overwrite_modal.desc'\n                defaultMessage='A plugin with this ID already exists. Would you like to overwrite it?'\n            />\n        );\n\n        const overwriteButton = (\n            <FormattedMessage\n                id='admin.plugin.upload.overwrite_modal.overwrite'\n                defaultMessage='Overwrite'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={overwriteButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n\n    renderRemovePluginModal = ({show, onConfirm, onCancel}) => {\n        const title = (\n            <FormattedMessage\n                id='admin.plugin.remove_modal.title'\n                defaultMessage='Remove plugin?'\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='admin.plugin.remove_modal.desc'\n                defaultMessage='Are you sure you would like to remove the plugin?'\n            />\n        );\n\n        const removeButton = (\n            <FormattedMessage\n                id='admin.plugin.remove_modal.overwrite'\n                defaultMessage='Remove'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={removeButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n\n    renderEnablePluginsSetting = () => {\n        const hideEnablePlugins = this.props.config.ExperimentalSettings.RestrictSystemAdmin;\n        if (!hideEnablePlugins) {\n            return (\n                <BooleanSetting\n                    id='enable'\n                    label={\n                        <FormattedMessage\n                            id='admin.plugins.settings.enable'\n                            defaultMessage='Enable Plugins: '\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.plugins.settings.enableDesc'\n                            defaultMessage='When true, enables plugins on your Mattermost server. Use plugins to integrate with third-party systems, extend functionality, or customize the user interface of your Mattermost server. See [documentation](https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                        />\n                    }\n                    value={this.state.enable}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('PluginSettings.Enable')}\n                />\n            );\n        }\n        return null;\n    }\n\n    renderSettings = () => {\n        const {enableUploads} = this.state;\n        const enable = this.props.config.PluginSettings.Enable;\n        let serverError = '';\n        let lastMessage = '';\n\n        // Using props values to make sure these are set on the server and not just locally\n        const enableUploadButton = enableUploads && enable && !this.props.config.PluginSettings.RequirePluginSignature;\n\n        if (this.state.serverError) {\n            serverError = <div className='col-sm-12'><div className='form-group has-error half'><label className='control-label'>{this.state.serverError}</label></div></div>;\n        }\n        if (this.state.lastMessage) {\n            lastMessage = <div className='col-sm-12'><div className='form-group half'>{this.state.lastMessage}</div></div>;\n        }\n\n        let btnClass = 'btn';\n        if (this.state.fileSelected) {\n            btnClass = 'btn btn-primary';\n        }\n\n        let fileName;\n        if (this.state.file) {\n            fileName = this.state.file.name;\n        }\n\n        let uploadButtonText;\n        if (this.state.uploading) {\n            uploadButtonText = (\n                <FormattedMessage\n                    id='admin.plugin.uploading'\n                    defaultMessage='Uploading...'\n                />\n            );\n        } else {\n            uploadButtonText = (\n                <FormattedMessage\n                    id='admin.plugin.upload'\n                    defaultMessage='Upload'\n                />\n            );\n        }\n\n        let pluginsList;\n        let pluginsContainer;\n        let pluginsListContainer;\n        const plugins = Object.values(this.props.pluginStatuses);\n        if (this.state.loading) {\n            pluginsList = <LoadingScreen/>;\n        } else if (plugins.length === 0) {\n            pluginsListContainer = (\n                <FormattedMessage\n                    id='admin.plugin.no_plugins'\n                    defaultMessage='No installed plugins.'\n                />\n            );\n        } else {\n            const showInstances = plugins.some((pluginStatus) => pluginStatus.instances.length > 1);\n            plugins.sort((a, b) => {\n                if (a.name < b.name) {\n                    return -1;\n                } else if (a.name > b.name) {\n                    return 1;\n                }\n\n                return 0;\n            });\n\n            pluginsList = plugins.map((pluginStatus) => {\n                const p = this.props.plugins[pluginStatus.id];\n                const hasSettings = Boolean(p && p.settings_schema && (p.settings_schema.header || p.settings_schema.footer || (p.settings_schema.settings && p.settings_schema.settings.length > 0)));\n                return (\n                    <PluginItem\n                        key={pluginStatus.id}\n                        pluginStatus={pluginStatus}\n                        removing={this.state.removing === pluginStatus.id}\n                        handleEnable={this.handleEnable}\n                        handleDisable={this.handleDisable}\n                        handleRemove={this.showRemovePluginModal}\n                        showInstances={showInstances}\n                        hasSettings={hasSettings}\n                    />\n                );\n            });\n\n            pluginsListContainer = (\n                <div className='alert alert-transparent'>\n                    {pluginsList}\n                </div>\n            );\n        }\n\n        if (enable) {\n            pluginsContainer = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                    >\n                        <FormattedMessage\n                            id='admin.plugin.installedTitle'\n                            defaultMessage='Installed Plugins: '\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <p className='help-text'>\n                            <FormattedHTMLMessage\n                                id='admin.plugin.installedDesc'\n                                defaultMessage='Installed plugins on your Mattermost server. Pre-packaged plugins are installed by default, and can be disabled but not removed.'\n                            />\n                        </p>\n                        <br/>\n                        {pluginsListContainer}\n                    </div>\n                </div>\n            );\n        }\n\n        let uploadHelpText;\n\n        if (enableUploads && enable) {\n            uploadHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.plugin.uploadDesc'\n                    defaultMessage='Upload a plugin for your Mattermost server. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                />\n            );\n        } else if (enable && !enableUploads) {\n            uploadHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.plugin.uploadDisabledDesc'\n                    defaultMessage='Enable plugin uploads in config.json. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                />\n            );\n        } else {\n            uploadHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.plugin.uploadAndPluginDisabledDesc'\n                    defaultMessage='To enable plugins, set **Enable Plugins** to true. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                />\n            );\n        }\n\n        const overwriteUploadPluginModal = this.state.confirmOverwriteUploadModal && this.renderOverwritePluginModal({\n            show: this.state.confirmOverwriteUploadModal,\n            onConfirm: this.handleOverwriteUploadPlugin,\n            onCancel: this.handleOverwriteUploadPluginCancel,\n        });\n\n        const removePluginModal = this.state.showRemoveModal && this.renderRemovePluginModal({\n            show: this.state.showRemoveModal,\n            onConfirm: this.handleRemovePlugin,\n            onCancel: this.handleRemovePluginCancel,\n        });\n\n        return (\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    <SettingsGroup\n                        id={'PluginSettings'}\n                        container={false}\n                    >\n                        {this.renderEnablePluginsSetting()}\n\n                        <BooleanSetting\n                            id='requirePluginSignature'\n                            label={\n                                <FormattedMessage\n                                    id='admin.plugins.settings.requirePluginSignature'\n                                    defaultMessage='Require Plugin Signature:'\n                                />\n                            }\n                            helpText={\n                                <FormattedMarkdownMessage\n                                    id='admin.plugins.settings.requirePluginSignatureDesc'\n                                    defaultMessage='When true, uploading plugins is disabled and may only be installed through the Marketplace. Plugins are always verified during Mattermost server startup and initialization. See [documentation](!https://mattermost.com/pl/default-plugin-signing) to learn more.'\n                                />\n                            }\n                            value={this.state.requirePluginSignature}\n                            disabled={!this.state.enable}\n                            onChange={this.handleChange}\n                            setByEnv={this.isSetByEnv('PluginSettings.RequirePluginSignature')}\n                        />\n\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                            >\n                                <FormattedMessage\n                                    id='admin.plugin.uploadTitle'\n                                    defaultMessage='Upload Plugin: '\n                                />\n                            </label>\n                            <div className='col-sm-8'>\n                                <div className='file__upload'>\n                                    <button\n                                        className={classNames(['btn', {'btn-primary': enableUploads}])}\n                                        disabled={!enableUploadButton}\n                                    >\n                                        <FormattedMessage\n                                            id='admin.plugin.choose'\n                                            defaultMessage='Choose File'\n                                        />\n                                    </button>\n                                    <input\n                                        ref='fileInput'\n                                        type='file'\n                                        accept='.gz'\n                                        onChange={this.handleUpload}\n                                        disabled={!enableUploadButton}\n                                    />\n                                </div>\n                                <button\n                                    className={btnClass}\n                                    disabled={!this.state.fileSelected}\n                                    onClick={this.handleSubmitUpload}\n                                >\n                                    {uploadButtonText}\n                                </button>\n                                <div className='help-text no-margin'>\n                                    {fileName}\n                                </div>\n                                {serverError}\n                                {lastMessage}\n                                <p className='help-text'>\n                                    {uploadHelpText}\n                                </p>\n                            </div>\n                        </div>\n                        <BooleanSetting\n                            id='enableMarketplace'\n                            label={\n                                <FormattedMessage\n                                    id='admin.plugins.settings.enableMarketplace'\n                                    defaultMessage='Enable Marketplace:'\n                                />\n                            }\n                            helpText={\n                                <FormattedMarkdownMessage\n                                    id='admin.plugins.settings.enableMarketplaceDesc'\n                                    defaultMessage='When true, enables System Administrators to install plugins from the [marketplace](!https://mattermost.com/pl/default-mattermost-marketplace.html).'\n                                />\n                            }\n                            value={this.state.enableMarketplace}\n                            disabled={!this.state.enable}\n                            onChange={this.handleChange}\n                            setByEnv={this.isSetByEnv('PluginSettings.EnableMarketplace')}\n                        />\n\n                        <TextSetting\n                            id={'marketplaceUrl'}\n                            type={'input'}\n                            label={\n                                <FormattedMessage\n                                    id='admin.plugins.settings.marketplaceUrl'\n                                    defaultMessage='Marketplace URL:'\n                                />\n                            }\n                            helpText={this.getMarketplaceUrlHelpText(this.state.marketplaceUrl)}\n                            value={this.state.marketplaceUrl}\n                            disabled={!this.state.enable || !this.state.enableMarketplace}\n                            onChange={this.handleChange}\n                            setByEnv={this.isSetByEnv('PluginSettings.MarketplaceUrl')}\n                        />\n                        {pluginsContainer}\n                    </SettingsGroup>\n                    {overwriteUploadPluginModal}\n                    {removePluginModal}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport AdminSettings from './admin_settings';\nimport DropdownSetting from './dropdown_setting.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nconst PUSH_NOTIFICATIONS_OFF = 'off';\nconst PUSH_NOTIFICATIONS_MHPNS = 'mhpns';\nconst PUSH_NOTIFICATIONS_MTPNS = 'mtpns';\nconst PUSH_NOTIFICATIONS_CUSTOM = 'custom';\n\nexport default class PushSettings extends AdminSettings {\n    canSave = () => {\n        return this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_MHPNS || this.state.agree;\n    }\n\n    handleAgreeChange = (e) => {\n        this.setState({\n            agree: e.target.checked,\n        });\n    }\n\n    handleDropdownChange = (id, value) => {\n        if (id === 'pushNotificationServerType') {\n            this.setState({\n                agree: false,\n            });\n\n            if (value === PUSH_NOTIFICATIONS_MHPNS) {\n                this.setState({\n                    pushNotificationServer: Constants.MHPNS,\n                });\n            } else if (value === PUSH_NOTIFICATIONS_MTPNS) {\n                this.setState({\n                    pushNotificationServer: Constants.MTPNS,\n                });\n            } else if (value === PUSH_NOTIFICATIONS_CUSTOM &&\n                (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS ||\n                this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS)) {\n                this.setState({\n                    pushNotificationServer: '',\n                });\n            }\n        }\n\n        this.handleChange(id, value);\n    }\n\n    getConfigFromState = (config) => {\n        config.EmailSettings.SendPushNotifications = this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_OFF;\n        config.EmailSettings.PushNotificationServer = this.state.pushNotificationServer.trim();\n        config.TeamSettings.MaxNotificationsPerChannel = this.state.maxNotificationsPerChannel;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        let pushNotificationServerType = PUSH_NOTIFICATIONS_CUSTOM;\n        let agree = false;\n        if (!config.EmailSettings.SendPushNotifications) {\n            pushNotificationServerType = PUSH_NOTIFICATIONS_OFF;\n        } else if (config.EmailSettings.PushNotificationServer === Constants.MHPNS &&\n            this.props.license.IsLicensed === 'true' && this.props.license.MHPNS === 'true') {\n            pushNotificationServerType = PUSH_NOTIFICATIONS_MHPNS;\n            agree = true;\n        } else if (config.EmailSettings.PushNotificationServer === Constants.MTPNS) {\n            pushNotificationServerType = PUSH_NOTIFICATIONS_MTPNS;\n        }\n\n        let pushNotificationServer = config.EmailSettings.PushNotificationServer;\n        if (pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS) {\n            pushNotificationServer = Constants.MTPNS;\n        } else if (pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\n            pushNotificationServer = Constants.MHPNS;\n        }\n\n        const maxNotificationsPerChannel = config.TeamSettings.MaxNotificationsPerChannel;\n\n        return {\n            pushNotificationServerType,\n            pushNotificationServer,\n            maxNotificationsPerChannel,\n            agree,\n        };\n    }\n\n    isPushNotificationServerSetByEnv = () => {\n        // Assume that if one of these has been set using an environment variable,\n        // all of them have been set that way\n        return this.isSetByEnv('EmailSettings.SendPushNotifications') ||\n            this.isSetByEnv('EmailSettings.PushNotificationServer');\n    };\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.environment.pushNotificationServer'\n                defaultMessage='Push Notification Server'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const pushNotificationServerTypes = [];\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_OFF, text: Utils.localizeMessage('admin.email.pushOff', 'Do not send push notifications')});\n        if (this.props.license.IsLicensed === 'true' && this.props.license.MHPNS === 'true') {\n            pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_MHPNS, text: Utils.localizeMessage('admin.email.mhpns', 'Use HPNS connection with uptime SLA to send notifications to iOS and Android apps')});\n        }\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_MTPNS, text: Utils.localizeMessage('admin.email.mtpns', 'Use TPNS connection to send notifications to iOS and Android apps')});\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_CUSTOM, text: Utils.localizeMessage('admin.email.selfPush', 'Manually enter Push Notification Service location')});\n\n        let sendHelpText = null;\n        let pushServerHelpText = null;\n        if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_OFF) {\n            sendHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.pushOffHelp'\n                    defaultMessage='Please see [documentation on push notifications](!https://about.mattermost.com/default-mobile-push-notifications/) to learn more about setup options.'\n                />\n            );\n        } else if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\n            pushServerHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.mhpnsHelp'\n                    defaultMessage='Download [Mattermost iOS app](!https://about.mattermost.com/mattermost-ios-app/) from iTunes. Download [Mattermost Android app](!https://about.mattermost.com/mattermost-android-app/) from Google Play. Learn more about the [Mattermost Hosted Push Notification Service](!https://about.mattermost.com/default-hpns/).'\n                />\n            );\n        } else if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS) {\n            pushServerHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.mtpnsHelp'\n                    defaultMessage='Download [Mattermost iOS app](!https://about.mattermost.com/mattermost-ios-app/) from iTunes. Download [Mattermost Android app](!https://about.mattermost.com/mattermost-android-app/) from Google Play. Learn more about the [Mattermost Test Push Notification Service](!https://about.mattermost.com/default-tpns/).'\n                />\n            );\n        } else {\n            pushServerHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.easHelp'\n                    defaultMessage='Learn more about compiling and deploying your own mobile apps from an [Enterprise App Store](!https://about.mattermost.com/default-enterprise-app-store).'\n                />\n            );\n        }\n\n        let tosCheckbox;\n        if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\n            tosCheckbox = (\n                <div className='form-group'>\n                    <div className='col-sm-4'/>\n                    <div className='col-sm-8'>\n                        <input\n                            type='checkbox'\n                            ref='agree'\n                            checked={this.state.agree}\n                            onChange={this.handleAgreeChange}\n                        />\n                        <FormattedMarkdownMessage\n                            id='admin.email.agreeHPNS'\n                            defaultMessage=' I understand and accept the Mattermost Hosted Push Notification Service [Terms of Service](!https://about.mattermost.com/hpns-terms/) and [Privacy Policy](!https://about.mattermost.com/hpns-privacy/).'\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <SettingsGroup>\n                <DropdownSetting\n                    id='pushNotificationServerType'\n                    values={pushNotificationServerTypes}\n                    label={\n                        <FormattedMessage\n                            id='admin.email.pushTitle'\n                            defaultMessage='Enable Push Notifications: '\n                        />\n                    }\n                    value={this.state.pushNotificationServerType}\n                    onChange={this.handleDropdownChange}\n                    helpText={sendHelpText}\n                    setByEnv={this.isPushNotificationServerSetByEnv()}\n                />\n                {tosCheckbox}\n                <TextSetting\n                    id='pushNotificationServer'\n                    label={\n                        <FormattedMessage\n                            id='admin.email.pushServerTitle'\n                            defaultMessage='Push Notification Server:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.email.pushServerEx', 'E.g.: \"https://push-test.mattermost.com\"')}\n                    helpText={pushServerHelpText}\n                    value={this.state.pushNotificationServer}\n                    onChange={this.handleChange}\n                    disabled={this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_CUSTOM}\n                    setByEnv={this.isSetByEnv('EmailSettings.PushNotificationServer')}\n                />\n                <TextSetting\n                    id='maxNotificationsPerChannel'\n                    type='number'\n                    label={\n                        <FormattedMessage\n                            id='admin.team.maxNotificationsPerChannelTitle'\n                            defaultMessage='Max Notifications Per Channel:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.team.maxNotificationsPerChannelExample', 'E.g.: \"1000\"')}\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.team.maxNotificationsPerChannelDescription'\n                            defaultMessage='Maximum total number of users in a channel before users typing messages, @all, @here, and @channel no longer send notifications because of performance.'\n                        />\n                    }\n                    value={this.state.maxNotificationsPerChannel}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('TeamSettings.MaxNotificationsPerChannel')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport Setting from './setting';\n\ninterface Props {\n    id: string;\n    label: React.ReactNode;\n    values: { text: string; value: string }[];\n    value: string;\n    setByEnv: boolean;\n    disabled?: boolean;\n    helpText?: React.ReactNode;\n    onChange(id: string, value: any): void;\n}\nexport default class RadioSetting extends React.Component<Props> {\n    public static defaultProps: Partial<Props> = {\n        disabled: false,\n    };\n\n    private handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(this.props.id, e.target.value);\n    };\n\n    render(): JSX.Element {\n        const options = [];\n        for (const {value, text} of this.props.values) {\n            options.push(\n                <div\n                    className='radio'\n                    key={value}\n                >\n                    <label>\n                        <input\n                            type='radio'\n                            value={value}\n                            name={this.props.id}\n                            checked={value === this.props.value}\n                            onChange={this.handleChange}\n                            disabled={this.props.disabled || this.props.setByEnv}\n                        />\n                        {text}\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                inputId={this.props.id}\n                helpText={this.props.helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                {options}\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Setting from './setting';\n\nexport default class RemoveFileSetting extends Setting {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            label: PropTypes.node.isRequired,\n            helpText: PropTypes.node,\n            removeButtonText: PropTypes.node.isRequired,\n            removingText: PropTypes.node,\n            fileName: PropTypes.string.isRequired,\n            onSubmit: PropTypes.func.isRequired,\n            disabled: PropTypes.bool,\n        };\n    }\n\n    handleRemove = (e) => {\n        e.preventDefault();\n\n        $(this.refs.remove_button).button('loading');\n        this.props.onSubmit(this.props.id, () => {\n            $(this.refs.remove_button).button('reset');\n        });\n    }\n\n    render() {\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div>\n                    <div className='help-text remove-filename'>\n                        {this.props.fileName}\n                    </div>\n                    <button\n                        className='btn btn-danger'\n                        onClick={this.handleRemove}\n                        ref='remove_button'\n                        disabled={this.props.disabled}\n                        data-loading-text={`<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span> ${this.props.removingText}`}\n                    >\n                        {this.props.removeButtonText}\n                    </button>\n                </div>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\nimport SuccessIcon from 'components/widgets/icons/fa_success_icon';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\n/**\n * A button which, when clicked, performs an action and displays\n * its outcome as either success, or failure accompanied by the\n * `message` property of the `err` object.\n */\nexport default class RequestButton extends React.Component {\n    static propTypes = {\n\n        /**\n         * TD to assign to the form\n         */\n        id: PropTypes.string,\n\n        /**\n         * The action to be called to carry out the request.\n         */\n        requestAction: PropTypes.func.isRequired,\n\n        /**\n         * A component that displays help text for the request button.\n         *\n         * Typically, this will be a <FormattedMessage/>.\n         */\n        helpText: PropTypes.element,\n\n        /**\n         * A component to be displayed on the button.\n         *\n         * Typically, this will be a <FormattedMessage/>\n         */\n        loadingText: PropTypes.string,\n\n        /**\n         * A component to be displayed on the button.\n         *\n         * Typically, this will be a <FormattedMessage/>\n         */\n        buttonText: PropTypes.element.isRequired,\n\n        /**\n         * The element to display as the field label.\n         *\n         * Typically, this will be a <FormattedMessage/>\n         */\n        label: PropTypes.element,\n\n        /**\n         * True if the button form control should be disabled, otherwise false.\n         */\n        disabled: PropTypes.bool,\n\n        /**\n         * True if the config needs to be saved before running the request, otherwise false.\n         *\n         * If set to true, the action provided in the `saveConfigAction` property will be\n         * called before the action provided in the `requestAction` property, with the later\n         * only being called if the former is successful.\n         */\n        saveNeeded: PropTypes.bool,\n\n        /**\n         * Action to be called to save the config, if saveNeeded is set to true.\n         */\n        saveConfigAction: PropTypes.func,\n\n        /**\n         * True if the success message should be show when the request completes successfully,\n         * otherwise false.\n         */\n        showSuccessMessage: PropTypes.bool,\n\n        /**\n         * The message to show when the request completes successfully.\n         */\n        successMessage: PropTypes.shape({\n\n            /**\n             * The i18n string ID for the success message.\n             */\n            id: PropTypes.string.isRequired,\n\n            /**\n             * The i18n default value for the success message.\n             */\n            defaultMessage: PropTypes.string.isRequired,\n        }),\n\n        /**\n         * The message to show when the request returns an error.\n         */\n        errorMessage: PropTypes.shape({\n\n            /**\n             * The i18n string ID for the error message.\n             */\n            id: PropTypes.string.isRequired,\n\n            /**\n             * The i18n default value for the error message.\n             *\n             * The placeholder {error} may be used to include the error message returned\n             * by the server in response to the failed request.\n             */\n            defaultMessage: PropTypes.string.isRequired,\n        }),\n\n        /**\n         * True if the {error} placeholder for the `errorMessage` property should include both\n         * the `message` and `detailed_error` properties of the error returned from the server,\n         * otherwise false to include only the `message` property.\n         */\n        includeDetailedError: PropTypes.bool,\n\n        /**\n         * An element to display adjacent to the request button.\n         */\n        alternativeActionElement: PropTypes.element,\n    }\n\n    static defaultProps = {\n        id: null,\n        disabled: false,\n        saveNeeded: false,\n        showSuccessMessage: true,\n        includeDetailedError: false,\n        successMessage: {\n            id: t('admin.requestButton.requestSuccess'),\n            defaultMessage: 'Test Successful',\n        },\n        errorMessage: {\n            id: t('admin.requestButton.requestFailure'),\n            defaultMessage: 'Test Failure: {error}',\n        },\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            busy: false,\n            fail: null,\n            success: false,\n        };\n    }\n\n    handleRequest = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            busy: true,\n            fail: null,\n            success: false,\n        });\n\n        const doRequest = () => { //eslint-disable-line func-style\n            this.props.requestAction(\n                () => {\n                    this.setState({\n                        busy: false,\n                        success: true,\n                    });\n                },\n                (err) => {\n                    let errMsg = err.message;\n                    if (this.props.includeDetailedError && err.detailed_error) {\n                        errMsg += ' - ' + err.detailed_error;\n                    }\n\n                    this.setState({\n                        busy: false,\n                        fail: errMsg,\n                    });\n                }\n            );\n        };\n\n        if (this.props.saveNeeded) {\n            this.props.saveConfigAction(doRequest);\n        } else {\n            doRequest();\n        }\n    }\n\n    render() {\n        let message = null;\n        if (this.state.fail) {\n            message = (\n                <div>\n                    <div className='alert alert-warning'>\n                        <WarningIcon/>\n                        <FormattedMessage\n                            id={this.props.errorMessage.id}\n                            defaultMessage={this.props.errorMessage.defaultMessage}\n                            values={{\n                                error: this.state.fail,\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n        } else if (this.state.success && this.props.showSuccessMessage) {\n            message = (\n                <div>\n                    <div className='alert alert-success'>\n                        <SuccessIcon/>\n                        <FormattedMessage\n                            id={this.props.successMessage.id}\n                            defaultMessage={this.props.successMessage.defaultMessage}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        let widgetClassNames = 'col-sm-8';\n        let label = null;\n        if (this.props.label) {\n            label = (\n                <label\n                    className='control-label col-sm-4'\n                >\n                    {this.props.label}\n                </label>\n            );\n        } else {\n            widgetClassNames = 'col-sm-offset-4 ' + widgetClassNames;\n        }\n\n        return (\n            <div\n                className='form-group'\n                id={this.props.id}\n            >\n                {label}\n                <div className={widgetClassNames}>\n                    <div>\n                        <button\n                            className='btn btn-default'\n                            onClick={this.handleRequest}\n                            disabled={this.props.disabled}\n                        >\n                            <LoadingWrapper\n                                loading={this.state.busy}\n                                text={this.props.loadingText || Utils.localizeMessage('admin.requestButton.loading', ' Loading...')}\n                            >\n                                {this.props.buttonText}\n                            </LoadingWrapper>\n                        </button>\n                        {this.props.alternativeActionElement}\n                        {message}\n                    </div>\n                    <div className='help-text'>\n                        {this.props.helpText}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport {adminResetEmail} from 'actions/admin_actions.jsx';\n\nexport default class ResetEmailModal extends React.Component {\n    static propTypes = {\n        user: PropTypes.object,\n        show: PropTypes.bool.isRequired,\n        onModalSubmit: PropTypes.func,\n        onModalDismissed: PropTypes.func,\n        passwordConfig: PropTypes.object,\n    };\n\n    static defaultProps = {\n        show: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: null,\n        };\n    }\n\n    doSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.refs.email) {\n            const email = this.refs.email.value;\n            if (!isEmail(email)) {\n                const errMsg = (\n                    <FormattedMessage\n                        id='user.settings.general.validEmail'\n                        defaultMessage='Please enter a valid email address.'\n                    />\n                );\n                this.setState({error: errMsg});\n                return;\n            }\n        }\n\n        const user = Object.assign({}, this.props.user);\n        const email = this.refs.email.value.trim().toLowerCase();\n        user.email = email;\n\n        this.setState({error: null});\n\n        adminResetEmail(\n            user,\n            () => {\n                this.props.onModalSubmit(this.props.user);\n            },\n            (err) => {\n                const serverError = err.message ? err.message : err;\n                this.setState({error: serverError});\n            }\n        );\n    }\n\n    doCancel = () => {\n        this.setState({error: null});\n        this.props.onModalDismissed();\n    }\n\n    render() {\n        if (!this.props.user) {\n            return <div/>;\n        }\n\n        let urlClass = 'input-group input-group--limit';\n        let errorMsg = null;\n        if (this.state.error) {\n            urlClass += ' has-error';\n            errorMsg = <div className='has-error'><p className='input__help error'>{this.state.error}</p></div>;\n        }\n\n        const title = (\n            <FormattedMessage\n                id='admin.reset_email.titleReset'\n                defaultMessage='Update Email'\n            />\n        );\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal'\n                show={this.props.show}\n                onHide={this.doCancel}\n                role='dialog'\n                aria-labelledby='resetEmailModalLabel'\n                data-testid='resetEmailModal'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='resetEmailModalLabel'\n                    >\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n                <form\n                    role='form'\n                    className='form-horizontal'\n                >\n                    <Modal.Body>\n                        <div className='form-group'>\n                            <div className='col-sm-10'>\n                                <div\n                                    className={urlClass}\n                                    data-testid='resetEmailForm'\n                                >\n                                    <span\n                                        data-toggle='tooltip'\n                                        title='New Email'\n                                        className='input-group-addon email__group-addon'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.reset_email.newEmail'\n                                            defaultMessage='New Email'\n                                        />\n                                    </span>\n                                    <input\n                                        type='email'\n                                        ref='email'\n                                        className='form-control'\n                                        maxLength='128'\n                                        autoFocus={true}\n                                    />\n                                </div>\n                                {errorMsg}\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type='button'\n                            className='btn btn-link'\n                            onClick={this.doCancel}\n                        >\n                            <FormattedMessage\n                                id='admin.reset_email.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </button>\n                        <button\n                            onClick={this.doSubmit}\n                            type='submit'\n                            className='btn btn-primary'\n                            data-testid='resetEmailButton'\n                        >\n                            <FormattedMessage\n                                id='admin.reset_email.reset'\n                                defaultMessage='Reset'\n                            />\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport {getPasswordConfig} from 'utils/utils.jsx';\n\nimport ResetPasswordModal from './reset_password_modal.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        currentUserId: getCurrentUserId(state),\n        passwordConfig: getPasswordConfig(config),\n    };\n}\n\nexport default connect(mapStateToProps)(ResetPasswordModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {adminResetPassword} from 'actions/admin_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ResetPasswordModal extends React.Component {\n    static propTypes = {\n        user: PropTypes.object,\n        currentUserId: PropTypes.string.isRequired,\n        show: PropTypes.bool.isRequired,\n        onModalSubmit: PropTypes.func,\n        onModalDismissed: PropTypes.func,\n        passwordConfig: PropTypes.object,\n    };\n\n    static defaultProps = {\n        show: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverErrorNewPass: null,\n            serverErrorCurrentPass: null,\n        };\n    }\n\n    componentWillUnmount() {\n        this.setState({\n            serverErrorNewPass: null,\n            serverErrorCurrentPass: null,\n        });\n    }\n\n    doSubmit = (e) => {\n        e.preventDefault();\n        let currentPassword = '';\n        if (this.refs.currentPassword) {\n            currentPassword = this.refs.currentPassword.value;\n            if (currentPassword === '') {\n                let errorMsg = '';\n                errorMsg = (\n                    <FormattedMessage\n                        id='admin.reset_password.missing_current'\n                        defaultMessage='Please enter your current password.'\n                    />\n                );\n                this.setState({serverErrorCurrentPass: errorMsg});\n                return;\n            }\n        }\n\n        const password = this.refs.password.value;\n\n        const {valid, error} = Utils.isValidPassword(password, this.props.passwordConfig);\n        if (!valid && error) {\n            this.setState({serverErrorNewPass: error});\n            return;\n        }\n\n        this.setState({serverErrorNewPass: null});\n\n        adminResetPassword(\n            this.props.user.id,\n            currentPassword,\n            password,\n            () => {\n                this.props.onModalSubmit(this.props.user);\n            },\n            (err) => {\n                this.setState({serverErrorCurrentPass: err.message});\n            }\n        );\n    }\n\n    doCancel = () => {\n        this.setState({\n            serverErrorNewPass: null,\n            serverErrorCurrentPass: null,\n        });\n        this.props.onModalDismissed();\n    }\n\n    render() {\n        const user = this.props.user;\n        if (user == null) {\n            return <div/>;\n        }\n\n        let urlClass = 'input-group input-group--limit';\n        let serverErrorNewPass = null;\n\n        if (this.state.serverErrorNewPass) {\n            urlClass += ' has-error';\n            serverErrorNewPass = <div className='has-error'><p className='input__help error'>{this.state.serverErrorNewPass}</p></div>;\n        }\n\n        let title;\n        if (user.auth_service) {\n            title = (\n                <FormattedMessage\n                    id='admin.reset_password.titleSwitch'\n                    defaultMessage='Switch Account to Email/Password'\n                />\n            );\n        } else {\n            title = (\n                <FormattedMessage\n                    id='admin.reset_password.titleReset'\n                    defaultMessage='Reset Password'\n                />\n            );\n        }\n\n        let currentPassword = null;\n        let serverErrorCurrentPass = null;\n        let newPasswordFocus = true;\n        if (this.props.currentUserId === user.id) {\n            newPasswordFocus = false;\n            let urlClassCurrentPass = 'input-group input-group--limit';\n            if (this.state.serverErrorCurrentPass) {\n                urlClassCurrentPass += ' has-error';\n                serverErrorCurrentPass = <div className='has-error'><p className='input__help error'>{this.state.serverErrorCurrentPass}</p></div>;\n            }\n            currentPassword = (\n                <div className='col-sm-10 password__group-addon-space'>\n                    <div className={urlClassCurrentPass}>\n                        <span\n                            data-toggle='tooltip'\n                            title='Current Password'\n                            className='input-group-addon password__group-addon'\n                        >\n                            <FormattedMessage\n                                id='admin.reset_password.curentPassword'\n                                defaultMessage='Current Password'\n                            />\n                        </span>\n                        <input\n                            type='password'\n                            ref='currentPassword'\n                            className='form-control'\n                            autoFocus={true}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal'\n                show={this.props.show}\n                onHide={this.doCancel}\n                role='dialog'\n                aria-labelledby='resetPasswordModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='resetPasswordModalLabel'\n                    >\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n                <form\n                    role='form'\n                    className='form-horizontal'\n                >\n                    <Modal.Body>\n                        <div className='form-group'>\n                            {currentPassword}\n                            <div className='col-sm-10'>\n                                <div className={urlClass}>\n                                    <span\n                                        data-toggle='tooltip'\n                                        title='New Password'\n                                        className='input-group-addon password__group-addon'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.reset_password.newPassword'\n                                            defaultMessage='New Password'\n                                        />\n                                    </span>\n                                    <input\n                                        type='password'\n                                        ref='password'\n                                        className='form-control'\n                                        autoFocus={newPasswordFocus}\n                                    />\n                                </div>\n                                {serverErrorNewPass}\n                                {serverErrorCurrentPass}\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type='button'\n                            className='btn btn-link'\n                            onClick={this.doCancel}\n                        >\n                            <FormattedMessage\n                                id='admin.reset_password.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </button>\n                        <button\n                            onClick={this.doSubmit}\n                            type='submit'\n                            className='btn btn-primary'\n                        >\n                            <FormattedMessage\n                                id='admin.reset_password.reset'\n                                defaultMessage='Reset'\n                            />\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {revokeUserAccessToken} from 'mattermost-redux/actions/users';\n\nimport RevokeTokenButton from './revoke_token_button.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            revokeUserAccessToken,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(RevokeTokenButton);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\n\nexport default class RevokeTokenButton extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Token id to revoke\n         */\n        tokenId: PropTypes.string.isRequired,\n\n        /*\n         * Function to call on error\n         */\n        onError: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Function to revoke a user access token\n             */\n            revokeUserAccessToken: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    handleClick = async (e) => {\n        e.preventDefault();\n\n        const {error} = await this.props.actions.revokeUserAccessToken(this.props.tokenId);\n        trackEvent('system_console', 'revoke_user_access_token');\n\n        if (error) {\n            this.props.onError(error.message);\n        }\n    }\n\n    render() {\n        return (\n            <button\n                className='btn btn-danger'\n                onClick={this.handleClick}\n            >\n                <FormattedMessage\n                    id='admin.revoke_token_button.delete'\n                    defaultMessage='Delete'\n                />\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Overlay, Tooltip} from 'react-bootstrap';\n\nimport * as I18n from 'i18n/i18n.jsx';\n\nimport Constants from 'utils/constants';\nimport {rolesFromMapping, mappingValueFromRoles} from 'utils/policy_roles_adapter';\nimport * as Utils from 'utils/utils.jsx';\nimport RequestButton from 'components/admin_console/request_button/request_button';\nimport LoadingScreen from 'components/loading_screen';\nimport BooleanSetting from 'components/admin_console/boolean_setting';\nimport TextSetting from 'components/admin_console/text_setting';\nimport DropdownSetting from 'components/admin_console/dropdown_setting.jsx';\nimport MultiSelectSetting from 'components/admin_console/multiselect_settings.jsx';\nimport RadioSetting from 'components/admin_console/radio_setting';\nimport ColorSetting from 'components/admin_console/color_setting';\nimport GeneratedSetting from 'components/admin_console/generated_setting';\nimport UserAutocompleteSetting from 'components/admin_console/user_autocomplete_setting.jsx';\nimport SettingsGroup from 'components/admin_console/settings_group.jsx';\nimport JobsTable from 'components/admin_console/jobs';\nimport FileUploadSetting from 'components/admin_console/file_upload_setting.jsx';\nimport RemoveFileSetting from 'components/admin_console/remove_file_setting.jsx';\nimport SchemaText from 'components/admin_console/schema_text';\nimport SaveButton from 'components/save_button';\nimport FormError from 'components/form_error';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport AdminHeader from 'components/widgets/admin_console/admin_header';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nimport Setting from './setting';\n\nexport default class SchemaAdminSettings extends React.Component {\n    static propTypes = {\n        config: PropTypes.object,\n        environmentConfig: PropTypes.object,\n        setNavigationBlocked: PropTypes.func,\n        schema: PropTypes.object,\n        roles: PropTypes.object,\n        license: PropTypes.object,\n        editRole: PropTypes.func,\n        updateConfig: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.isPlugin = false;\n\n        this.saveActions = [];\n\n        this.buildSettingFunctions = {\n            [Constants.SettingsTypes.TYPE_TEXT]: this.buildTextSetting,\n            [Constants.SettingsTypes.TYPE_LONG_TEXT]: this.buildTextSetting,\n            [Constants.SettingsTypes.TYPE_NUMBER]: this.buildTextSetting,\n            [Constants.SettingsTypes.TYPE_COLOR]: this.buildColorSetting,\n            [Constants.SettingsTypes.TYPE_BOOL]: this.buildBoolSetting,\n            [Constants.SettingsTypes.TYPE_PERMISSION]: this.buildPermissionSetting,\n            [Constants.SettingsTypes.TYPE_DROPDOWN]: this.buildDropdownSetting,\n            [Constants.SettingsTypes.TYPE_RADIO]: this.buildRadioSetting,\n            [Constants.SettingsTypes.TYPE_BANNER]: this.buildBannerSetting,\n            [Constants.SettingsTypes.TYPE_GENERATED]: this.buildGeneratedSetting,\n            [Constants.SettingsTypes.TYPE_USERNAME]: this.buildUsernameSetting,\n            [Constants.SettingsTypes.TYPE_BUTTON]: this.buildButtonSetting,\n            [Constants.SettingsTypes.TYPE_LANGUAGE]: this.buildLanguageSetting,\n            [Constants.SettingsTypes.TYPE_JOBSTABLE]: this.buildJobsTableSetting,\n            [Constants.SettingsTypes.TYPE_FILE_UPLOAD]: this.buildFileUploadSetting,\n            [Constants.SettingsTypes.TYPE_CUSTOM]: this.buildCustomSetting,\n        };\n        this.state = {\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n            customComponentWrapperClass: '',\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.schema && props.schema.id !== state.prevSchemaId) {\n            return {\n                prevSchemaId: props.schema.id,\n                saveNeeded: false,\n                saving: false,\n                serverError: null,\n                errorTooltip: false,\n                ...SchemaAdminSettings.getStateFromConfig(props.config, props.schema, props.roles),\n            };\n        }\n        return null;\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        this.setState({\n            saving: true,\n            serverError: null,\n        });\n\n        if (this.state.saveNeeded === 'both' || this.state.saveNeeded === 'permissions') {\n            const settings = (this.props.schema && this.props.schema.settings) || [];\n            const rolesBinding = settings.reduce((acc, val) => {\n                if (val.type === Constants.SettingsTypes.TYPE_PERMISSION) {\n                    acc[val.permissions_mapping_name] = this.state[val.key].toString();\n                }\n                return acc;\n            }, {});\n            const updatedRoles = rolesFromMapping(rolesBinding, this.props.roles);\n\n            let success = true;\n\n            await Promise.all(Object.values(updatedRoles).map(async (item) => {\n                try {\n                    await this.props.editRole(item);\n                } catch (err) {\n                    success = false;\n                    this.setState({\n                        saving: false,\n                        serverError: err.message,\n                    });\n                }\n            }));\n\n            if (!success) {\n                return;\n            }\n        }\n\n        if (this.state.saveNeeded === 'both' || this.state.saveNeeded === 'config') {\n            this.doSubmit(null, SchemaAdminSettings.getStateFromConfig);\n        } else {\n            this.setState({\n                saving: false,\n                saveNeeded: false,\n                serverError: null,\n            });\n            this.props.setNavigationBlocked(false);\n        }\n    }\n\n    getConfigFromState(config) {\n        const schema = this.props.schema;\n\n        if (schema) {\n            const settings = schema.settings || [];\n            settings.forEach((setting) => {\n                if (!setting.key) {\n                    return;\n                }\n\n                if (setting.type === Constants.SettingsTypes.TYPE_PERMISSION) {\n                    this.setConfigValue(config, setting.key, null);\n                    return;\n                }\n\n                let value = this.getSettingValue(setting);\n                const previousValue = SchemaAdminSettings.getConfigValue(config, setting.key);\n\n                if (setting.onConfigSave) {\n                    value = setting.onConfigSave(value, previousValue);\n                }\n\n                this.setConfigValue(config, setting.key, value);\n            });\n\n            if (schema.onConfigSave) {\n                return schema.onConfigSave(config, this.props.config);\n            }\n        }\n\n        return config;\n    }\n\n    static getStateFromConfig(config, schema, roles) {\n        let state = {};\n\n        if (schema) {\n            const settings = schema.settings || [];\n            settings.forEach((setting) => {\n                if (!setting.key) {\n                    return;\n                }\n\n                if (setting.type === Constants.SettingsTypes.TYPE_PERMISSION) {\n                    try {\n                        state[setting.key] = mappingValueFromRoles(setting.permissions_mapping_name, roles) === 'true';\n                    } catch (e) {\n                        state[setting.key] = false;\n                    }\n                    return;\n                }\n\n                let value = SchemaAdminSettings.getConfigValue(config, setting.key);\n\n                if (setting.onConfigLoad) {\n                    value = setting.onConfigLoad(value, config);\n                }\n\n                state[setting.key] = value == null ? setting.default : value;\n            });\n\n            if (schema.onConfigLoad) {\n                state = {...state, ...schema.onConfigLoad(config)};\n            }\n        }\n\n        return state;\n    }\n\n    getSetting(key) {\n        for (const setting of this.props.schema.settings) {\n            if (setting.key === key) {\n                return setting;\n            }\n        }\n\n        return null;\n    }\n\n    getSettingValue(setting) {\n        // Force boolean values to false when disabled.\n        if (setting.type === Constants.SettingsTypes.TYPE_BOOL) {\n            if (this.isDisabled(setting)) {\n                return false;\n            }\n        }\n        if (setting.type === Constants.SettingsTypes.TYPE_TEXT && setting.dynamic_value) {\n            return setting.dynamic_value(this.state[setting.key], this.props.config, this.state, this.props.license);\n        }\n\n        return this.state[setting.key];\n    }\n\n    renderTitle = () => {\n        if (!this.props.schema) {\n            return '';\n        }\n        if (this.props.schema.translate === false) {\n            return (\n                <AdminHeader>\n                    {this.props.schema.name || this.props.schema.id}\n                </AdminHeader>\n            );\n        }\n        return (\n            <FormattedAdminHeader\n                id={this.props.schema.name || this.props.schema.id}\n                defaultMessage={this.props.schema.name_default || this.props.schema.id}\n            />\n        );\n    };\n\n    renderBanner = (setting) => {\n        if (!this.props.schema) {\n            return <span>{''}</span>;\n        }\n\n        if (setting.label.translate === false) {\n            return <span>{setting.label}</span>;\n        }\n\n        if (typeof setting.label === 'string') {\n            if (setting.label_markdown) {\n                return (\n                    <FormattedMarkdownMessage\n                        id={setting.label}\n                        values={setting.label_values}\n                        defaultMessage={setting.label_default}\n                    />\n                );\n            }\n            return (\n                <FormattedMessage\n                    id={setting.label}\n                    defaultMessage={setting.label_default}\n                    values={setting.label_values}\n                />\n            );\n        }\n        return setting.label;\n    }\n\n    renderHelpText = (setting) => {\n        if (!this.props.schema) {\n            return <span>{''}</span>;\n        }\n\n        if (!setting.help_text) {\n            return null;\n        }\n\n        let helpText;\n        let isMarkdown;\n        let helpTextValues;\n        let helpTextDefault;\n        if (setting.disabled_help_text && this.isDisabled(setting)) {\n            helpText = setting.disabled_help_text;\n            isMarkdown = setting.disabled_help_text_markdown;\n            helpTextValues = setting.disabled_help_text_values;\n            helpTextDefault = setting.disabled_help_text_default;\n        } else {\n            helpText = setting.help_text;\n            isMarkdown = setting.help_text_markdown;\n            helpTextValues = setting.help_text_values;\n            helpTextDefault = setting.help_text_default;\n        }\n\n        return (\n            <SchemaText\n                isMarkdown={isMarkdown}\n                isTranslated={setting.translate}\n                text={helpText}\n                textDefault={helpTextDefault}\n                textValues={helpTextValues}\n            />\n        );\n    }\n\n    renderLabel = (setting) => {\n        if (!this.props.schema) {\n            return '';\n        }\n\n        if (setting.translate === false) {\n            return setting.label;\n        }\n        return Utils.localizeMessage(setting.label, setting.label_default);\n    }\n\n    isDisabled = (setting) => {\n        if (typeof setting.isDisabled === 'function') {\n            return setting.isDisabled(this.props.config, this.state, this.props.license);\n        }\n        return Boolean(setting.isDisabled);\n    }\n\n    isHidden = (setting) => {\n        if (typeof setting.isHidden === 'function') {\n            return setting.isHidden(this.props.config, this.state, this.props.license);\n        }\n        return Boolean(setting.isHidden);\n    }\n\n    buildButtonSetting = (setting) => {\n        const handleRequestAction = (success, error) => {\n            setting.action(success, error, this.state['ServiceSettings.SiteURL']);\n        };\n\n        return (\n            <RequestButton\n                key={this.props.schema.id + '_text_' + setting.key}\n                requestAction={handleRequestAction}\n                helpText={this.renderHelpText(setting)}\n                loadingText={Utils.localizeMessage(setting.loading, setting.loading_default)}\n                buttonText={<span>{this.renderLabel(setting)}</span>}\n                showSuccessMessage={Boolean(setting.success_message)}\n                includeDetailedError={true}\n                errorMessage={{\n                    id: setting.error_message,\n                    defaultMessage: setting.error_message_default,\n                }}\n                successMessage={setting.success_message && {\n                    id: setting.success_message,\n                    defaultMessage: setting.success_message_default,\n                }}\n            />\n        );\n    }\n\n    buildTextSetting = (setting) => {\n        let inputType = 'input';\n        if (setting.type === Constants.SettingsTypes.TYPE_NUMBER) {\n            inputType = 'number';\n        } else if (setting.type === Constants.SettingsTypes.TYPE_LONG_TEXT) {\n            inputType = 'textarea';\n        }\n\n        let value = this.state[setting.key] || '';\n        if (setting.dynamic_value) {\n            value = setting.dynamic_value(value, this.props.config, this.state, this.props.license);\n        }\n\n        return (\n            <TextSetting\n                key={this.props.schema.id + '_text_' + setting.key}\n                id={setting.key}\n                type={inputType}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\n                value={value}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n                maxLength={setting.max_length}\n            />\n        );\n    }\n\n    buildColorSetting = (setting) => {\n        return (\n            <ColorSetting\n                key={this.props.schema.id + '_text_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\n                value={this.state[setting.key] || ''}\n                disabled={this.isDisabled(setting)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildBoolSetting = (setting) => {\n        return (\n            <BooleanSetting\n                key={this.props.schema.id + '_bool_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={(!this.isDisabled(setting) && this.state[setting.key]) || false}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildPermissionSetting = (setting) => {\n        return (\n            <BooleanSetting\n                key={this.props.schema.id + '_bool_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={(!this.isDisabled(setting) && this.state[setting.key]) || false}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handlePermissionChange}\n            />\n        );\n    }\n\n    buildDropdownSetting = (setting) => {\n        const enterpriseReady = this.props.config.BuildEnterpriseReady === 'true';\n        const options = [];\n        setting.options.forEach((option) => {\n            if (!option.isHidden || !option.isHidden(this.props.config, this.state, this.props.license, enterpriseReady)) {\n                options.push(option);\n            }\n        });\n\n        const values = options.map((o) => ({value: o.value, text: Utils.localizeMessage(o.display_name, o.display_name_default)}));\n        const selectedValue = this.state[setting.key] || values[0].value;\n\n        let selectedOptionForHelpText = null;\n        for (const option of options) {\n            if (option.help_text && option.value === selectedValue) {\n                selectedOptionForHelpText = option;\n                break;\n            }\n        }\n\n        return (\n            <DropdownSetting\n                key={this.props.schema.id + '_dropdown_' + setting.key}\n                id={setting.key}\n                values={values}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(selectedOptionForHelpText || setting)}\n                value={selectedValue}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildLanguageSetting = (setting) => {\n        const locales = I18n.getAllLanguages();\n        const values = Object.keys(locales).map((l) => {\n            return {value: locales[l].value, text: locales[l].name, order: locales[l].order};\n        }).sort((a, b) => a.order - b.order);\n\n        if (setting.multiple) {\n            const noResultText = (\n                <FormattedMessage\n                    id={setting.no_result}\n                    defaultMessage={setting.no_result_default}\n                />\n            );\n            const notPresent = (\n                <FormattedMessage\n                    id={setting.not_present}\n                    defaultMessage={setting.not_present_default}\n                />\n            );\n            return (\n                <MultiSelectSetting\n                    key={this.props.schema.id + '_language_' + setting.key}\n                    id={setting.key}\n                    label={this.renderLabel(setting)}\n                    values={values}\n                    helpText={this.renderHelpText(setting)}\n                    selected={(this.state[setting.key] && this.state[setting.key].split(',')) || []}\n                    disabled={this.isDisabled(setting)}\n                    setByEnv={this.isSetByEnv(setting.key)}\n                    onChange={(changedId, value) => this.handleChange(changedId, value.join(','))}\n                    noResultText={noResultText}\n                    notPresent={notPresent}\n                />\n            );\n        }\n        return (\n            <DropdownSetting\n                key={this.props.schema.id + '_language_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                values={values}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key] || values[0].value}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildRadioSetting = (setting) => {\n        const options = setting.options || [];\n        const values = options.map((o) => ({value: o.value, text: o.display_name}));\n\n        return (\n            <RadioSetting\n                key={this.props.schema.id + '_radio_' + setting.key}\n                id={setting.key}\n                values={values}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key] || values[0]}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildBannerSetting = (setting) => {\n        if (this.isDisabled(setting)) {\n            return null;\n        }\n        return (\n            <div\n                className={'banner ' + setting.banner_type}\n                key={this.props.schema.id + '_bool_' + setting.key}\n            >\n                <div className='banner__content'>\n                    <span>\n                        { setting.banner_type === 'warning' ? <WarningIcon additionalClassName='banner__icon'/> : null}\n                        {this.renderBanner(setting)}\n                    </span>\n                </div>\n            </div>\n        );\n    }\n\n    buildGeneratedSetting = (setting) => {\n        return (\n            <GeneratedSetting\n                key={this.props.schema.id + '_generated_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                regenerateHelpText={setting.regenerate_help_text}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\n                value={this.state[setting.key] || ''}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleGeneratedChange}\n            />\n        );\n    }\n\n    handleGeneratedChange = (id, s) => {\n        this.handleChange(id, s.replace('+', '-').replace('/', '_'));\n    }\n\n    handleChange = (id, value) => {\n        let saveNeeded = 'config';\n        if (this.state.saveNeeded === 'permissions') {\n            saveNeeded = 'both';\n        }\n        this.setState({\n            saveNeeded,\n            [id]: value,\n        });\n\n        this.props.setNavigationBlocked(true);\n    }\n\n    handlePermissionChange = (id, value) => {\n        let saveNeeded = 'permissions';\n        if (this.state.saveNeeded === 'config') {\n            saveNeeded = 'both';\n        }\n        this.setState({\n            saveNeeded,\n            [id]: value,\n        });\n\n        this.props.setNavigationBlocked(true);\n    }\n\n    buildUsernameSetting = (setting) => {\n        return (\n            <UserAutocompleteSetting\n                key={this.props.schema.id + '_userautocomplete_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default) || Utils.localizeMessage('search_bar.search', 'Search')}\n                value={this.state[setting.key] || ''}\n                disabled={this.isDisabled(setting)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildJobsTableSetting = (setting) => {\n        return (\n            <JobsTable\n                key={this.props.schema.id + '_jobstable_' + setting.key}\n                jobType={setting.job_type}\n                getExtraInfoText={setting.render_job}\n                disabled={this.isDisabled(setting)}\n                createJobButtonText={\n                    <FormattedMessage\n                        id={setting.label}\n                        defaultMessage={setting.label_default}\n                    />\n                }\n                createJobHelpText={\n                    <FormattedMarkdownMessage\n                        id={setting.help_text}\n                        defaultMessage={setting.help_text_default}\n                    />\n                }\n            />\n        );\n    }\n\n    buildFileUploadSetting = (setting) => {\n        if (this.state[setting.key]) {\n            const removeFile = (id, callback) => {\n                const successCallback = () => {\n                    this.handleChange(setting.key, '');\n                    this.setState({[setting.key]: null, [`${setting.key}Error`]: null});\n                };\n                const errorCallback = (error) => {\n                    callback();\n                    this.setState({[setting.key]: null, [`${setting.key}Error`]: error.message});\n                };\n                setting.remove_action(successCallback, errorCallback);\n            };\n            return (\n                <RemoveFileSetting\n                    id={this.props.schema.id}\n                    key={this.props.schema.id + '_fileupload_' + setting.key}\n                    label={this.renderLabel(setting)}\n                    helpText={\n                        <FormattedMessage\n                            id={setting.remove_help_text}\n                            defaultMessage={setting.remove_help_text_default}\n                        />\n                    }\n                    removeButtonText={Utils.localizeMessage(setting.remove_button_text, setting.remove_button_text_default)}\n                    removingText={Utils.localizeMessage(setting.removing_text, setting.removing_text_default)}\n                    fileName={this.state[setting.key]}\n                    onSubmit={removeFile}\n                    disabled={this.isDisabled(setting)}\n                    setByEnv={this.isSetByEnv(setting.key)}\n                />\n            );\n        }\n        const uploadFile = (id, file, callback) => {\n            const successCallback = (filename) => {\n                this.handleChange(id, filename);\n                this.setState({[setting.key]: filename, [`${setting.key}Error`]: null});\n                if (callback && typeof callback === 'function') {\n                    callback();\n                }\n            };\n            const errorCallback = (error) => {\n                if (callback && typeof callback === 'function') {\n                    callback(error.message);\n                }\n            };\n            setting.upload_action(file, successCallback, errorCallback);\n        };\n        return (\n            <FileUploadSetting\n                id={setting.key}\n                key={this.props.schema.id + '_fileupload_' + setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                uploadingText={Utils.localizeMessage(setting.uploading_text, setting.uploading_text_default)}\n                disabled={this.isDisabled(setting)}\n                fileType={setting.fileType}\n                onSubmit={uploadFile}\n                error={this.state.idpCertificateFileError}\n                setByEnv={this.isSetByEnv(setting.key)}\n            />\n        );\n    }\n\n    buildCustomSetting = (setting) => {\n        const CustomComponent = setting.component;\n\n        const componentInstance = (\n            <CustomComponent\n                key={this.props.schema.id + '_custom_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key]}\n                disabled={this.isDisabled(setting)}\n                config={this.props.config}\n                license={this.props.license}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n                registerSaveAction={this.registerSaveAction}\n                setSaveNeeded={this.setSaveNeeded}\n                unRegisterSaveAction={this.unRegisterSaveAction}\n            />);\n\n        // Show the plugin custom setting title\n        // consistently as other settings with the Setting component\n        if (setting.showTitle) {\n            return (\n                <Setting\n                    label={setting.label}\n                    inputId={setting.key}\n                    helpText={setting.helpText}\n                >\n                    {componentInstance}\n                </Setting>\n            );\n        }\n        return componentInstance;\n    }\n\n    unRegisterSaveAction = (saveAction) => {\n        const indexOfSaveAction = this.saveActions.indexOf(saveAction);\n        this.saveActions.splice(indexOfSaveAction, 1);\n    }\n\n    registerSaveAction = (saveAction) => {\n        this.saveActions.push(saveAction);\n    }\n\n    setSaveNeeded = () => {\n        this.setState({saveNeeded: 'config'});\n        this.props.setNavigationBlocked(true);\n    }\n\n    renderSettings = () => {\n        const schema = this.props.schema;\n\n        if (!schema) {\n            return <LoadingScreen/>;\n        }\n\n        const settingsList = [];\n        if (schema.settings) {\n            schema.settings.forEach((setting) => {\n                if (this.buildSettingFunctions[setting.type] && !this.isHidden(setting)) {\n                    settingsList.push(this.buildSettingFunctions[setting.type](setting));\n                }\n            });\n        }\n\n        let header;\n        if (schema.header) {\n            header = (\n                <div className='banner'>\n                    <SchemaText\n                        text={schema.header}\n                        isMarkdown={true}\n                        isTranslated={this.props.schema.translate}\n                    />\n                </div>\n            );\n        }\n\n        let footer;\n        if (schema.footer) {\n            footer = (\n                <div className='banner'>\n                    <SchemaText\n                        text={schema.footer}\n                        isMarkdown={true}\n                        isTranslated={this.props.schema.translate}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <SettingsGroup container={false}>\n                {header}\n                {settingsList}\n                {footer}\n            </SettingsGroup>\n        );\n    }\n\n    closeTooltip = () => {\n        this.setState({errorTooltip: false});\n    }\n\n    openTooltip = (e) => {\n        const elm = e.currentTarget.querySelector('.control-label');\n        const isElipsis = elm.offsetWidth < elm.scrollWidth;\n        this.setState({errorTooltip: isElipsis});\n    }\n\n    doSubmit = async (callback, getStateFromConfig) => {\n        this.setState({\n            saving: true,\n            serverError: null,\n        });\n\n        // clone config so that we aren't modifying data in the stores\n        let config = JSON.parse(JSON.stringify(this.props.config));\n        config = this.getConfigFromState(config);\n\n        const {error} = await this.props.updateConfig(config);\n        if (error) {\n            this.setState({\n                serverError: error.message,\n                serverErrorId: error.id,\n            });\n        } else {\n            this.setState(getStateFromConfig(config));\n        }\n\n        if (callback) {\n            callback();\n        }\n\n        if (this.handleSaved) {\n            this.handleSaved(config);\n        }\n\n        const results = [];\n        for (const saveAction of this.saveActions) {\n            results.push(saveAction());\n        }\n\n        const hasSaveActionError = await Promise.all(results).then((values) => values.some(((value) => value.error && value.error.message)));\n\n        const hasError = this.state.serverError || hasSaveActionError;\n        if (hasError) {\n            this.setState({saving: false});\n        } else {\n            this.setState({saving: false, saveNeeded: false});\n            this.props.setNavigationBlocked(false);\n        }\n    };\n\n    // Some path parts may contain periods (e.g. plugin ids), but path walking the configuration\n    // relies on splitting by periods. Use this pair of functions to allow such path parts.\n    //\n    // It is assumed that no path contains the symbol '+'.\n    static escapePathPart(pathPart) {\n        return pathPart.replace(/\\./g, '+');\n    }\n\n    static unescapePathPart(pathPart) {\n        return pathPart.replace(/\\+/g, '.');\n    }\n\n    static getConfigValue(config, path) {\n        const pathParts = path.split('.');\n\n        return pathParts.reduce((obj, pathPart) => {\n            if (!obj) {\n                return null;\n            }\n\n            return obj[SchemaAdminSettings.unescapePathPart(pathPart)];\n        }, config);\n    }\n\n    setConfigValue(config, path, value) {\n        function setValue(obj, pathParts) {\n            const part = SchemaAdminSettings.unescapePathPart(pathParts[0]);\n\n            if (pathParts.length === 1) {\n                obj[part] = value;\n            } else {\n                if (obj[part] == null) {\n                    obj[part] = {};\n                }\n\n                setValue(obj[part], pathParts.slice(1));\n            }\n        }\n\n        setValue(config, path.split('.'));\n    }\n\n    isSetByEnv = (path) => {\n        return Boolean(SchemaAdminSettings.getConfigValue(this.props.environmentConfig, path));\n    };\n\n    hybridSchemaAndComponent = () => {\n        const schema = this.props.schema;\n        if (schema && schema.component && schema.settings) {\n            const CustomComponent = schema.component;\n            return (\n                <CustomComponent {...this.props}/>\n            );\n        }\n        return null;\n    }\n\n    render = () => {\n        const schema = this.props.schema;\n        if (schema && schema.component && !schema.settings) {\n            const CustomComponent = schema.component;\n            return (\n                <CustomComponent {...this.props}/>\n            );\n        }\n\n        return (\n            <div className={'wrapper--fixed ' + this.state.customComponentWrapperClass}>\n                {this.renderTitle()}\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <form\n                            className='form-horizontal'\n                            role='form'\n                            onSubmit={this.handleSubmit}\n                        >\n                            {this.renderSettings()}\n                        </form>\n                        {this.hybridSchemaAndComponent()}\n                    </div>\n                </div>\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={Utils.localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <div\n                        className='error-message'\n                        ref='errorMessage'\n                        onMouseOver={this.openTooltip}\n                        onMouseOut={this.closeTooltip}\n                    >\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                    <Overlay\n                        show={this.state.errorTooltip}\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                        placement='top'\n                        target={this.refs.errorMessage}\n                    >\n                        <Tooltip id='error-tooltip' >\n                            {this.state.serverError}\n                        </Tooltip>\n                    </Overlay>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport marked from 'marked';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage, {CustomRenderer} from 'components/formatted_markdown_message';\n\nexport default class SchemaText extends React.PureComponent {\n    static propTypes = {\n        isMarkdown: PropTypes.bool,\n        isTranslated: PropTypes.bool,\n        text: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.object,\n        ]).isRequired,\n        textDefault: PropTypes.string,\n        textValues: PropTypes.object,\n    };\n\n    static defaultProps = {\n        isTranslated: true,\n    };\n\n    renderTranslated = () => {\n        const {\n            isMarkdown,\n            text,\n            textDefault,\n            textValues,\n        } = this.props;\n\n        if (typeof text === 'object') {\n            return text;\n        }\n\n        if (isMarkdown) {\n            return (\n                <FormattedMarkdownMessage\n                    id={text}\n                    defaultMessage={textDefault}\n                    values={textValues}\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                id={text}\n                values={textValues}\n                defaultMessage={textDefault}\n            />\n        );\n    };\n\n    renderUntranslated = () => {\n        if (this.props.isMarkdown) {\n            const html = marked(this.props.text, {\n                breaks: true,\n                sanitize: true,\n                renderer: new CustomRenderer(),\n            });\n\n            return <span dangerouslySetInnerHTML={{__html: html}}/>;\n        }\n\n        return <span>{this.props.text}</span>;\n    };\n\n    render() {\n        return this.props.isTranslated ? this.renderTranslated() : this.renderUntranslated();\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getLogs} from 'mattermost-redux/actions/admin';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\n\nimport Logs from './logs.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        logs: Selectors.getLogs(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getLogs,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\n\nconst NEXT_BUTTON_TIMEOUT = 500;\n\nexport default class Logs extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Array of logs to render\n         */\n        logs: PropTypes.arrayOf(PropTypes.string).isRequired,\n        page: PropTypes.number.isRequired,\n        perPage: PropTypes.number.isRequired,\n        nextPage: PropTypes.func.isRequired,\n        previousPage: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.logPanel = React.createRef();\n\n        this.state = {\n            nextDisabled: false,\n        };\n    }\n\n    componentDidMount() {\n        // Scroll Down to get the latest logs\n        const node = this.logPanel.current;\n        node.scrollTop = node.scrollHeight;\n        node.focus();\n    }\n\n    componentDidUpdate() {\n        // Scroll Down to get the latest logs\n        const node = this.logPanel.current;\n        node.scrollTop = node.scrollHeight;\n    }\n\n    nextPage = (e) => {\n        e.preventDefault();\n\n        this.setState({nextDisabled: true});\n        this.nextTimeoutId = setTimeout(() => this.setState({nextDisabled: false}), NEXT_BUTTON_TIMEOUT);\n\n        this.props.nextPage();\n    }\n\n    previousPage = (e) => {\n        e.preventDefault();\n\n        this.props.previousPage();\n    }\n\n    render() {\n        let content = null;\n        let nextButton;\n        let previousButton;\n\n        if (this.props.logs.length >= this.props.perPage) {\n            nextButton = (\n                <button\n                    className='btn btn-default filter-control filter-control__next pull-right'\n                    onClick={this.nextPage}\n                    disabled={this.state.nextDisabled}\n                >\n                    <FormattedMessage\n                        id='admin.logs.next'\n                        defaultMessage='Next'\n                    />\n                    <NextIcon additionalClassName='margin-left'/>\n                </button>\n            );\n        }\n\n        if (this.props.page > 0) {\n            previousButton = (\n                <button\n                    className='btn btn-default filter-control filter-control__prev'\n                    onClick={this.previousPage}\n                >\n                    <FormattedMessage\n                        id='generic_icons.previous'\n                        defaultMessage='Previous Icon'\n                    >\n                        {(title) => (\n                            <i\n                                className='fa fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='admin.logs.prev'\n                        defaultMessage='Previous'\n                    />\n                </button>\n            );\n        }\n\n        content = [];\n\n        for (let i = 0; i < this.props.logs.length; i++) {\n            const style = {\n                whiteSpace: 'nowrap',\n                fontFamily: 'monospace',\n            };\n\n            if (this.props.logs[i].indexOf('[EROR]') > 0) {\n                style.color = 'red';\n            }\n\n            content.push(<br key={'br_' + i}/>);\n            content.push(\n                <span\n                    key={'log_' + i}\n                    style={style}\n                >\n                    {this.props.logs[i]}\n                </span>\n            );\n        }\n\n        return (\n            <div>\n                <div\n                    tabIndex='-1'\n                    ref={this.logPanel}\n                    className='log__panel'\n                >\n                    {content}\n                </div>\n                <div className='padding-top padding-bottom x2 filter-controls'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport LoadingScreen from 'components/loading_screen';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nimport LogList from './log_list.jsx';\n\nexport default class Logs extends React.Component {\n    static propTypes = {\n\n        /*\n         * Array of logs to render\n         */\n        logs: PropTypes.arrayOf(PropTypes.string).isRequired,\n        nextPage: PropTypes.func,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to fetch logs\n             */\n            getLogs: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingLogs: true,\n            page: 0,\n            perPage: 1000,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getLogs(this.state.page, this.state.perPage).then(\n            () => this.setState({loadingLogs: false})\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.page !== prevState.page) {\n            this.props.actions.getLogs(this.state.page, this.state.perPage).then(\n                () => this.setState({loadingLogs: false})\n            );\n        }\n    }\n\n    nextPage = () => {\n        this.setState({page: this.state.page + 1});\n    }\n\n    previousPage = () => {\n        this.setState({page: this.state.page - 1});\n    }\n\n    reload = () => {\n        this.setState({loadingLogs: true});\n        this.props.actions.getLogs(this.state.page, this.state.perPage).then(\n            () => this.setState({loadingLogs: false})\n        );\n    }\n\n    render() {\n        let content = null;\n\n        if (this.state.loadingLogs) {\n            content = <LoadingScreen/>;\n        } else {\n            content = (\n                <LogList\n                    {...this.props}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    page={this.state.page}\n                    perPage={this.state.perPage}\n                />\n            );\n        }\n\n        return (\n            <div className='wrapper--admin'>\n                <FormattedAdminHeader\n                    id='admin.logs.title'\n                    defaultMessage='Server Logs'\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='banner'>\n                            <div className='banner__content'>\n                                <FormattedMessage\n                                    id='admin.logs.bannerDesc'\n                                    defaultMessage='To look up users by User ID or Token ID, go to Reporting > Users and paste the ID into the search filter.'\n                                />\n                            </div>\n                        </div>\n                        <button\n                            type='submit'\n                            className='btn btn-primary'\n                            onClick={this.reload}\n                        >\n                            <FormattedMessage\n                                id='admin.logs.reload'\n                                defaultMessage='Reload'\n                            />\n                        </button>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default function() {\n    return (\n        <div className='alert alert-warning'>\n            <FormattedMessage\n                id='admin.set_by_env'\n                defaultMessage='This setting has been set through an environment variable. It cannot be changed through the System Console.'\n            />\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\n\nimport SetByEnv from './set_by_env';\n\ntype Props = {\n    inputId?: string;\n    label: React.ReactNode;\n    children: React.ReactNode;\n    helpText?: React.ReactNode;\n    setByEnv?: boolean;\n}\n\nexport default class Settings extends PureComponent<Props> {\n    public render() {\n        const {\n            children,\n            setByEnv,\n            helpText,\n            inputId,\n            label,\n        } = this.props;\n\n        return (\n            <div\n                data-testid={inputId}\n                className='form-group'\n            >\n                <label\n                    className='control-label col-sm-4'\n                    htmlFor={inputId}\n                >\n                    {label}\n                </label>\n                <div className='col-sm-8'>\n                    {children}\n                    <div\n                        data-testid={inputId + 'help-text'}\n                        className='help-text'\n                    >\n                        {helpText}\n                    </div>\n                    {setByEnv ? <SetByEnv/> : null}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class SettingsGroup extends React.Component {\n    static get propTypes() {\n        return {\n            show: PropTypes.bool.isRequired,\n            header: PropTypes.node,\n            children: PropTypes.node,\n            container: PropTypes.bool,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            show: true,\n            container: true,\n        };\n    }\n\n    render() {\n        let wrapperClass = '';\n        let contentClass = '';\n\n        if (!this.props.show) {\n            return null;\n        }\n\n        if (this.props.container) {\n            wrapperClass = 'admin-console__wrapper';\n            contentClass = 'admin-console__content';\n        }\n\n        let header = null;\n        if (this.props.header) {\n            header = (\n                <h4>\n                    {this.props.header}\n                </h4>\n            );\n        }\n\n        return (\n            <div className={wrapperClass}>\n                <div className={contentClass}>\n                    {header}\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getUser, getProfiles} from 'mattermost-redux/selectors/entities/users';\nimport {updateUserActive} from 'mattermost-redux/actions/users';\nimport {addUserToTeam} from 'mattermost-redux/actions/teams';\n\nimport {setNavigationBlocked, deferNavigation, cancelNavigation, confirmNavigation} from 'actions/admin_actions.jsx';\nimport {getNavigationBlocked, showNavigationPrompt} from 'selectors/views/admin';\n\nimport SystemUserDetail from './system_user_detail.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const userId = ownProps.match.params.user_id;\n    const user = getUser(state, userId);\n    return {\n        user,\n        navigationBlocked: getNavigationBlocked(state),\n        showNavigationPrompt: showNavigationPrompt(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getUser,\n            getProfiles,\n            updateUserActive,\n            setNavigationBlocked,\n            deferNavigation,\n            cancelNavigation,\n            confirmNavigation,\n            addUserToTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUserDetail);","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {Overlay, Tooltip} from 'react-bootstrap';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport {adminResetMfa, adminResetEmail} from 'actions/admin_actions.jsx';\n\nimport {Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport ResetPasswordModal from 'components/admin_console/reset_password_modal';\nimport AdminButtonOutline from 'components/admin_console/admin_button_outline/admin_button_outline';\nimport AdminUserCard from 'components/admin_console/admin_user_card/admin_user_card';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport SaveButton from 'components/save_button';\nimport FormError from 'components/form_error';\nimport TeamSelectorModal from 'components/team_selector_modal';\n\nimport TeamList from 'components/admin_console/system_user_detail/team_list';\nimport EmailIcon from 'components/widgets/icons/email_icon.jsx';\nimport AtIcon from 'components/widgets/icons/at_icon.jsx';\nimport SheidOutlineIcon from 'components/widgets/icons/shield_outline_icon.jsx';\n\nimport './system_user_detail.scss';\n\nexport default class SystemUserDetail extends React.PureComponent {\n    static propTypes = {\n        user: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            updateUserActive: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n            addUserToTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        user: {\n            email: null,\n        },\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            teams: null,\n            teamIds: null,\n            loading: false,\n            searching: false,\n            showPasswordModal: false,\n            showDeactivateMemberModal: false,\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n            customComponentWrapperClass: '',\n            user: {\n                email: this.props.user.email,\n            },\n            addTeamOpen: false,\n            refreshTeams: true,\n        };\n    }\n\n    setTeamsData = (teams) => {\n        const teamIds = teams.map((team) => team.team_id);\n        this.setState({teams});\n        this.setState({teamIds});\n        this.setState({refreshTeams: false});\n    }\n\n    openAddTeam = () => {\n        this.setState({addTeamOpen: true});\n    }\n\n    addTeams = (teams) => {\n        const promises = [];\n        for (const team of teams) {\n            promises.push(this.props.actions.addUserToTeam(team.id, this.props.user.id));\n        }\n        Promise.all(promises).finally(this.setState({refreshTeams: true}));\n    }\n\n    closeAddTeam = () => {\n        this.setState({addTeamOpen: false});\n    }\n\n    doPasswordReset = (user) => {\n        this.setState({\n            showPasswordModal: true,\n            user,\n        });\n    }\n\n    doPasswordResetDismiss = () => {\n        this.setState({\n            showPasswordModal: false,\n        });\n    }\n\n    doPasswordResetSubmit = () => {\n        this.setState({\n            showPasswordModal: false,\n        });\n    }\n\n    handleMakeActive = (e) => {\n        e.preventDefault();\n        this.props.actions.updateUserActive(this.props.user.id, true).\n            then(this.onUpdateActiveResult);\n    }\n\n    handleShowDeactivateMemberModal = (e) => {\n        e.preventDefault();\n        this.setState({showDeactivateMemberModal: true});\n    }\n\n    handleDeactivateMember = () => {\n        this.props.actions.updateUserActive(this.props.user.id, false).\n            then(this.onUpdateActiveResult);\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    onUpdateActiveResult = ({error}) => {\n        if (error) {\n            this.setState({error});\n        }\n    }\n\n    handleDeactivateCancel = () => {\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    // TODO: add error handler function\n    handleResetMfa = (e) => {\n        e.preventDefault();\n        adminResetMfa(this.props.user.id, null, null);\n    }\n\n    handleEmailChange = (e) => {\n        const emailChanged = e.target.value !== this.props.user.email;\n        this.setState({\n            user: {\n                email: e.target.value,\n            },\n            saveNeeded: emailChanged,\n        });\n        this.props.actions.setNavigationBlocked(emailChanged);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.user.email !== this.props.user.email) {\n            if (!isEmail(this.state.user.email)) {\n                this.setState({serverError: 'Invalid Email address'});\n                return;\n            }\n            const user = Object.assign({}, this.props.user);\n            const email = this.state.user.email.trim().toLowerCase();\n            user.email = email;\n\n            this.setState({serverError: null});\n\n            adminResetEmail(\n                user,\n                () => {\n                    this.props.history.push('/admin_console/user_management/users');\n                },\n                (err) => {\n                    const serverError = err.message ? err.message : err;\n                    this.setState({serverError});\n                }\n            );\n\n            this.setState({\n                saving: false,\n                saveNeeded: false,\n                serverError: null,\n            });\n            this.props.actions.setNavigationBlocked(false);\n        }\n    }\n\n    renderDeactivateMemberModal = (user) => {\n        const title = (\n            <FormattedMessage\n                id='deactivate_member_modal.title'\n                defaultMessage='Deactivate {username}'\n                values={{\n                    username: user.username,\n                }}\n            />\n        );\n\n        let warning;\n        if (user.auth_service !== '' && user.auth_service !== Constants.EMAIL_SERVICE) {\n            warning = (\n                <strong>\n                    <br/>\n                    <br/>\n                    <FormattedMessage\n                        id='deactivate_member_modal.sso_warning'\n                        defaultMessage='You must also deactivate this user in the SSO provider or they will be reactivated on next login or sync.'\n                    />\n                </strong>\n            );\n        }\n\n        const message = (\n            <div>\n                <FormattedMessage\n                    id='deactivate_member_modal.desc'\n                    defaultMessage='This action deactivates {username}. They will be logged out and not have access to any teams or channels on this system. Are you sure you want to deactivate {username}?'\n                    values={{\n                        username: user.username,\n                    }}\n                />\n                {warning}\n            </div>\n        );\n\n        const confirmButtonClass = 'btn btn-danger';\n        const deactivateMemberButton = (\n            <FormattedMessage\n                id='deactivate_member_modal.deactivate'\n                defaultMessage='Deactivate'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showDeactivateMemberModal}\n                title={title}\n                message={message}\n                confirmButtonClass={confirmButtonClass}\n                confirmButtonText={deactivateMemberButton}\n                onConfirm={this.handleDeactivateMember}\n                onCancel={this.handleDeactivateCancel}\n            />\n        );\n    }\n\n    renderActivateDeactivate = () => {\n        if (this.props.user.delete_at > 0) {\n            return (\n                <AdminButtonOutline\n                    onClick={this.handleMakeActive}\n                    className='admin-btn-default'\n                >\n                    {Utils.localizeMessage('admin.user_item.makeActive', 'Activate')}\n                </AdminButtonOutline>\n            );\n        }\n        return (\n            <AdminButtonOutline\n                onClick={this.handleShowDeactivateMemberModal}\n                className='admin-btn-default'\n            >\n                {Utils.localizeMessage('admin.user_item.makeInactive', 'Deactivate')}\n            </AdminButtonOutline>\n        );\n    }\n\n    renderRemoveMFA = () => {\n        if (this.props.user.mfa_active) {\n            return (\n                <AdminButtonOutline\n                    onClick={this.handleResetMfa}\n                    className='admin-btn-default'\n                >\n                    {'Remove MFA'}\n                </AdminButtonOutline>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        const {user} = this.props;\n        let deactivateMemberModal;\n        let currentRoles = (\n            <FormattedMessage\n                id='admin.user_item.member'\n                defaultMessage='Member'\n            />\n        );\n\n        if (!user.id) {\n            return (\n                <Redirect to={{pathname: '/admin_console/user_management/users'}}/>\n            );\n        }\n\n        if (user.id) {\n            deactivateMemberModal = this.renderDeactivateMemberModal(user);\n            if (user.delete_at > 0) {\n                currentRoles = (\n                    <FormattedMessage\n                        id='admin.user_item.inactive'\n                        defaultMessage='Inactive'\n                    />\n                );\n            }\n            if (user.roles.length > 0 && Utils.isSystemAdmin(user.roles)) {\n                currentRoles = (\n                    <FormattedMessage\n                        id='team_members_dropdown.systemAdmin'\n                        defaultMessage='System Admin'\n                    />\n                );\n            }\n            if (user.roles.length > 0 && Utils.isGuest(user)) {\n                currentRoles = (\n                    <FormattedMessage\n                        id='team_members_dropdown.guest'\n                        defaultMessage='Guest'\n                    />\n                );\n            }\n        }\n\n        return (\n            <div className='SystemUserDetail wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/users'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.systemUserDetail.title'\n                            defaultMessage='User Configuration'\n                        />\n                    </div>\n                </div>\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <AdminUserCard\n                            user={user}\n                            body={\n                                <React.Fragment>\n                                    <span className='SystemUserDetail__position'>{user.position}</span>\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.email', 'Email')}</span>\n                                    <div>\n                                        <EmailIcon className='SystemUserDetail__field-icon'/>\n                                        <input\n                                            className='SystemUserDetail__input form-control'\n                                            type='text'\n                                            value={this.state.user.email}\n                                            onChange={this.handleEmailChange}\n                                        />\n                                    </div>\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.username', 'Username')}</span>\n                                    <div>\n                                        <AtIcon className='SystemUserDetail__field-icon'/>\n                                        <span className='SystemUserDetail__field-text'>{user.username}</span>\n                                    </div>\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.authenticationMethod', 'Authentication Method')}</span>\n                                    <div className='SystemUserDetail__field-text'>\n                                        <SheidOutlineIcon className='SystemUserDetail__field-icon'/>\n                                        <span className='SystemUserDetail__field-text'>{user.mfa_active ? 'MFA' : 'Email'}</span>\n                                    </div>\n\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.role', 'Role')}</span>\n                                    <p>{currentRoles}</p>\n                                </React.Fragment>\n                            }\n                            footer={\n                                <React.Fragment>\n                                    <AdminButtonOutline\n                                        onClick={this.doPasswordReset}\n                                        className='admin-btn-default'\n                                    >\n                                        {'Reset Password'}\n                                    </AdminButtonOutline>\n                                    {this.renderActivateDeactivate()}\n                                    {this.renderRemoveMFA()}\n                                </React.Fragment>\n                            }\n                        />\n                        <AdminPanel\n                            subtitleId={t('admin.userManagement.userDetail.teamsSubtitle')}\n                            subtitleDefault={'Teams to which this user belongs'}\n                            titleId={t('admin.userManagement.userDetail.teamsTitle')}\n                            titleDefault={'Team Membership'}\n                            button={(\n                                <div className='add-team-button'>\n                                    <button\n                                        className='btn btn-primary'\n                                        onClick={this.openAddTeam}\n                                    >\n                                        <FormattedMessage\n                                            id='admin.userManagement.userDetail.addTeam'\n                                            defaultMessage='Add Team'\n                                        />\n                                    </button>\n                                </div>\n                            )}\n                        >\n                            <TeamList\n                                userId={this.props.user.id}\n                                userDetailCallback={this.setTeamsData}\n                                refreshTeams={this.state.refreshTeams}\n                            />\n                        </AdminPanel>\n                    </div>\n                </div>\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={Utils.localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <div\n                        className='error-message'\n                        ref='errorMessage'\n                        onMouseOver={this.openTooltip}\n                        onMouseOut={this.closeTooltip}\n                    >\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                    <Overlay\n                        show={this.state.errorTooltip}\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                        placement='top'\n                        target={this.refs.errorMessage}\n                    >\n                        <Tooltip id='error-tooltip' >\n                            {this.state.serverError}\n                        </Tooltip>\n                    </Overlay>\n                </div>\n                <ResetPasswordModal\n                    user={user}\n                    show={this.state.showPasswordModal}\n                    onModalSubmit={this.doPasswordResetSubmit}\n                    onModalDismissed={this.doPasswordResetDismiss}\n                />\n                {deactivateMemberModal}\n                {this.state.addTeamOpen &&\n                    <TeamSelectorModal\n                        onModalDismissed={this.closeAddTeam}\n                        onTeamsSelected={this.addTeams}\n                        alreadySelected={this.state.teamIds}\n                    />\n                }\n            </div>\n        );\n    }\n}\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./system_user_detail.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nimport './abstract_list.scss';\n\nconst PAGE_SIZE = 10;\n\nexport default class AbstractList extends React.PureComponent {\n    static propTypes = {\n        userId: PropTypes.string.isRequired,\n        headerLabels: PropTypes.array.isRequired,\n        data: PropTypes.arrayOf(PropTypes.object),\n        onPageChangedCallback: PropTypes.func,\n        total: PropTypes.number.isRequired,\n        renderRow: PropTypes.func.isRequired,\n        emptyListTextId: PropTypes.string.isRequired,\n        emptyListTextDefaultMessage: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            getTeamsData: PropTypes.func.isRequired,\n            removeGroup: PropTypes.func,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        data: [],\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            page: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.performSearch(this.state.page);\n    }\n\n    previousPage = async (e) => {\n        e.preventDefault();\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page, loading: true});\n        this.performSearch(page);\n    }\n\n    nextPage = async (e) => {\n        e.preventDefault();\n        const page = this.state.page + 1;\n        this.setState({page, loading: true});\n        this.performSearch(page);\n    }\n\n    performSearch = () => {\n        const newState = {...this.state};\n        const userId = this.props.userId;\n        delete newState.page;\n\n        newState.loading = true;\n        this.setState(newState);\n\n        this.props.actions.getTeamsData(userId).then(() => {\n            if (this.props.onPageChangedCallback) {\n                this.props.onPageChangedCallback(this.getPaging());\n            }\n            this.setState({loading: false});\n        });\n    }\n\n    getPaging() {\n        const startCount = (this.state.page * PAGE_SIZE) + 1;\n        let endCount = (this.state.page * PAGE_SIZE) + PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        return {startCount, endCount, total};\n    }\n\n    renderHeaderLabels = () => {\n        return (\n            <React.Fragment>\n                {this.props.headerLabels.map((headerLabel, id) => (\n                    <div\n                        key={id}\n                        className='AbstractList__header-label'\n                        style={headerLabel.style}\n                    >{headerLabel.default}</div>\n                ))}\n            </React.Fragment>\n        );\n    }\n\n    renderRows = () => {\n        if (this.state.loading) {\n            return (\n                <div className='AbstractList__loading'>\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\n                </div>\n            );\n        }\n        if (this.props.data.length === 0) {\n            return (\n                <div className='AbstractList__empty'>\n                    <FormattedMessage\n                        id={this.props.emptyListTextId}\n                        defaultMessage={this.props.emptyListTextDefaultMessage}\n                    />\n                </div>\n            );\n        }\n        const pageStart = this.state.page < 1 ? 0 : (this.state.page * PAGE_SIZE); // ie 0, 10, 20, etc.\n        const pageEnd = this.state.page < 1 ? PAGE_SIZE : (this.state.page + 1) * PAGE_SIZE; // ie 10, 20, 30, etc.\n        const pageData = this.props.data.slice(pageStart, pageEnd).map(this.props.renderRow); // ie 0-10, 10-20, etc.\n        return pageData;\n    }\n\n    render = () => {\n        const {startCount, endCount, total} = this.getPaging();\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n        return (\n            <div className='AbstractList'>\n                <div className='AbstractList__header'>\n                    {this.renderHeaderLabels()}\n                </div>\n                <div className='AbstractList__body'>\n                    {this.renderRows()}\n                </div>\n                {total > 0 &&\n                    <div className='AbstractList__footer'>\n                        <div className='counter'>\n                            <FormattedMessage\n                                id='admin.team_channel_settings.list.paginatorCount'\n                                defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                                values={{\n                                    startCount,\n                                    endCount,\n                                    total,\n                                }}\n                            />\n                        </div>\n                        <button\n                            className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                            onClick={firstPage ? null : this.previousPage}\n                            disabled={firstPage}\n                        >\n                            <PreviousIcon/>\n                        </button>\n                        <button\n                            className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                            onClick={lastPage ? null : this.nextPage}\n                            disabled={lastPage}\n                        >\n                            <NextIcon/>\n                        </button>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./abstract_list.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {\n    getTeamsForUser,\n    getTeamMembersForUser,\n    removeUserFromTeam,\n    updateTeamMemberSchemeRoles,\n} from 'mattermost-redux/actions/teams';\n\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport TeamList from './team_list.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        locale: getCurrentLocale(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeamsData: getTeamsForUser,\n            getTeamMembersForUser,\n            removeUserFromTeam,\n            updateTeamMemberSchemeRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamList);","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AbstractList from './abstract_list.jsx';\nimport TeamRow from './team_row.jsx';\n\nconst headerLabels = [\n    {\n        id: t('admin.systemUserDetail.teamList.header.name'),\n        default: 'Name',\n        style: {\n            flexGrow: 1,\n            minWidth: '284px',\n            marginLeft: '16px',\n        },\n    },\n    {\n        id: t('admin.systemUserDetail.teamList.header.type'),\n        default: 'Type',\n        style: {\n            width: '150px',\n        },\n    },\n    {\n        id: t('admin.systemUserDetail.teamList.header.role'),\n        default: 'Role',\n        style: {\n            width: '150px',\n        },\n    },\n    {\n        style: {\n            width: '150px',\n        },\n    },\n];\n\nexport default class TeamList extends React.Component {\n    static propTypes = {\n        userId: PropTypes.string.isRequired,\n        locale: PropTypes.string.isRequired,\n        emptyListTextId: PropTypes.string.isRequired,\n        emptyListTextDefaultMessage: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            getTeamsData: PropTypes.func.isRequired,\n            getTeamMembersForUser: PropTypes.func.isRequired,\n            removeUserFromTeam: PropTypes.func.isRequired,\n            updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\n        }).isRequired,\n        userDetailCallback: PropTypes.func.isRequired,\n        refreshTeams: PropTypes.bool.isRequired,\n    }\n\n    static defaultProps = {\n        emptyListTextId: t('admin.team_settings.team_list.no_teams_found'),\n        emptyListTextDefaultMessage: 'No teams found',\n        refreshTeams: false,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            teamsWithMemberships: [],\n            serverError: null,\n        };\n    }\n\n    componentDidMount() {\n        this.getTeamsAndMemberships();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.refreshTeams !== this.props.refreshTeams) {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    getTeamsAndMemberships = async (userId = this.props.userId) => {\n        const teams = await this.props.actions.getTeamsData(userId);\n        const memberships = await this.props.actions.getTeamMembersForUser(userId);\n        return Promise.all([teams, memberships]).\n            then(this.mergeTeamsWithMemberships).\n            then((teamsWithMemberships) => {\n                this.setState({teamsWithMemberships});\n                this.props.userDetailCallback(teamsWithMemberships);\n            });\n    }\n\n    mergeTeamsWithMemberships = (data) => {\n        const teams = data[0].data;\n        const memberships = data[1].data;\n        let teamsWithMemberships = teams.map((object) => {\n            const results = memberships.filter((team) => team.team_id === object.id);\n            const team = {...object, ...results[0]};\n            return team;\n        });\n        teamsWithMemberships = filterAndSortTeamsByDisplayName(teamsWithMemberships, this.props.locale);\n        return teamsWithMemberships;\n    }\n\n    doRemoveUserFromTeam = async (teamId) => {\n        const {error} = await this.props.actions.removeUserFromTeam(teamId, this.props.userId);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    doMakeUserTeamAdmin = async (teamId) => {\n        const {error} = await this.props.actions.updateTeamMemberSchemeRoles(teamId, this.props.userId, true, true);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    doMakeUserTeamMember = async (teamId) => {\n        const {error} = await this.props.actions.updateTeamMemberSchemeRoles(teamId, this.props.userId, true, false);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    render() {\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='SystemUserDetail__error has-error'>\n                    <label className='has-error control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div>{serverError}</div>\n                <AbstractList\n                    headerLabels={headerLabels}\n                    renderRow={this.renderRow}\n                    total={this.state.teamsWithMemberships.length}\n                    data={this.state.teamsWithMemberships}\n                    actions={this.props.actions}\n                    emptyListTextId={this.props.emptyListTextId}\n                    emptyListTextDefaultMessage={this.props.emptyListTextDefaultMessage}\n                    userId={this.props.userId}\n                />\n            </React.Fragment>\n        );\n    }\n\n    renderRow = (item) => {\n        return (\n            <TeamRow\n                key={item.id}\n                team={item}\n                doRemoveUserFromTeam={this.doRemoveUserFromTeam}\n                doMakeUserTeamAdmin={this.doMakeUserTeamAdmin}\n                doMakeUserTeamMember={this.doMakeUserTeamMember}\n            />\n        );\n    }\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport EllipsisHorizontalIcon from 'components/widgets/icons/ellipsis_h_icon';\n\nimport Menu from 'components/widgets/menu/menu';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\n\nexport default class TeamListDropdown extends React.Component {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        doRemoveUserFromTeam: PropTypes.func.isRequired,\n        doMakeUserTeamAdmin: PropTypes.func.isRequired,\n        doMakeUserTeamMember: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: null,\n        };\n    }\n\n    render() {\n        const {team} = this.props;\n        const isAdmin = team.scheme_admin;\n        const isMember = team.scheme_user && !team.scheme_admin;\n        const isGuest = team.scheme_guest;\n        const showMakeTeamAdmin = !isAdmin && !isGuest;\n        const showMakeTeamMember = !isMember && !isGuest;\n\n        return (\n            <MenuWrapper>\n                <button\n                    id={`teamListDropdown_${team.id}`}\n                    className='dropdown-toggle theme color--link style--none'\n                    type='button'\n                    aria-expanded='true'\n                >\n                    <span className='SystemUserDetail__actions-menu-icon'><EllipsisHorizontalIcon/></span>\n                </button>\n                <div>\n                    <Menu\n                        openLeft={true}\n                        openUp={false}\n                        ariaLabel={localizeMessage('team_members_dropdown.menuAriaLabel', 'Team member role change')}\n                    >\n                        <Menu.ItemAction\n                            id='makeTeamAdmin'\n                            show={showMakeTeamAdmin}\n                            onClick={() => this.props.doMakeUserTeamAdmin(team.id)}\n                            text={localizeMessage('team_members_dropdown.makeAdmin', 'Make Team Admin')}\n                        />\n                        <Menu.ItemAction\n                            show={showMakeTeamMember}\n                            onClick={() => this.props.doMakeUserTeamMember(team.id)}\n                            text={localizeMessage('team_members_dropdown.makeMember', 'Make Team Member')}\n                        />\n                        <Menu.ItemAction\n                            id='removeFromTeam'\n                            show={true}\n                            onClick={() => this.props.doRemoveUserFromTeam(team.id)}\n                            text={localizeMessage('team_members_dropdown.leave_team', 'Remove From Team')}\n                            buttonClass='SystemUserDetail__action-remove-team'\n                        />\n                    </Menu>\n                </div>\n            </MenuWrapper>\n        );\n    }\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils';\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nimport './team_row.scss';\nimport TeamListDropdown from './team_list_dropdown';\n\nexport default class TeamRow extends React.Component {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        doRemoveUserFromTeam: PropTypes.func.isRequired,\n        doMakeUserTeamAdmin: PropTypes.func.isRequired,\n        doMakeUserTeamMember: PropTypes.func.isRequired,\n    };\n    renderTeamType = (team) => {\n        if (team.group_constrained) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamType.groupSync'}\n                    defaultMessage={'Group sync'}\n                />\n            );\n        }\n        if (team.allow_open_invite) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamType.anyoneCanJoin'}\n                    defaultMessage={'Anyone can join'}\n                />\n            );\n        }\n        return (\n            <FormattedMessage\n                id={'admin.systemUserDetail.teamList.teamType.inviteOnly'}\n                defaultMessage={'Invite only'}\n            />\n        );\n    }\n    renderTeamRole = (team) => {\n        if (team.scheme_guest) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamRole.guest'}\n                    defaultMessage={'Guest'}\n                />\n            );\n        }\n        if (team.scheme_admin && !team.scheme_guest) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamRole.admin'}\n                    defaultMessage={'Team Admin'}\n                />\n            );\n        }\n        if (team.scheme_user && !team.scheme_guest && !team.scheme_admin) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamRole.member'}\n                    defaultMessage={'Team Member'}\n                />\n            );\n        }\n        return null;\n    }\n    render = () => {\n        const {team} = this.props;\n        const teamIconUrl = Utils.imageURLForTeam(team);\n        return (\n            <div className={'TeamRow'}>\n                <div className='TeamRow__row'>\n                    <div className='TeamRow__team-name'>\n                        <div className='col-sm-auto'>\n                            <TeamIcon\n                                size='sm'\n                                url={teamIconUrl}\n                                name={team.display_name}\n                            />\n                        </div>\n                        <div className='col-md-auto'>\n                            <b>{team.display_name}</b>\n                            {team.description && (\n                                <div className='overflow--ellipsis text-nowrap TeamRow__team-description'>\n                                    {team.description}\n                                </div>)}\n                        </div>\n\n                    </div>\n\n                    <span className='TeamRow__description'>\n                        {this.renderTeamType(team)}\n                    </span>\n\n                    <span className='TeamRow__description'>\n                        {this.renderTeamRole(team)}\n                    </span>\n\n                    <span className='TeamRow__actions'>\n                        <TeamListDropdown\n                            team={team}\n                            doRemoveUserFromTeam={this.props.doRemoveUserFromTeam}\n                            doMakeUserTeamAdmin={this.props.doMakeUserTeamAdmin}\n                            doMakeUserTeamMember={this.props.doMakeUserTeamMember}\n                        />\n                    </span>\n                </div>\n            </div>\n        );\n    };\n}","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./team_row.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getTeams, getTeamStats} from 'mattermost-redux/actions/teams';\nimport {\n    getUser,\n    getUserAccessToken,\n    getProfiles,\n    searchProfiles,\n    revokeSessionsForAllUsers,\n} from 'mattermost-redux/actions/users';\nimport {logError} from 'mattermost-redux/actions/errors';\nimport {getTeamsList} from 'mattermost-redux/selectors/entities/teams';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {Stats} from 'mattermost-redux/constants';\n\nimport {loadProfilesAndTeamMembers, loadProfilesWithoutTeam} from 'actions/user_actions.jsx';\n\nimport {setSystemUsersSearch} from 'actions/views/search';\nimport {SearchUserTeamFilter} from 'utils/constants';\n\nimport SystemUsers from './system_users.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const mfaEnabled = config.EnableMultifactorAuthentication === 'true';\n    const enableUserAccessTokens = config.EnableUserAccessTokens === 'true';\n    const experimentalEnableAuthenticationTransfer = config.ExperimentalEnableAuthenticationTransfer === 'true';\n\n    const search = state.views.search.systemUsersSearch;\n    let totalUsers = 0;\n    let searchTerm = '';\n    let teamId = '';\n    let filter = '';\n    if (search) {\n        searchTerm = search.term || '';\n        teamId = search.team || '';\n        filter = search.filter || '';\n\n        if (!teamId || teamId === SearchUserTeamFilter.ALL_USERS) {\n            const stats = state.entities.admin.analytics || {[Stats.TOTAL_USERS]: 0, [Stats.TOTAL_INACTIVE_USERS]: 0};\n            totalUsers = stats[Stats.TOTAL_USERS] + stats[Stats.TOTAL_INACTIVE_USERS];\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\n            totalUsers = 0;\n        } else {\n            const stats = state.entities.teams.stats[teamId] || {total_member_count: 0};\n            totalUsers = stats.total_member_count;\n        }\n    }\n\n    return {\n        teams: getTeamsList(state),\n        siteName,\n        mfaEnabled,\n        totalUsers,\n        searchTerm,\n        teamId,\n        filter,\n        enableUserAccessTokens,\n        users: getUsers(state),\n        experimentalEnableAuthenticationTransfer,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n            getTeamStats,\n            getUser,\n            getUserAccessToken,\n            loadProfilesAndTeamMembers,\n            setSystemUsersSearch,\n            loadProfilesWithoutTeam,\n            getProfiles,\n            searchProfiles,\n            revokeSessionsForAllUsers,\n            logError,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsers);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getUser} from 'mattermost-redux/actions/users';\n\nimport SystemUsersList from './system_users_list.jsx';\nimport {getNonBotUsers} from './selectors.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const users = getNonBotUsers(state, ownProps.loading, ownProps.teamId, ownProps.term, ownProps.filter);\n    return {\n        users,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getUser,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsersList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getUser, getProfiles, getProfilesInTeam, getProfilesWithoutTeam, searchProfiles, searchProfilesInTeam} from 'mattermost-redux/selectors/entities/users';\n\nimport {userSelectorOptionsFromFilter} from 'utils/filter_users';\n\nconst ALL_USERS = '';\nconst NO_TEAM = 'no_team';\nconst USER_ID_LENGTH = 26;\n\nexport function getUsers(state, loading, teamId, term, filter) {\n    if (loading) {\n        // Show no users while loading.\n        return [];\n    }\n    const filters = userSelectorOptionsFromFilter(filter);\n    if (term) {\n        let users = [];\n        if (teamId) {\n            users = searchProfilesInTeam(state, teamId, term, false, filters);\n        } else {\n            users = searchProfiles(state, term, false, filters);\n        }\n\n        if (users.length === 0 && term.length === USER_ID_LENGTH) {\n            const user = getUser(state, term);\n            if (user) {\n                users = [user];\n            }\n        }\n\n        return users;\n    }\n\n    if (teamId === ALL_USERS) {\n        return getProfiles(state, filters);\n    } else if (teamId === NO_TEAM) {\n        return getProfilesWithoutTeam(state, filters);\n    }\n\n    return getProfilesInTeam(state, teamId, filters);\n}\n\nexport function getNonBotUsers(state, loading, teamId, term, filter) {\n    return getUsers(state, loading, teamId, term, filter).filter((user) => {\n        return !user.is_bot;\n    });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport ManageRolesModal from 'components/admin_console/manage_roles_modal';\nimport ManageTeamsModal from 'components/admin_console/manage_teams_modal';\nimport ManageTokensModal from 'components/admin_console/manage_tokens_modal';\nimport ResetPasswordModal from 'components/admin_console/reset_password_modal';\nimport ResetEmailModal from 'components/admin_console/reset_email_modal/reset_email_modal.jsx';\nimport SearchableUserList from 'components/searchable_user_list/searchable_user_list.jsx';\nimport UserListRowWithError from 'components/user_list_row_with_error';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport SystemUsersDropdown from '../system_users_dropdown';\n\nexport default class SystemUsersList extends React.Component {\n    static propTypes = {\n        users: PropTypes.arrayOf(PropTypes.object),\n        usersPerPage: PropTypes.number,\n        total: PropTypes.number,\n        nextPage: PropTypes.func,\n        search: PropTypes.func.isRequired,\n        focusOnMount: PropTypes.bool,\n        renderFilterRow: PropTypes.func,\n\n        teamId: PropTypes.string.isRequired,\n        filter: PropTypes.string.isRequired,\n        term: PropTypes.string.isRequired,\n        onTermChange: PropTypes.func.isRequired,\n\n        /**\n         * Whether MFA is licensed and enabled.\n         */\n        mfaEnabled: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not user access tokens are enabled.\n         */\n        enableUserAccessTokens: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not the experimental authentication transfer is enabled.\n         */\n        experimentalEnableAuthenticationTransfer: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n            getUser: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 0,\n\n            filter: props.filter,\n            teamId: props.teamId,\n            showManageTeamsModal: false,\n            showManageRolesModal: false,\n            showManageTokensModal: false,\n            showPasswordModal: false,\n            showEmailModal: false,\n            user: null,\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (prevState.teamId !== nextProps.teamId || prevState.filter !== nextProps.filter) {\n            return {\n                page: 0,\n                teamId: nextProps.teamId,\n                filter: nextProps.filter,\n            };\n        }\n        return null;\n    }\n\n    nextPage = () => {\n        this.setState({page: this.state.page + 1});\n\n        this.props.nextPage(this.state.page + 1);\n    }\n\n    previousPage = () => {\n        this.setState({page: this.state.page - 1});\n    }\n\n    search = (term) => {\n        this.props.search(term);\n\n        if (term !== '') {\n            this.setState({page: 0});\n        }\n    }\n\n    doManageTeams = (user) => {\n        this.setState({\n            showManageTeamsModal: true,\n            user,\n        });\n    }\n\n    doManageRoles = (user) => {\n        this.setState({\n            showManageRolesModal: true,\n            user,\n        });\n    }\n\n    doManageTokens = (user) => {\n        this.setState({\n            showManageTokensModal: true,\n            user,\n        });\n    }\n\n    doManageTeamsDismiss = () => {\n        this.setState({\n            showManageTeamsModal: false,\n            user: null,\n        });\n    }\n\n    doManageRolesDismiss = () => {\n        this.setState({\n            showManageRolesModal: false,\n            user: null,\n        });\n    }\n\n    doManageTokensDismiss = () => {\n        this.setState({\n            showManageTokensModal: false,\n            user: null,\n        });\n    }\n\n    doPasswordReset = (user) => {\n        this.setState({\n            showPasswordModal: true,\n            user,\n        });\n    }\n\n    doPasswordResetDismiss = () => {\n        this.setState({\n            showPasswordModal: false,\n            user: null,\n        });\n    }\n\n    doPasswordResetSubmit = (user) => {\n        this.props.actions.getUser(user.id);\n\n        this.setState({\n            showPasswordModal: false,\n            user: null,\n        });\n    }\n\n    doEmailReset = (user) => {\n        this.setState({\n            showEmailModal: true,\n            user,\n        });\n    }\n\n    doEmailResetDismiss = () => {\n        this.setState({\n            showEmailModal: false,\n            user: null,\n        });\n    }\n\n    doEmailResetSubmit = (user) => {\n        this.props.actions.getUser(user.id);\n\n        this.setState({\n            showEmailModal: false,\n            user: null,\n        });\n    }\n\n    getInfoForUser(user) {\n        const info = [];\n\n        if (user.auth_service) {\n            let service;\n            if (user.auth_service === Constants.LDAP_SERVICE || user.auth_service === Constants.SAML_SERVICE) {\n                service = user.auth_service.toUpperCase();\n            } else {\n                service = Utils.toTitleCase(user.auth_service);\n            }\n\n            info.push(\n                <FormattedMarkdownMessage\n                    key='admin.user_item.authServiceNotEmail'\n                    id='admin.user_item.authServiceNotEmail'\n                    defaultMessage='**Sign-in Method:** {service}'\n                    values={{\n                        service,\n                    }}\n                />\n            );\n        } else {\n            info.push(\n                <FormattedMarkdownMessage\n                    key='admin.user_item.authServiceEmail'\n                    id='admin.user_item.authServiceEmail'\n                    defaultMessage='**Sign-in Method:** Email'\n                />\n            );\n        }\n\n        info.push(', ');\n        const userID = user.id;\n        info.push(\n            <FormattedMarkdownMessage\n                key='admin.user_item.user_id'\n                id='admin.user_item.user_id'\n                defaultMessage='**User ID:** {userID}'\n                values={{\n                    userID,\n                }}\n            />\n        );\n\n        if (this.props.mfaEnabled) {\n            info.push(', ');\n\n            if (user.mfa_active) {\n                info.push(\n                    <FormattedMarkdownMessage\n                        key='admin.user_item.mfaYes'\n                        id='admin.user_item.mfaYes'\n                        defaultMessage='**MFA**: Yes'\n                    />\n                );\n            } else {\n                info.push(\n                    <FormattedMarkdownMessage\n                        key='admin.user_item.mfaNo'\n                        id='admin.user_item.mfaNo'\n                        defaultMessage='**MFA**: No'\n                    />\n                );\n            }\n        }\n\n        return info;\n    }\n\n    renderCount(count, total, startCount, endCount, isSearch) {\n        if (total) {\n            if (isSearch) {\n                return (\n                    <FormattedMessage\n                        id='system_users_list.countSearch'\n                        defaultMessage='{count, number} {count, plural, one {user} other {users}} of {total, number} total'\n                        values={{\n                            count,\n                            total,\n                        }}\n                    />\n                );\n            } else if (startCount !== 0 || endCount !== total) {\n                return (\n                    <FormattedMessage\n                        id='system_users_list.countPage'\n                        defaultMessage='{startCount, number} - {endCount, number} {count, plural, one {user} other {users}} of {total, number} total'\n                        values={{\n                            count,\n                            startCount: startCount + 1,\n                            endCount,\n                            total,\n                        }}\n                    />\n                );\n            }\n\n            return (\n                <FormattedMessage\n                    id='system_users_list.count'\n                    defaultMessage='{count, number} {count, plural, one {user} other {users}}'\n                    values={{\n                        count,\n                    }}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    render() {\n        const extraInfo = {};\n        if (this.props.users) {\n            for (const user of this.props.users) {\n                extraInfo[user.id] = this.getInfoForUser(user);\n            }\n        }\n\n        return (\n            <div>\n                <SearchableUserList\n                    {...this.props}\n                    renderCount={this.renderCount}\n                    extraInfo={extraInfo}\n                    actions={[SystemUsersDropdown]}\n                    actionProps={{\n                        mfaEnabled: this.props.mfaEnabled,\n                        enableUserAccessTokens: this.props.enableUserAccessTokens,\n                        experimentalEnableAuthenticationTransfer: this.props.experimentalEnableAuthenticationTransfer,\n                        doPasswordReset: this.doPasswordReset,\n                        doEmailReset: this.doEmailReset,\n                        doManageTeams: this.doManageTeams,\n                        doManageRoles: this.doManageRoles,\n                        doManageTokens: this.doManageTokens,\n                    }}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    search={this.search}\n                    page={this.state.page}\n                    term={this.props.term}\n                    onTermChange={this.props.onTermChange}\n                    rowComponentType={UserListRowWithError}\n                />\n                <ManageTeamsModal\n                    user={this.state.user}\n                    show={this.state.showManageTeamsModal}\n                    onModalDismissed={this.doManageTeamsDismiss}\n                />\n                <ManageRolesModal\n                    user={this.state.user}\n                    show={this.state.showManageRolesModal}\n                    onModalDismissed={this.doManageRolesDismiss}\n                />\n                <ManageTokensModal\n                    user={this.state.user}\n                    show={this.state.showManageTokensModal}\n                    onModalDismissed={this.doManageTokensDismiss}\n                />\n                <ResetPasswordModal\n                    user={this.state.user}\n                    show={this.state.showPasswordModal}\n                    onModalSubmit={this.doPasswordResetSubmit}\n                    onModalDismissed={this.doPasswordResetDismiss}\n                />\n                <ResetEmailModal\n                    user={this.state.user}\n                    show={this.state.showEmailModal}\n                    onModalSubmit={this.doEmailResetSubmit}\n                    onModalDismissed={this.doEmailResetDismiss}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {debounce} from 'mattermost-redux/actions/helpers';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {getStandardAnalytics} from 'actions/admin_actions.jsx';\nimport {Constants, UserSearchOptions, SearchUserTeamFilter, UserFilters} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n.jsx';\nimport {getUserOptionsFromFilter, searchUserOptionsFromFilter} from 'utils/filter_users';\n\nimport LocalizedInput from 'components/localized_input/localized_input';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\n\nimport SystemUsersList from './list';\n\nconst USER_ID_LENGTH = 26;\nconst USERS_PER_PAGE = 50;\n\nexport default class SystemUsers extends React.Component {\n    static propTypes = {\n\n        /*\n         * Array of team objects\n         */\n        teams: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /**\n         * Title of the app or site.\n         */\n        siteName: PropTypes.string,\n\n        /**\n         * Whether or not MFA is licensed and enabled.\n         */\n        mfaEnabled: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not user access tokens are enabled.\n         */\n        enableUserAccessTokens: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not the experimental authentication transfer is enabled.\n         */\n        experimentalEnableAuthenticationTransfer: PropTypes.bool.isRequired,\n        totalUsers: PropTypes.number.isRequired,\n        searchTerm: PropTypes.string.isRequired,\n        teamId: PropTypes.string.isRequired,\n        filter: PropTypes.string.isRequired,\n        users: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get teams\n             */\n            getTeams: PropTypes.func.isRequired,\n\n            /*\n             * Function to get statistics for a team\n             */\n            getTeamStats: PropTypes.func.isRequired,\n\n            /*\n             * Function to get a user\n             */\n            getUser: PropTypes.func.isRequired,\n\n            /*\n             * Function to get a user access token\n             */\n            getUserAccessToken: PropTypes.func.isRequired,\n            loadProfilesAndTeamMembers: PropTypes.func.isRequired,\n            loadProfilesWithoutTeam: PropTypes.func.isRequired,\n            getProfiles: PropTypes.func.isRequired,\n            setSystemUsersSearch: PropTypes.func.isRequired,\n            searchProfiles: PropTypes.func.isRequired,\n\n            /*\n             * Function to revoke all sessions in the system\n             */\n            revokeSessionsForAllUsers: PropTypes.func.isRequired,\n\n            /*\n            *  Function to log errors\n            */\n            logError: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            searching: false,\n            showRevokeAllSessionsModal: false,\n        };\n    }\n\n    componentDidMount() {\n        this.loadDataForTeam(this.props.teamId, this.props.filter);\n        this.props.actions.getTeams(0, 1000);\n    }\n\n    componentWillUnmount() {\n        this.props.actions.setSystemUsersSearch('', '', '');\n    }\n\n    loadDataForTeam = async (teamId, filter) => {\n        const {\n            getProfiles,\n            loadProfilesWithoutTeam,\n            loadProfilesAndTeamMembers,\n            getTeamStats,\n        } = this.props.actions;\n\n        if (this.props.searchTerm) {\n            this.doSearch(this.props.searchTerm, teamId, filter);\n            return;\n        }\n\n        const options = getUserOptionsFromFilter(filter);\n\n        if (teamId === SearchUserTeamFilter.ALL_USERS) {\n            await Promise.all([\n                getProfiles(0, Constants.PROFILE_CHUNK_SIZE, options),\n                getStandardAnalytics(),\n            ]);\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\n            await loadProfilesWithoutTeam(0, Constants.PROFILE_CHUNK_SIZE, options);\n        } else {\n            await Promise.all([\n                loadProfilesAndTeamMembers(0, Constants.PROFILE_CHUNK_SIZE, teamId, options),\n                getTeamStats(teamId),\n            ]);\n        }\n\n        this.setState({loading: false});\n    }\n\n    handleTeamChange = (e) => {\n        const teamId = e.target.value;\n        this.loadDataForTeam(teamId, this.props.filter);\n        this.props.actions.setSystemUsersSearch(this.props.searchTerm, teamId, this.props.filter);\n    }\n\n    handleFilterChange = (e) => {\n        const filter = e.target.value;\n        this.loadDataForTeam(this.props.teamId, filter);\n        this.props.actions.setSystemUsersSearch(this.props.searchTerm, this.props.teamId, filter);\n    }\n\n    handleTermChange = (term) => {\n        this.props.actions.setSystemUsersSearch(term, this.props.teamId, this.props.filter);\n    }\n    handleRevokeAllSessions = async () => {\n        const {data} = await this.props.actions.revokeSessionsForAllUsers();\n        if (data) {\n            emitUserLoggedOutEvent();\n        } else {\n            this.props.actions.logError({type: 'critical', message: 'Can\\'t revoke all sessions'});\n        }\n    }\n    handleRevokeAllSessionsCancel = () => {\n        this.setState({showRevokeAllSessionsModal: false});\n    }\n    handleShowRevokeAllSessionsModal = () => {\n        this.setState({showRevokeAllSessionsModal: true});\n    }\n\n    nextPage = async (page) => {\n        const {teamId, filter} = this.props;\n\n        // Paging isn't supported while searching\n        const {\n            getProfiles,\n            loadProfilesWithoutTeam,\n            loadProfilesAndTeamMembers,\n        } = this.props.actions;\n\n        const options = getUserOptionsFromFilter(filter);\n\n        if (teamId === SearchUserTeamFilter.ALL_USERS) {\n            await getProfiles(page + 1, USERS_PER_PAGE, options);\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\n            await loadProfilesWithoutTeam(page + 1, USERS_PER_PAGE, options);\n        } else {\n            await loadProfilesAndTeamMembers(page + 1, USERS_PER_PAGE, teamId, options);\n        }\n        this.setState({loading: false});\n    }\n\n    doSearch = debounce(async (term, teamId = this.props.teamId, filter = this.props.filter) => {\n        if (!term) {\n            return;\n        }\n\n        this.setState({loading: true});\n\n        const options = {\n            ...searchUserOptionsFromFilter(filter),\n            ...teamId && {team_id: teamId},\n            ...teamId === SearchUserTeamFilter.NO_TEAM && {\n                [UserSearchOptions.WITHOUT_TEAM]: true,\n            },\n            allow_inactive: true,\n        };\n\n        const {data: profiles} = await this.props.actions.searchProfiles(term, options);\n        if (profiles.length === 0 && term.length === USER_ID_LENGTH) {\n            await this.getUserByTokenOrId(term);\n        }\n\n        this.setState({loading: false});\n    }, Constants.SEARCH_TIMEOUT_MILLISECONDS);\n\n    getUserById = async (id) => {\n        if (this.props.users[id]) {\n            this.setState({loading: false});\n            return;\n        }\n\n        await this.props.actions.getUser(id);\n        this.setState({loading: false});\n    }\n\n    getUserByTokenOrId = async (id) => {\n        if (this.props.enableUserAccessTokens) {\n            const {data} = await this.props.actions.getUserAccessToken(id);\n\n            if (data) {\n                this.setState({term: data.user_id});\n                this.getUserById(data.user_id);\n                return;\n            }\n        }\n\n        this.getUserById(id);\n    }\n\n    renderRevokeAllUsersModal = () => {\n        const title = (\n            <FormattedMessage\n                id='admin.system_users.revoke_all_sessions_modal_title'\n                defaultMessage='Revoke all sessions in the system'\n            />\n        );\n\n        const message = (\n            <div>\n                <FormattedMarkdownMessage\n                    id='admin.system_users.revoke_all_sessions_modal_message'\n                    defaultMessage='This action revokes all sessions in the system. All users will be logged out from all devices. Are you sure you want to revoke all sessions?'\n                />\n            </div>\n        );\n\n        const confirmButtonClass = 'btn btn-danger';\n        const revokeAllButton = (\n            <FormattedMessage\n                id='admin.system_users.revoke_all_sessions_button'\n                defaultMessage='Revoke All Sessions'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showRevokeAllSessionsModal}\n                title={title}\n                message={message}\n                confirmButtonClass={confirmButtonClass}\n                confirmButtonText={revokeAllButton}\n                onConfirm={this.handleRevokeAllSessions}\n                onCancel={this.handleRevokeAllSessionsCancel}\n            />\n        );\n    }\n\n    renderFilterRow = (doSearch) => {\n        const teams = this.props.teams.map((team) => (\n            <option\n                key={team.id}\n                value={team.id}\n            >\n                {team.display_name}\n            </option>\n        ));\n\n        return (\n            <div className='system-users__filter-row'>\n                <div className='system-users__filter'>\n                    <LocalizedInput\n                        id='searchUsers'\n                        className='form-control filter-textbox'\n                        placeholder={{id: t('filtered_user_list.search'), defaultMessage: 'Search users'}}\n                        onInput={doSearch}\n                    />\n                </div>\n                <label>\n                    <span className='system-users__team-filter-label'>\n                        <FormattedMessage\n                            id='filtered_user_list.team'\n                            defaultMessage='Team:'\n                        />\n                    </span>\n                    <select\n                        className='form-control system-users__team-filter'\n                        onChange={this.handleTeamChange}\n                        value={this.props.teamId}\n                    >\n                        <option value={SearchUserTeamFilter.ALL_USERS}>{Utils.localizeMessage('admin.system_users.allUsers', 'All Users')}</option>\n                        <option value={SearchUserTeamFilter.NO_TEAM}>{Utils.localizeMessage('admin.system_users.noTeams', 'No Teams')}</option>\n                        {teams}\n                    </select>\n                </label>\n                <label>\n                    <span className='system-users__filter-label'>\n                        <FormattedMessage\n                            id='filtered_user_list.userStatus'\n                            defaultMessage='User Status:'\n                        />\n                    </span>\n                    <select\n                        id='selectUserStatus'\n                        className='form-control system-users__filter'\n                        value={this.props.filter}\n                        onChange={this.handleFilterChange}\n                    >\n                        <option value=''>{Utils.localizeMessage('admin.system_users.allUsers', 'All Users')}</option>\n                        <option value={UserFilters.SYSTEM_ADMIN}>{Utils.localizeMessage('admin.system_users.system_admin', 'System Admin')}</option>\n                        <option value={UserFilters.SYSTEM_GUEST}>{Utils.localizeMessage('admin.system_users.guest', 'Guest')}</option>\n                        <option value={UserFilters.INACTIVE}>{Utils.localizeMessage('admin.system_users.inactive', 'Inactive')}</option>\n                    </select>\n                </label>\n            </div>\n        );\n    }\n\n    render() {\n        const revokeAllUsersModal = this.renderRevokeAllUsersModal();\n\n        return (\n            <div className='wrapper--fixed'>\n                <FormattedAdminHeader\n                    id='admin.system_users.title'\n                    defaultMessage='{siteName} Users'\n                    values={{\n                        siteName: this.props.siteName,\n                    }}\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='more-modal__list member-list-holder'>\n                            <SystemUsersList\n                                loading={this.state.loading}\n                                renderFilterRow={this.renderFilterRow}\n                                search={this.doSearch}\n                                nextPage={this.nextPage}\n                                usersPerPage={USERS_PER_PAGE}\n                                total={this.props.totalUsers}\n                                teams={this.props.teams}\n                                teamId={this.props.teamId}\n                                filter={this.props.filter}\n                                term={this.props.searchTerm}\n                                onTermChange={this.handleTermChange}\n                                mfaEnabled={this.props.mfaEnabled}\n                                enableUserAccessTokens={this.props.enableUserAccessTokens}\n                                experimentalEnableAuthenticationTransfer={this.props.experimentalEnableAuthenticationTransfer}\n                            />\n                        </div>\n                        <SystemPermissionGate permissions={[Permissions.REVOKE_USER_ACCESS_TOKEN]}>\n                            {revokeAllUsersModal}\n                            <div className='padding-top padding-bottom x2'>\n                                <button\n                                    id='revoke-all-users'\n                                    className='btn btn-default'\n                                    onClick={() => this.handleShowRevokeAllSessionsModal()}\n                                >\n                                    <FormattedMessage\n                                        id='admin.system_users.revokeAllSessions'\n                                        defaultMessage='Revoke All Sessions'\n                                    />\n                                </button>\n                            </div>\n                        </SystemPermissionGate>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {updateUserActive, revokeAllSessionsForUser, promoteGuestToUser, demoteUserToGuest} from 'mattermost-redux/actions/users';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {loadBots} from 'mattermost-redux/actions/bots';\n\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\n\nimport SystemUsersDropdown from './system_users_dropdown.jsx';\n\nfunction mapStateToProps(state) {\n    const bots = getBotAccounts(state);\n    return {\n        config: Selectors.getConfig(state),\n        currentUser: getCurrentUser(state),\n        bots,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateUserActive,\n            revokeAllSessionsForUser,\n            promoteGuestToUser,\n            demoteUserToGuest,\n            loadBots,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsersDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {adminResetMfa} from 'actions/admin_actions.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport {Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport {getSiteURL} from 'utils/url';\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Menu from 'components/widgets/menu/menu';\n\nconst ROWS_FROM_BOTTOM_TO_OPEN_UP = 5;\n\nexport default class SystemUsersDropdown extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * User to manage with dropdown\n         */\n        user: PropTypes.object.isRequired,\n\n        /**\n         * Whether MFA is licensed and enabled.\n         */\n        mfaEnabled: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not user access tokens are enabled.\n         */\n        enableUserAccessTokens: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not the experimental authentication transfer is enabled.\n         */\n        experimentalEnableAuthenticationTransfer: PropTypes.bool.isRequired,\n\n        /*\n         * Function to open password reset, takes user as an argument\n         */\n        doPasswordReset: PropTypes.func.isRequired,\n\n        /*\n         * Function to open email reset, takes user as an argument\n         */\n        doEmailReset: PropTypes.func.isRequired,\n\n        /*\n         * Function to open manage teams, takes user as an argument\n         */\n        doManageTeams: PropTypes.func.isRequired,\n\n        /*\n         * Function to open manage roles, takes user as an argument\n         */\n        doManageRoles: PropTypes.func.isRequired,\n\n        /*\n         * Function to open manage tokens, takes user as an argument\n         */\n        doManageTokens: PropTypes.func.isRequired,\n\n        /*\n         * The function to call when an error occurs\n         */\n        onError: PropTypes.func.isRequired,\n        currentUser: PropTypes.object.isRequired,\n        index: PropTypes.number.isRequired,\n        totalUsers: PropTypes.number.isRequired,\n        actions: PropTypes.shape({\n            updateUserActive: PropTypes.func.isRequired,\n            revokeAllSessionsForUser: PropTypes.func.isRequired,\n            promoteGuestToUser: PropTypes.func.isRequired,\n            demoteUserToGuest: PropTypes.func.isRequired,\n            loadBots: PropTypes.func.isRequired,\n        }).isRequired,\n        config: PropTypes.object.isRequired,\n        bots: PropTypes.object.isRequired,\n\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDeactivateMemberModal: false,\n            showRevokeSessionsModal: false,\n            showPromoteToUserModal: false,\n            showDemoteToGuestModal: false,\n            user: null,\n            role: null,\n        };\n    }\n\n    handleMakeActive = (e) => {\n        e.preventDefault();\n        this.props.actions.updateUserActive(this.props.user.id, true).\n            then(this.onUpdateActiveResult);\n    }\n\n    handleManageTeams = (e) => {\n        e.preventDefault();\n\n        this.props.doManageTeams(this.props.user);\n    }\n\n    handleManageRoles = (e) => {\n        e.preventDefault();\n\n        this.props.doManageRoles(this.props.user);\n    }\n\n    handleManageTokens = (e) => {\n        e.preventDefault();\n\n        this.props.doManageTokens(this.props.user);\n    }\n\n    handleResetPassword = (e) => {\n        e.preventDefault();\n        this.props.doPasswordReset(this.props.user);\n    }\n\n    handleResetEmail = (e) => {\n        e.preventDefault();\n        this.props.doEmailReset(this.props.user);\n    }\n\n    handleResetMfa = (e) => {\n        e.preventDefault();\n        adminResetMfa(this.props.user.id, null, this.props.onError);\n    }\n\n    handleShowDeactivateMemberModal = async (e) => {\n        e.preventDefault();\n        if (this.shouldDisableBotsWhenOwnerIsDeactivated()) {\n            await this.props.actions.loadBots(\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE,\n            );\n        }\n        this.setState({showDeactivateMemberModal: true});\n    }\n\n    handleDeactivateMember = () => {\n        this.props.actions.updateUserActive(this.props.user.id, false).\n            then(this.onUpdateActiveResult);\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    onUpdateActiveResult = ({error}) => {\n        if (error) {\n            this.props.onError({id: error.server_error_id, ...error});\n        }\n    }\n\n    handleDeactivateCancel = () => {\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    renderDeactivateMemberModal = () => {\n        const user = this.props.user;\n        const title = (\n            <FormattedMessage\n                id='deactivate_member_modal.title'\n                defaultMessage='Deactivate {username}'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const defaultMessage = (\n            <FormattedMarkdownMessage\n                id='deactivate_member_modal.desc'\n                defaultMessage='This action deactivates {username}. They will be logged out and not have access to any teams or channels on this system.\\n'\n                values={{\n                    username: user.username,\n                }}\n            />);\n\n        let warning;\n        if (user.auth_service !== '' && user.auth_service !== Constants.EMAIL_SERVICE) {\n            warning = (\n                <strong>\n                    <br/>\n                    <br/>\n                    <FormattedMessage\n                        id='deactivate_member_modal.sso_warning'\n                        defaultMessage='You must also deactivate this user in the SSO provider or they will be reactivated on next login or sync.'\n                    />\n                </strong>\n            );\n        }\n\n        const confirmationMessage = (\n            <FormattedMarkdownMessage\n                id='deactivate_member_modal.desc.confirm'\n                defaultMessage='Are you sure you want to deactivate {username}?'\n                values={{\n                    username: user.username,\n                }}\n            />);\n        let messageForUsersWithBotAccounts;\n        if (this.shouldDisableBotsWhenOwnerIsDeactivated()) {\n            for (const bot of Object.values(this.props.bots)) {\n                if ((bot.owner_id === user.id) && this.state.showDeactivateMemberModal && (bot.delete_at === 0)) {\n                    messageForUsersWithBotAccounts = (\n                        <FormattedMarkdownMessage\n                            id='deactivate_member_modal.desc.for_users_with_bot_accounts'\n                            defaultMessage='This action deactivates {username}.\\n \\n * They will be logged out and not have access to any teams or channels on this system.\\n * Bot accounts they manage will be disabled along with their integrations. To enable them again, go to [Integrations > Bot Accounts]({siteURL}/_redirect/integrations/bots). [Learn more about bot accounts](!https://mattermost.com/pl/default-bot-accounts).\\n \\n \\n'\n                            values={{\n                                username: user.username,\n                                siteURL: getSiteURL(),\n                            }}\n                        />);\n                    break;\n                }\n            }\n        }\n\n        const message = (\n            <div>\n                {messageForUsersWithBotAccounts || defaultMessage}\n                {confirmationMessage}\n                {warning}\n            </div>\n        );\n\n        const confirmButtonClass = 'btn btn-danger';\n        const deactivateMemberButton = (\n            <FormattedMessage\n                id='deactivate_member_modal.deactivate'\n                defaultMessage='Deactivate'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showDeactivateMemberModal}\n                title={title}\n                message={message}\n                confirmButtonClass={confirmButtonClass}\n                confirmButtonText={deactivateMemberButton}\n                onConfirm={this.handleDeactivateMember}\n                onCancel={this.handleDeactivateCancel}\n            />\n        );\n    }\n\n    shouldDisableBotsWhenOwnerIsDeactivated() {\n        return this.props.config &&\n            this.props.config.ServiceSettings &&\n            this.props.config.ServiceSettings.DisableBotsWhenOwnerIsDeactivated;\n    }\n\n    handleShowRevokeSessionsModal = (e) => {\n        e.preventDefault();\n        this.setState({showRevokeSessionsModal: true});\n    }\n\n    handleRevokeSessions = async () => {\n        const me = this.props.currentUser;\n\n        const {data, error} = await this.props.actions.revokeAllSessionsForUser(this.props.user.id);\n        if (data && this.props.user.id === me.id) {\n            emitUserLoggedOutEvent();\n        } else if (error) {\n            this.props.onError(error);\n        }\n\n        this.setState({showRevokeSessionsModal: false});\n    }\n\n    handleRevokeSessionsCancel = () => {\n        this.setState({showRevokeSessionsModal: false});\n    }\n\n    handlePromoteToUser = () => {\n        this.setState({showPromoteToUserModal: true});\n    }\n\n    handlePromoteToUserConfirm = async () => {\n        const {error} = await this.props.actions.promoteGuestToUser(this.props.user.id);\n        if (error) {\n            this.props.onError(error);\n        }\n\n        this.setState({showPromoteToUserModal: false});\n    }\n\n    handlePromoteToUserCancel = () => {\n        this.setState({showPromoteToUserModal: false});\n    }\n\n    handleDemoteToGuest = () => {\n        this.setState({showDemoteToGuestModal: true});\n    }\n\n    handleDemoteToGuestConfirm = async () => {\n        const {error} = await this.props.actions.demoteUserToGuest(this.props.user.id);\n        if (error) {\n            this.props.onError(error);\n        }\n        this.setState({showDemoteToGuestModal: false});\n    }\n\n    handleDemoteToGuestCancel = () => {\n        this.setState({showDemoteToGuestModal: false});\n    }\n\n    renderPromoteToUserModal = () => {\n        const title = (\n            <FormattedMessage\n                id='promote_to_user_modal.title'\n                defaultMessage='Promote guest {username} to user'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='promote_to_user_modal.desc'\n                defaultMessage='This action promotes the guest {username} to a member. It will allow the user to join public channels and interact with users outside of the channels they are currently members of. Are you sure you want to promote guest {username} to user?'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const promoteUserButton = (\n            <FormattedMessage\n                id='promote_to_user_modal.promote'\n                defaultMessage='Promote'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showPromoteToUserModal}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={promoteUserButton}\n                onConfirm={this.handlePromoteToUserConfirm}\n                onCancel={this.handlePromoteToUserCancel}\n            />\n        );\n    }\n\n    renderDemoteToGuestModal = () => {\n        const title = (\n            <FormattedMessage\n                id='demote_to_user_modal.title'\n                defaultMessage='Demote user {username} to guest'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='demote_to_user_modal.desc'\n                defaultMessage={'This action demotes the user {username} to a guest. It will restrict the user\\'s ability to join public channels and interact with users outside of the channels they are currently members of. Are you sure you want to demote user {username} to guest?'}\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const demoteGuestButton = (\n            <FormattedMessage\n                id='demote_to_user_modal.demote'\n                defaultMessage='Demote'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showDemoteToGuestModal}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={demoteGuestButton}\n                onConfirm={this.handleDemoteToGuestConfirm}\n                onCancel={this.handleDemoteToGuestCancel}\n            />\n        );\n    }\n\n    renderRevokeSessionsModal = () => {\n        const title = (\n            <FormattedMessage\n                id='revoke_user_sessions_modal.title'\n                defaultMessage='Revoke Sessions for {username}'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='revoke_user_sessions_modal.desc'\n                defaultMessage='This action revokes all sessions for {username}. They will be logged out from all devices. Are you sure you want to revoke all sessions for {username}?'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const revokeUserButtonButton = (\n            <FormattedMessage\n                id='revoke_user_sessions_modal.revoke'\n                defaultMessage='Revoke'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showRevokeSessionsModal}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={revokeUserButtonButton}\n                onConfirm={this.handleRevokeSessions}\n                onCancel={this.handleRevokeSessionsCancel}\n            />\n        );\n    }\n\n    renderAccessToken = () => {\n        const userAccessTokensEnabled = this.props.enableUserAccessTokens;\n        if (!userAccessTokensEnabled) {\n            return null;\n        }\n\n        const user = this.props.user;\n        const hasPostAllRole = UserUtils.hasPostAllRole(user.roles);\n        const hasPostAllPublicRole = UserUtils.hasPostAllPublicRole(user.roles);\n        const hasUserAccessTokenRole = UserUtils.hasUserAccessTokenRole(user.roles);\n        const isSystemAdmin = UserUtils.isSystemAdmin(user.roles);\n\n        let messageId = '';\n        if (hasUserAccessTokenRole || isSystemAdmin) {\n            if (hasPostAllRole) {\n                messageId = t('admin.user_item.userAccessTokenPostAll');\n            } else if (hasPostAllPublicRole) {\n                messageId = t('admin.user_item.userAccessTokenPostAllPublic');\n            } else {\n                messageId = t('admin.user_item.userAccessTokenYes');\n            }\n        }\n\n        if (!messageId) {\n            return null;\n        }\n\n        return (\n            <div className='light margin-top half'>\n                <FormattedMessage\n                    key='admin.user_item.userAccessToken'\n                    id={messageId}\n                />\n            </div>\n        );\n    }\n\n    render() {\n        const {currentUser, user} = this.props;\n        const isGuest = Utils.isGuest(user);\n        if (!user) {\n            return <div/>;\n        }\n\n        let currentRoles = (\n            <FormattedMessage\n                id='admin.user_item.member'\n                defaultMessage='Member'\n            />\n        );\n\n        if (isGuest) {\n            currentRoles = (\n                <FormattedMessage\n                    id='team_members_dropdown.guest'\n                    defaultMessage='Guest'\n                />\n            );\n        }\n\n        if (user.roles.length > 0 && Utils.isSystemAdmin(user.roles)) {\n            currentRoles = (\n                <FormattedMessage\n                    id='team_members_dropdown.systemAdmin'\n                    defaultMessage='System Admin'\n                />\n            );\n        }\n\n        let showMakeActive = false;\n        let showMakeNotActive = !Utils.isSystemAdmin(user.roles);\n        let showManageTeams = true;\n        let showRevokeSessions = true;\n        const showMfaReset = this.props.mfaEnabled && Boolean(user.mfa_active);\n\n        if (user.delete_at > 0) {\n            currentRoles = (\n                <FormattedMessage\n                    id='admin.user_item.inactive'\n                    defaultMessage='Inactive'\n                />\n            );\n            showMakeActive = true;\n            showMakeNotActive = false;\n            showManageTeams = false;\n            showRevokeSessions = false;\n        }\n\n        let disableActivationToggle = false;\n        if (user.auth_service === Constants.LDAP_SERVICE) {\n            disableActivationToggle = true;\n        }\n\n        const deactivateMemberModal = this.renderDeactivateMemberModal();\n        const revokeSessionsModal = this.renderRevokeSessionsModal();\n        const promoteToUserModal = this.renderPromoteToUserModal();\n        const demoteToGuestModal = this.renderDemoteToGuestModal();\n\n        const {index, totalUsers} = this.props;\n        let openUp = false;\n        if (totalUsers > ROWS_FROM_BOTTOM_TO_OPEN_UP && totalUsers - index <= ROWS_FROM_BOTTOM_TO_OPEN_UP) {\n            openUp = true;\n        }\n\n        return (\n            <React.Fragment>\n                {deactivateMemberModal}\n                {revokeSessionsModal}\n                {promoteToUserModal}\n                {demoteToGuestModal}\n                <MenuWrapper>\n                    <div className='text-right'>\n                        <a>\n                            <span>{currentRoles} </span>\n                            <span className='caret'/>\n                        </a>\n                        {this.renderAccessToken()}\n                    </div>\n                    <Menu\n                        openLeft={true}\n                        openUp={openUp}\n                        ariaLabel={Utils.localizeMessage('admin.user_item.menuAriaLabel', 'User Actions Menu')}\n                    >\n                        <Menu.ItemAction\n                            show={showMakeActive}\n                            onClick={this.handleMakeActive}\n                            text={Utils.localizeMessage('admin.user_item.makeActive', 'Activate')}\n                            disabled={disableActivationToggle}\n                        />\n                        <Menu.ItemAction\n                            show={showMakeNotActive}\n                            onClick={this.handleShowDeactivateMemberModal}\n                            text={Utils.localizeMessage('admin.user_item.makeInactive', 'Deactivate')}\n                            disabled={disableActivationToggle}\n                        />\n                        <Menu.ItemAction\n                            show={!isGuest}\n                            onClick={this.handleManageRoles}\n                            text={Utils.localizeMessage('admin.user_item.manageRoles', 'Manage Roles')}\n                        />\n                        <Menu.ItemAction\n                            show={showManageTeams}\n                            onClick={this.handleManageTeams}\n                            text={Utils.localizeMessage('admin.user_item.manageTeams', 'Manage Teams')}\n                        />\n                        <Menu.ItemAction\n                            show={this.props.enableUserAccessTokens}\n                            onClick={this.handleManageTokens}\n                            text={Utils.localizeMessage('admin.user_item.manageTokens', 'Manage Tokens')}\n                        />\n                        <Menu.ItemAction\n                            show={showMfaReset}\n                            onClick={this.handleResetMfa}\n                            text={Utils.localizeMessage('admin.user_item.resetMfa', 'Remove MFA')}\n                        />\n                        <Menu.ItemAction\n                            show={Boolean(user.auth_service) && this.props.experimentalEnableAuthenticationTransfer}\n                            onClick={this.handleResetPassword}\n                            text={Utils.localizeMessage('admin.user_item.switchToEmail', 'Switch to Email/Password')}\n                        />\n                        <Menu.ItemAction\n                            show={!user.auth_service}\n                            onClick={this.handleResetPassword}\n                            text={Utils.localizeMessage('admin.user_item.resetPwd', 'Reset Password')}\n                        />\n                        <Menu.ItemAction\n                            show={!user.auth_service && user.id !== currentUser.id}\n                            onClick={this.handleResetEmail}\n                            text={Utils.localizeMessage('admin.user_item.resetEmail', 'Update Email')}\n                        />\n                        <Menu.ItemAction\n                            show={isGuest}\n                            onClick={this.handlePromoteToUser}\n                            text={Utils.localizeMessage('admin.user_item.promoteToUser', 'Promote to User')}\n                        />\n                        <Menu.ItemAction\n                            show={!isGuest && user.id !== currentUser.id}\n                            onClick={this.handleDemoteToGuest}\n                            text={Utils.localizeMessage('admin.user_item.demoteToGuest', 'Demote to Guest')}\n                        />\n                        <SystemPermissionGate permissions={[Permissions.REVOKE_USER_ACCESS_TOKEN]}>\n                            <Menu.ItemAction\n                                show={showRevokeSessions}\n                                onClick={this.handleShowRevokeSessionsModal}\n                                text={Utils.localizeMessage('admin.user_item.revokeSessions', 'Revoke Sessions')}\n                            />\n                        </SystemPermissionGate>\n                    </Menu>\n                </MenuWrapper>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nexport const PAGE_SIZE = 10;\n\nexport default class AbstractList extends React.PureComponent {\n    static propTypes = {\n        data: PropTypes.arrayOf(PropTypes.object),\n        onPageChangedCallback: PropTypes.func,\n        total: PropTypes.number.isRequired,\n        header: PropTypes.node.isRequired,\n        renderRow: PropTypes.func.isRequired,\n        emptyListTextId: PropTypes.string.isRequired,\n        emptyListTextDefaultMessage: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            getData: PropTypes.func.isRequired,\n            removeGroup: PropTypes.func,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        data: [],\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            page: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.performSearch(this.state.page);\n    }\n\n    previousPage = async (e) => {\n        e.preventDefault();\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page, loading: true});\n        this.performSearch(page);\n    }\n\n    nextPage = async (e) => {\n        e.preventDefault();\n        const page = this.state.page + 1;\n        this.setState({page, loading: true});\n        this.performSearch(page);\n    }\n\n    renderRows = () => {\n        if (this.state.loading) {\n            return (\n                <div className='groups-list-loading'>\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\n                </div>\n            );\n        }\n        if (this.props.data.length === 0) {\n            return (\n                <div className='groups-list-empty'>\n                    <FormattedMessage\n                        id={this.props.emptyListTextId}\n                        defaultMessage={this.props.emptyListTextDefaultMessage}\n                    />\n                </div>\n            );\n        }\n        const offset = this.state.page * PAGE_SIZE;\n        return this.props.data.slice(offset, offset + PAGE_SIZE).map(this.props.renderRow);\n    }\n\n    performSearch = (page) => {\n        const newState = {...this.state};\n        delete newState.page;\n\n        newState.loading = true;\n        this.setState(newState);\n\n        this.props.actions.getData(page, PAGE_SIZE).then((response) => {\n            if (this.props.onPageChangedCallback) {\n                this.props.onPageChangedCallback(this.getPaging(), response);\n            }\n            this.setState({loading: false});\n        });\n    }\n\n    getPaging() {\n        const startCount = (this.state.page * PAGE_SIZE) + 1;\n        let endCount = (this.state.page * PAGE_SIZE) + PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        return {startCount, endCount, total};\n    }\n\n    render = () => {\n        const {startCount, endCount, total} = this.getPaging();\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n        return (\n            <div className='groups-list groups-list-no-padding'>\n                {this.props.header}\n                <div className='groups-list--body'>\n                    {this.renderRows()}\n                </div>\n                {total > 0 && <div className='groups-list--footer'>\n                    <div className='counter'>\n                        <FormattedMessage\n                            id='admin.team_channel_settings.list.paginatorCount'\n                            defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                            values={{\n                                startCount,\n                                endCount,\n                                total,\n                            }}\n                        />\n                    </div>\n                    <button\n                        className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                        onClick={firstPage ? null : this.previousPage}\n                        disabled={firstPage}\n                    >\n                        <PreviousIcon/>\n                    </button>\n                    <button\n                        className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                        onClick={lastPage ? null : this.nextPage}\n                        disabled={lastPage}\n                        data-testid='page-link-next'\n                    >\n                        <NextIcon/>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport ChannelsList from 'components/admin_console/team_channel_settings/channel/list';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\n\nexport class ChannelsSettings extends React.Component {\n    static propTypes = {\n        siteName: PropTypes.string.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            startCount: 0,\n            endCount: 1,\n            total: 0,\n        };\n    }\n\n    onPageChangedCallback = ({startCount, endCount, total}) => {\n        this.setState({startCount, endCount, total});\n    }\n\n    render = () => {\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header'>\n                    <FormattedMessage\n                        id='admin.channel_settings.groupsPageTitle'\n                        defaultMessage='{siteName} Channels'\n                        values={{siteName: this.props.siteName}}\n                    />\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <AdminPanel\n                            id='channels'\n                            titleId={t('admin.channel_settings.title')}\n                            titleDefault='Channels'\n                            subtitleId={t('admin.channel_settings.description')}\n                            subtitleDefault={'Manage channel settings.'}\n                            subtitleValues={{...this.state}}\n                        >\n                            <ChannelsList onPageChangedCallback={this.onPageChangedCallback}/>\n                        </AdminPanel>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Groups} from 'mattermost-redux/constants';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport FormError from 'components/form_error';\nimport Constants from 'utils/constants';\n\nimport {NeedGroupsError, UsersWillBeRemovedError} from '../../errors';\nimport ConvertConfirmModal from '../../convert_confirm_modal';\nimport RemoveConfirmModal from '../../remove_confirm_modal';\nimport ConvertAndRemoveConfirmModal from '../../convert_and_remove_confirm_modal';\nimport SaveChangesPanel from '../../save_changes_panel';\n\nimport {ChannelModes} from './channel_modes';\nimport {ChannelGroups} from './channel_groups';\nimport {ChannelProfile} from './channel_profile';\n\nexport default class ChannelDetails extends React.Component {\n    static propTypes = {\n        channelID: PropTypes.string.isRequired,\n        channel: PropTypes.object.isRequired,\n        team: PropTypes.object.isRequired,\n        groups: PropTypes.arrayOf(PropTypes.object).isRequired,\n        totalGroups: PropTypes.number.isRequired,\n        allGroups: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            getGroups: PropTypes.func.isRequired,\n            linkGroupSyncable: PropTypes.func.isRequired,\n            unlinkGroupSyncable: PropTypes.func.isRequired,\n            membersMinusGroupMembers: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n            getChannel: PropTypes.func.isRequired,\n            getTeam: PropTypes.func.isRequired,\n            patchChannel: PropTypes.func.isRequired,\n            updateChannelPrivacy: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        channel: {display_name: '', id: ''},\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSynced: Boolean(props.channel.group_constrained),\n            isPublic: props.channel.type === Constants.OPEN_CHANNEL,\n            isDefault: props.channel.name === Constants.DEFAULT_CHANNEL,\n            isPrivacyChanging: false,\n            saving: false,\n            totalGroups: props.totalGroups,\n            showConvertConfirmModal: false,\n            showRemoveConfirmModal: false,\n            showConvertAndRemoveConfirmModal: false,\n            usersToRemove: 0,\n            groups: props.groups,\n            saveNeeded: false,\n            serverError: null,\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const {channel, totalGroups} = this.props;\n        if (channel.id !== prevProps.channel.id) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                totalGroups,\n                isSynced: Boolean(channel.group_constrained),\n                isPublic: channel.type === Constants.OPEN_CHANNEL,\n                isDefault: channel.name === Constants.DEFAULT_CHANNEL,\n            });\n        }\n\n        // If we don't have the team and channel on mount, we need to request the team after we load the channel\n        if (!prevProps.team.id && !prevProps.channel.team_id && channel.team_id) {\n            this.props.actions.getTeam(channel.team_id);\n        }\n    }\n\n    async componentDidMount() {\n        const {channelID, channel, team, actions} = this.props;\n        actions.getGroups(channelID).\n            then(() => actions.getChannel(channelID)).\n            then(() => this.setState({groups: this.props.groups}));\n\n        if (!team.id && channel.team_id) {\n            actions.getTeam(channel.team_id);\n        }\n    }\n\n    setToggles = (isSynced, isPublic) => {\n        const {channel} = this.props;\n        const isOriginallyPublic = (channel.type === Constants.OPEN_CHANNEL);\n        this.setState({\n            saveNeeded: true,\n            isSynced,\n            isPublic,\n            isPrivacyChanging: isPublic !== isOriginallyPublic,\n        }, () => this.processGroupsChange(this.state.groups));\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    async processGroupsChange(groups) {\n        const {actions, channelID} = this.props;\n        actions.setNavigationBlocked(true);\n\n        let serverError = null;\n        let usersToRemove = 0;\n        if (this.state.isSynced) {\n            try {\n                if (groups.length === 0) {\n                    serverError = <NeedGroupsError/>;\n                } else {\n                    const result = await actions.membersMinusGroupMembers(channelID, groups.map((g) => g.id));\n\n                    usersToRemove = result.data.total_count;\n                    if (usersToRemove > 0) {\n                        serverError = (\n                            <UsersWillBeRemovedError\n                                total={usersToRemove}\n                                users={result.data.users}\n                            />\n                        );\n                    }\n                }\n            } catch (ex) {\n                serverError = ex;\n            }\n        }\n        this.setState({groups, usersToRemove, saveNeeded: true, serverError});\n    }\n\n    handleGroupRemoved = (gid) => {\n        const groups = this.state.groups.filter((g) => g.id !== gid);\n        this.setState({totalGroups: this.state.totalGroups - 1});\n\n        this.processGroupsChange(groups);\n    }\n\n    handleGroupChange = (groupIDs) => {\n        const groups = [...this.state.groups, ...groupIDs.map((gid) => this.props.allGroups[gid])];\n        this.setState({totalGroups: this.state.totalGroups + groupIDs.length});\n\n        this.processGroupsChange(groups);\n    }\n\n    hideConvertConfirmModal = () => {\n        this.setState({showConvertConfirmModal: false});\n    }\n\n    hideRemoveConfirmModal = () => {\n        this.setState({showRemoveConfirmModal: false});\n    }\n\n    hideConvertAndRemoveConfirmModal = () => {\n        this.setState({showConvertAndRemoveConfirmModal: false});\n    }\n\n    onSave = () => {\n        const {channel} = this.props;\n        const {isSynced, usersToRemove} = this.state;\n        let {isPublic, isPrivacyChanging} = this.state;\n        const isOriginallyPublic = (channel.type === Constants.OPEN_CHANNEL);\n\n        if (isSynced) {\n            isPublic = false;\n            isPrivacyChanging = isOriginallyPublic;\n            this.setState({\n                isPublic,\n                isPrivacyChanging,\n            });\n            if (this.state.groups.length === 0) {\n                return;\n            }\n        }\n\n        if (isPrivacyChanging && usersToRemove > 0) {\n            this.setState({showConvertAndRemoveConfirmModal: true});\n            return;\n        }\n\n        if (isPrivacyChanging && usersToRemove === 0) {\n            this.setState({showConvertConfirmModal: true});\n            return;\n        }\n\n        if (!isPrivacyChanging && usersToRemove > 0) {\n            this.setState({showRemoveConfirmModal: true});\n            return;\n        }\n\n        this.handleSubmit();\n    }\n\n    handleSubmit = async () => {\n        this.setState({showConvertConfirmModal: false, showRemoveConfirmModal: false, showConvertAndRemoveConfirmModal: false, saving: true});\n        const {groups, isSynced, isPublic, isPrivacyChanging} = this.state;\n\n        let serverError = null;\n        let saveNeeded = false;\n\n        const {groups: origGroups, channelID, actions, channel} = this.props;\n        if (this.state.groups.length === 0 && isSynced) {\n            serverError = <NeedGroupsError/>;\n            saveNeeded = true;\n        } else {\n            const promises = [];\n            if (isPrivacyChanging) {\n                const convert = actions.updateChannelPrivacy(channel.id, isPublic ? Constants.OPEN_CHANNEL : Constants.PRIVATE_CHANNEL);\n                promises.push(convert.then((res) => {\n                    if (res && res.error) {\n                        return res;\n                    }\n                    return actions.patchChannel(channel.id, {\n                        ...channel,\n                        group_constrained: isSynced,\n                    });\n                }));\n            } else {\n                promises.push(actions.patchChannel(channel.id, {\n                    ...channel,\n                    group_constrained: isSynced,\n                }));\n            }\n\n            const unlink = origGroups.filter((g) => !groups.includes(g)).map((g) => actions.unlinkGroupSyncable(g.id, channelID, Groups.SYNCABLE_TYPE_CHANNEL));\n            const link = groups.filter((g) => !origGroups.includes(g)).map((g) => actions.linkGroupSyncable(g.id, channelID, Groups.SYNCABLE_TYPE_CHANNEL, {auto_add: true}));\n            const result = await Promise.all([...promises, ...unlink, ...link]);\n            const resultWithError = result.find((r) => r.error);\n            if (resultWithError) {\n                serverError = <FormError error={resultWithError.error.message}/>;\n            } else {\n                await actions.getGroups(channelID);\n            }\n        }\n\n        this.setState({serverError, saving: false, saveNeeded});\n        actions.setNavigationBlocked(saveNeeded);\n    }\n\n    render = () => {\n        const {totalGroups, saving, saveNeeded, serverError, isSynced, isPublic, isDefault, groups, showConvertConfirmModal, showRemoveConfirmModal, showConvertAndRemoveConfirmModal, usersToRemove} = this.state;\n        const {channel, team} = this.props;\n        const missingGroup = (og) => !groups.find((g) => g.id === og.id);\n        const removedGroups = this.props.groups.filter(missingGroup);\n\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/channels'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.channel_settings.channel_detail.channel_configuration'\n                            defaultMessage='Channel Configuration'\n                        />\n                    </div>\n                </div>\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <ChannelProfile\n                            channel={channel}\n                            team={team}\n                        />\n\n                        <ConvertConfirmModal\n                            show={showConvertConfirmModal}\n                            onCancel={this.hideConvertConfirmModal}\n                            onConfirm={this.handleSubmit}\n                            displayName={channel.display_name || ''}\n                            toPublic={isPublic}\n                        />\n\n                        <RemoveConfirmModal\n                            show={showRemoveConfirmModal}\n                            onCancel={this.hideRemoveConfirmModal}\n                            onConfirm={this.handleSubmit}\n                            inChannel={true}\n                            amount={usersToRemove}\n                        />\n\n                        <ConvertAndRemoveConfirmModal\n                            show={showConvertAndRemoveConfirmModal}\n                            onCancel={this.hideConvertAndRemoveConfirmModal}\n                            onConfirm={this.handleSubmit}\n                            displayName={channel.display_name || ''}\n                            toPublic={isPublic}\n                            removeAmount={usersToRemove}\n                        />\n\n                        <ChannelModes\n                            isPublic={isPublic}\n                            isSynced={isSynced}\n                            isDefault={isDefault}\n                            onToggle={this.setToggles}\n                        />\n\n                        <ChannelGroups\n                            synced={isSynced}\n                            channel={channel}\n                            totalGroups={totalGroups}\n                            groups={groups}\n                            removedGroups={removedGroups}\n                            onAddCallback={this.handleGroupChange}\n                            onGroupRemoved={this.handleGroupRemoved}\n                        />\n                    </div>\n                </div>\n\n                <SaveChangesPanel\n                    saving={saving}\n                    saveNeeded={saveNeeded}\n                    onClick={this.onSave}\n                    serverError={serverError}\n                    cancelLink='/admin_console/user_management/channels'\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport ToggleModalButton from 'components/toggle_modal_button';\nimport AddGroupsToChannelModal from 'components/add_groups_to_channel_modal';\nimport GroupList from '../../group';\n\nexport const ChannelGroups = ({onGroupRemoved, onAddCallback, totalGroups, groups, removedGroups, channel, synced}) => (\n    <AdminPanel\n        id='channel_groups'\n        titleId={synced ? t('admin.channel_settings.channel_detail.syncedGroupsTitle') : t('admin.channel_settings.channel_detail.groupsTitle')}\n        titleDefault={synced ? 'Synced Groups' : 'Groups'}\n        subtitleId={synced ? t('admin.channel_settings.channel_detail.syncedGroupsDescription') : t('admin.channel_settings.channel_detail.groupsDescription')}\n        subtitleDefault={synced ? 'Add and remove team members based on their group membership on the next scheduled sync.' : 'Group members will be added to the channel based on your sync schedule.'}\n        button={\n            <ToggleModalButton\n                className='btn btn-primary'\n                dialogType={AddGroupsToChannelModal}\n                dialogProps={{\n                    channel,\n                    onAddCallback,\n                    skipCommit: true,\n                    includeGroups: removedGroups,\n                    excludeGroups: groups,\n                }}\n            >\n                <FormattedMessage\n                    id='admin.channel_settings.channel_details.add_group'\n                    defaultMessage='Add Group'\n                />\n            </ToggleModalButton>}\n    >\n        {channel.id && (\n            <GroupList\n                channel={channel}\n                groups={groups}\n                totalGroups={totalGroups}\n                onGroupRemoved={onGroupRemoved}\n                isModeSync={synced}\n            />\n        )}\n\n    </AdminPanel>);\n\nChannelGroups.propTypes = {\n    synced: PropTypes.bool.isRequired,\n    channel: PropTypes.object.isRequired,\n    onAddCallback: PropTypes.func.isRequired,\n    totalGroups: PropTypes.number.isRequired,\n    groups: PropTypes.arrayOf(PropTypes.object).isRequired,\n    removedGroups: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onGroupRemoved: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LineSwitch from '../../line_switch';\n\nconst SyncGroupsToggle = ({isSynced, isPublic, isDefault, onToggle}) => (\n    <LineSwitch\n        disabled={isDefault}\n        toggled={isSynced}\n        last={isSynced}\n        onToggle={() => {\n            if (isDefault) {\n                return;\n            }\n            onToggle(!isSynced, isPublic);\n        }}\n        title={(\n            <FormattedMessage\n                id='admin.channel_settings.channel_details.syncGroupMembers'\n                defaultMessage='Sync Group Members'\n            />\n        )}\n        subTitle={(\n            <FormattedMarkdownMessage\n                id='admin.channel_settings.channel_details.syncGroupMembersDescr'\n                defaultMessage='When enabled, adding and removing users from groups will add or remove them from this channel. The only way of inviting members to this channel is by adding the groups they belong to. [Learn More](!https://www.mattermost.com/pl/default-ldap-group-constrained-team-channel.html)'\n            />\n        )}\n    />);\n\nSyncGroupsToggle.propTypes = {\n    isPublic: PropTypes.bool.isRequired,\n    isSynced: PropTypes.bool.isRequired,\n    isDefault: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n\nconst AllowAllToggle = ({isSynced, isPublic, isDefault, onToggle}) =>\n    !isSynced && (\n        <LineSwitch\n            disabled={isDefault}\n            toggled={isPublic}\n            last={isPublic}\n            onToggle={() => {\n                if (isDefault) {\n                    return;\n                }\n                onToggle(isSynced, !isPublic);\n            }}\n            title={(\n                <FormattedMessage\n                    id='admin.channel_settings.channel_details.isPublic'\n                    defaultMessage='Public channel or private channel'\n                />\n            )}\n            subTitle={isDefault ? (\n                <FormattedMessage\n                    id='admin.channel_settings.channel_details.isDefaultDescr'\n                    defaultMessage='This default channel cannot be converted into a private channel.'\n                />\n            ) :\n                (\n                    <FormattedMessage\n                        id='admin.channel_settings.channel_details.isPublicDescr'\n                        defaultMessage='If `public` the channel is discoverable and any user can join, or if `private` invitations are required. Toggle to convert public channels to private.  Converting private channels to public will be available in a future release.'\n                    />\n                )\n            }\n            onText={(\n                <FormattedMessage\n                    id='channel_toggle_button.public'\n                    defaultMessage='Public'\n                />\n            )}\n            offText={(\n                <FormattedMessage\n                    id='channel_toggle_button.private'\n                    defaultMessage='Private'\n                />\n            )}\n        />);\n\nAllowAllToggle.propTypes = {\n    isPublic: PropTypes.bool.isRequired,\n    isSynced: PropTypes.bool.isRequired,\n    isDefault: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n\nexport const ChannelModes = ({isPublic, isSynced, isDefault, onToggle}) => (\n    <AdminPanel\n        id='channel_manage'\n        titleId={t('admin.channel_settings.channel_detail.manageTitle')}\n        titleDefault='Channel Management'\n        subtitleId={t('admin.channel_settings.channel_detail.manageDescription')}\n        subtitleDefault='Choose between inviting members manually or syncing members automatically from groups.'\n    >\n        <div className='group-teams-and-channels'>\n            <div className='group-teams-and-channels--body'>\n                <SyncGroupsToggle\n                    isPublic={isPublic}\n                    isSynced={isSynced}\n                    isDefault={isDefault}\n                    onToggle={onToggle}\n                />\n                <AllowAllToggle\n                    isPublic={isPublic}\n                    isSynced={isSynced}\n                    isDefault={isDefault}\n                    onToggle={onToggle}\n                />\n            </div>\n        </div>\n    </AdminPanel>);\n\nChannelModes.propTypes = {\n    isPublic: PropTypes.bool.isRequired,\n    isSynced: PropTypes.bool.isRequired,\n    isDefault: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport const ChannelProfile = ({team, channel}) => (\n    <AdminPanel\n        id='channel_profile'\n        titleId={t('admin.channel_settings.channel_detail.profileTitle')}\n        titleDefault='Channel Profile'\n        subtitleId={t('admin.channel_settings.channel_detail.profileDescription')}\n        subtitleDefault='Summary of the channel, including the channel name.'\n    >\n\n        <div className='group-teams-and-channels'>\n\n            <div className='group-teams-and-channels--body'>\n                <FormattedMarkdownMessage\n                    id='admin.channel_settings.channel_detail.channelName'\n                    defaultMessage='**Name**'\n                />\n                <br/>\n                {channel.name}\n                <br/>\n                <FormattedMarkdownMessage\n                    id='admin.channel_settings.channel_detail.channelTeam'\n                    defaultMessage='**Team**'\n                />\n                <br/>\n                {team.display_name}\n            </div>\n        </div>\n\n    </AdminPanel>);\n\nChannelProfile.propTypes = {\n    channel: PropTypes.object.isRequired,\n    team: PropTypes.object.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\n\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getAllGroups, getGroupsAssociatedToChannel} from 'mattermost-redux/selectors/entities/groups';\nimport {getChannel as fetchChannel, membersMinusGroupMembers, patchChannel, updateChannelPrivacy} from 'mattermost-redux/actions/channels';\nimport {getTeam as fetchTeam} from 'mattermost-redux/actions/teams';\n\nimport {\n    getGroupsAssociatedToChannel as fetchAssociatedGroups,\n    linkGroupSyncable,\n    unlinkGroupSyncable,\n} from 'mattermost-redux/actions/groups';\n\nimport {connect} from 'react-redux';\n\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {setNavigationBlocked} from 'actions/admin_actions';\n\nimport ChannelDetails from './channel_details';\n\nfunction mapStateToProps(state, props) {\n    const channelID = props.match.params.channel_id;\n    const channel = getChannel(state, channelID) || {};\n    const team = getTeam(state, channel.team_id) || {};\n    const groups = getGroupsAssociatedToChannel(state, channelID);\n    const associatedGroups = state.entities.channels.groupsAssociatedToChannel;\n    const allGroups = getAllGroups(state, channel.team_id);\n    const totalGroups = associatedGroups && associatedGroups[channelID] && associatedGroups[channelID].totalCount ? associatedGroups[channelID].totalCount : 0;\n    return {\n        channel,\n        team,\n        allGroups,\n        totalGroups,\n        groups,\n        channelID,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getChannel: fetchChannel,\n            getTeam: fetchTeam,\n            getGroups: fetchAssociatedGroups,\n            linkGroupSyncable,\n            unlinkGroupSyncable,\n            membersMinusGroupMembers,\n            patchChannel,\n            setNavigationBlocked,\n            updateChannelPrivacy,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelDetails);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {connect} from 'react-redux';\n\nimport {ChannelsSettings} from './channel_settings';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n\n    return {\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelsSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {Constants} from 'utils/constants';\n\nimport AbstractList, {PAGE_SIZE} from 'components/admin_console/team_channel_settings/abstract_list.jsx';\nimport {browserHistory} from 'utils/browser_history';\n\nimport SearchIcon from 'components/widgets/icons/search_icon';\n\nimport ChannelRow from './channel_row';\n\nexport default class ChannelList extends React.PureComponent {\n    static propTypes = {\n        actions: PropTypes.shape({\n            searchAllChannels: PropTypes.func.isRequired,\n            getData: PropTypes.func.isRequired,\n        }).isRequired,\n        data: PropTypes.array,\n        total: PropTypes.number,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchString: '',\n            channels: [],\n            searchTotalCount: 0,\n            pageResetKey: 0,\n        };\n    }\n\n    searchBar = () => {\n        return (\n            <div className='groups-list--global-actions'>\n                <div className='group-list-search'>\n                    <input\n                        type='text'\n                        placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                        onKeyUp={this.handleChannelSearchKeyUp}\n                        onChange={this.searchBarChangeHandler}\n                        value={this.state.searchString}\n                        data-testid='search-input'\n                    />\n                    <SearchIcon\n                        id='searchIcon'\n                        className='search__icon'\n                        aria-hidden='true'\n                    />\n                    <i\n                        className={'fa fa-times-circle group-filter-action ' + (this.state.searchString.length ? '' : 'hidden')}\n                        onClick={this.resetSearch}\n                        data-testid='clear-search'\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    searchBarChangeHandler = (e) => {\n        this.setState({searchString: e.target.value});\n    }\n\n    handleChannelSearchKeyUp = async (e) => {\n        const {key} = e;\n        const {searchString} = this.state;\n\n        if (key === Constants.KeyCodes.ENTER[0]) {\n            if (searchString.length > 1) {\n                const response = await this.props.actions.searchAllChannels(searchString, '', false, 0, PAGE_SIZE);\n                this.setState({searchMode: true, channels: response.data.channels, searchTotalCount: response.data.total_count, pageResetKey: Date.now()});\n            }\n        }\n\n        if (searchString.length === 0) {\n            this.resetSearch();\n        }\n    }\n\n    getDataBySearch = async (page, perPage) => {\n        const response = await this.props.actions.searchAllChannels(this.state.searchString, '', false, page, perPage);\n        const channels = new Array(page * perPage); // Pad the array with empty entries because AbstractList expects to slice the results based on the pagination offset.\n        return channels.concat(response.data.channels);\n    }\n\n    resetSearch = () => {\n        this.setState({searchString: '', channels: [], searchMode: false, searchTotalCount: 0, pageResetKey: Date.now()});\n    }\n\n    header() {\n        return (\n            <>\n                {this.searchBar()}\n                <div className='groups-list--header'>\n                    <div className='group-name adjusted'>\n                        <FormattedMessage\n                            id='admin.channel_settings.channel_list.nameHeader'\n                            defaultMessage='Name'\n                        />\n                    </div>\n                    <div className='group-content'>\n                        <div className='group-description'>\n                            <FormattedMessage\n                                id='admin.channel_settings.channel_list.teamHeader'\n                                defaultMessage='Team'\n                            />\n                        </div>\n                        <div className='group-description adjusted'>\n                            <FormattedMessage\n                                id='admin.channel_settings.channel_list.managementHeader'\n                                defaultMessage='Management'\n                            />\n                        </div>\n                        <div className='group-actions'/>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n    onPageChangedCallback = (pagination, channels) => {\n        if (this.state.searchMode) {\n            this.setState({channels});\n        }\n    }\n\n    render() {\n        const absProps = {...this.props};\n        if (this.state.searchMode) {\n            absProps.actions.getData = this.getDataBySearch;\n        }\n        return (\n            <AbstractList\n                header={this.header()}\n                renderRow={this.renderRow}\n                {...absProps}\n                key={this.state.pageResetKey}\n                onPageChangedCallback={this.onPageChangedCallback}\n                data={this.state.searchMode ? this.state.channels : this.props.data}\n                total={this.state.searchMode ? this.state.searchTotalCount : this.props.total}\n            />);\n    }\n\n    renderRow = (item) => {\n        return (\n            <ChannelRow\n                key={item.id}\n                channel={item}\n                onRowClick={this.onChannelClick}\n            />\n        );\n    }\n\n    onChannelClick = (id) => {\n        browserHistory.push(`/admin_console/user_management/channels/${id}`);\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport GlobeIcon from 'components/widgets/icons/globe_icon';\nimport LockIcon from 'components/widgets/icons/lock_icon';\n\nexport default class ChannelRow extends React.Component {\n    static propTypes = {\n        channel: PropTypes.object.isRequired,\n        onRowClick: PropTypes.func.isRequired,\n    };\n\n    handleRowClick = () => {\n        const {channel, onRowClick} = this.props;\n        onRowClick(channel.id);\n    }\n    render = () => {\n        const {channel} = this.props;\n        return (\n            <div\n                className={'group '}\n                onClick={this.handleRowClick}\n            >\n                <div className='group-row'>\n                    <span\n                        className='group-name overflow--ellipsis row-content'\n                        data-testid='channel-display-name'\n                    >\n                        {channel.type === Constants.PRIVATE_CHANNEL ? <LockIcon className='channel-icon channel-icon__lock'/> : <GlobeIcon className='channel-icon channel-icon__globe'/>}\n                        {channel.display_name}\n                    </span>\n                    <span className='group-description row-content'>\n                        {channel.team_name}\n                    </span>\n                    <span className='group-description adjusted row-content'>\n                        <FormattedMessage\n                            id={`admin.channel_settings.channel_row.managementMethod.${channel.group_constrained ? 'group' : 'manual'}`}\n                            defaultMessage={channel.group_constrained ? 'Group Sync' : 'Manual Invites'}\n                        />\n                    </span>\n                    <span className='group-actions'>\n                        <Link to={`/admin_console/user_management/channels/${channel.id}`}>\n                            <FormattedMessage\n                                id='admin.channel_settings.channel_row.configure'\n                                defaultMessage='Edit'\n                            />\n                        </Link>\n                    </span>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {getAllChannelsWithCount as getData, searchAllChannels} from 'mattermost-redux/actions/channels';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\n\nimport {t} from 'utils/i18n';\n\nimport {Constants} from 'utils/constants';\n\nimport List from './channel_list.jsx';\n\nconst compareByDisplayName = (a, b) => a.display_name.localeCompare(b.display_name);\n\nconst getSortedListOfChannels = createSelector(\n    getAllChannels,\n    (teams) => Object.values(teams).\n        filter((c) => (c.type === Constants.OPEN_CHANNEL || c.type === Constants.PRIVATE_CHANNEL) && c.delete_at === 0).\n        sort(compareByDisplayName)\n);\n\nfunction mapStateToProps(state) {\n    return {\n        data: getSortedListOfChannels(state),\n        total: state.entities.channels.totalCount,\n        emptyListTextId: t('admin.channel_settings.channel_list.no_channels_found'),\n        emptyListTextDefaultMessage: 'No channels found',\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getData,\n            searchAllChannels,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nexport default class ConvertAndRemoveConfirmModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Bool whether the modal is shown\n         */\n        show: PropTypes.bool.isRequired,\n\n        /*\n         * Action to call on confirm\n         */\n        onConfirm: PropTypes.func.isRequired,\n\n        /*\n         * Action to call on cancel\n         */\n        onCancel: PropTypes.func.isRequired,\n\n        /*\n         * Channel display name\n         */\n        displayName: PropTypes.string.isRequired,\n\n        /*\n         * Channel privacy setting\n         */\n        toPublic: PropTypes.bool.isRequired,\n\n        /*\n         * Number of users to be removed\n         */\n        removeAmount: PropTypes.number.isRequired,\n    }\n\n    render() {\n        const {show, onConfirm, onCancel, displayName, toPublic, removeAmount} = this.props;\n\n        const toPublicMsg = 'When you convert **{displayName}** to a public channel, history and membership are preserved. Public channels are discoverable and can by joined by users on the system without invitation.  \\n \\nAre you sure you want to convert **{displayName}** to a public channel?';\n        const toPrivateMsg = 'When you convert **{displayName}** to a private channel, history and membership are preserved. Publicly shared files remain accessible to anyone with the link. Membership in a private channel is by invitation only.  \\n \\nAre you sure you want to convert **{displayName}** to a private channel?';\n        const convertMessageId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicMessage') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateMessage');\n\n        const toPublicTitle = 'Convert channel to public and remove {amount, number} {amount, plural, one {user} other {users}}?';\n        const toPrivateTitle = 'Convert channel to private and remove {amount, number} {amount, plural, one {user} other {users}}?';\n        const titleId = toPublic ? t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPublicTitle') :\n            t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPrivateTitle');\n\n        const toPublicConfirmMsg = 'Yes, convert channel to public and remove {amount, number} {amount, plural, one {user} other {users}}';\n        const toPrivateConfirmMsg = 'Yes, convert channel to private and remove {amount, number} {amount, plural, one {user} other {users}}';\n        const confirmMsgId = toPublic ? t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPublicConfirm') :\n            t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPrivateConfirm');\n\n        const title = (\n            <FormattedMessage\n                id={titleId}\n                defaultMessage={toPublic ? toPublicTitle : toPrivateTitle}\n                values={{displayName, amount: removeAmount}}\n            />\n        );\n\n        const message = (\n            <div>\n                <p>\n                    <FormattedMarkdownMessage\n                        id={convertMessageId}\n                        defaultMessage={toPublic ? toPublicMsg : toPrivateMsg}\n                        values={{displayName}}\n                    />\n                </p>\n                <p>\n                    <FormattedMessage\n                        id='admin.team_channel_settings.removeConfirmModal.messageChannel'\n                        defaultMessage='{amount, number} {amount, plural, one {user} other {users}} will be removed on the next AD/LDAP synchronization. They are not in groups linked to this channel. Are you sure you wish to remove these users?'\n                        values={{amount: removeAmount}}\n                    />\n                </p>\n            </div>\n        );\n\n        const confirmButton = (\n            <FormattedMessage\n                id={confirmMsgId}\n                defaultMessage={toPublic ? toPublicConfirmMsg : toPrivateConfirmMsg}\n                values={{amount: removeAmount}}\n            />\n        );\n\n        const cancelButton = (\n            <FormattedMessage\n                id='admin.team_channel_settings.convertAndRemoveConfirmModal.cancel'\n                defaultMessage='No, cancel'\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={'btn btn-primary'}\n                confirmButtonText={confirmButton}\n                cancelButtonClass={'bnt bnt-link'}\n                cancelButtonText={cancelButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nexport default class ConvertConfirmModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Bool whether the modal is shown\n         */\n        show: PropTypes.bool.isRequired,\n\n        /*\n         * Action to call on confirm\n         */\n        onConfirm: PropTypes.func.isRequired,\n\n        /*\n         * Action to call on cancel\n         */\n        onCancel: PropTypes.func.isRequired,\n\n        /*\n         * Channel display name\n         */\n        displayName: PropTypes.string.isRequired,\n\n        /*\n         * Channel privacy setting\n         */\n        toPublic: PropTypes.bool.isRequired,\n    }\n\n    render() {\n        const {displayName, toPublic} = this.props;\n\n        const toPublicMsg = 'When you convert **{displayName}** to a public channel, history and membership are preserved. Public channels are discoverable and can by joined by users on the system without invitation.  \\n \\nAre you sure you want to convert **{displayName}** to a public channel?';\n        const toPrivateMsg = 'When you convert **{displayName}** to a private channel, history and membership are preserved. Publicly shared files remain accessible to anyone with the link. Membership in a private channel is by invitation only.  \\n \\nAre you sure you want to convert **{displayName}** to a private channel?';\n        const messageId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicMessage') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateMessage');\n\n        const toPublicTitle = 'Convert {displayName} to a public channel?';\n        const toPrivateTitle = 'Convert {displayName} to a private channel?';\n        const titleId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicTitle') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateTitle');\n\n        const toPublicConfirmMsg = 'Yes, convert to public channel';\n        const toPrivateConfirmMsg = 'Yes, convert to private channel';\n        const confirmMsgId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicConfirm') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateConfirm');\n\n        const title = (\n            <FormattedMessage\n                id={titleId}\n                defaultMessage={toPublic ? toPublicTitle : toPrivateTitle}\n                values={{displayName}}\n            />\n        );\n\n        const message = (\n            <FormattedMarkdownMessage\n                id={messageId}\n                defaultMessage={toPublic ? toPublicMsg : toPrivateMsg}\n                values={{displayName}}\n            />\n        );\n\n        const confirmButton = (\n            <FormattedMessage\n                id={confirmMsgId}\n                defaultMessage={toPublic ? toPublicConfirmMsg : toPrivateConfirmMsg}\n            />\n        );\n\n        const cancelButton = (\n            <FormattedMessage\n                id='admin.team_channel_settings.convertConfirmModal.cancel'\n                defaultMessage='No, cancel'\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        const {show, onConfirm, onCancel} = this.props;\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={'btn btn-primary'}\n                confirmButtonText={confirmButton}\n                cancelButtonClass={'bnt bnt-link'}\n                cancelButtonText={cancelButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as PropTypes from 'prop-types';\n\nimport FormError from 'components/form_error';\n\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\n\nimport UsersToBeRemovedModal from './users_to_be_removed_modal';\n\nexport const NeedGroupsError = ({warning}) => (\n    <FormError\n        iconClassName={`fa-exclamation-${warning ? 'circle' : 'triangle'}`}\n        textClassName={`has-${warning ? 'warning' : 'error'}`}\n        error={(\n            <FormattedMessage\n                id='admin.team_channel_settings.need_groups'\n                defaultMessage='You must add at least one group to manage this team by sync group members.'\n            />)}\n    />\n);\n\nexport const NeedDomainsError = () => (\n    <FormError\n        error={(\n            <FormattedMessage\n                id='admin.team_channel_settings.need_domains'\n                defaultMessage='Please specify emails domains.'\n            />)}\n    />\n);\n\nNeedGroupsError.propTypes = {\n    warning: PropTypes.bool,\n};\n\nexport class UsersWillBeRemovedError extends React.PureComponent {\n    static propTypes = {\n        users: PropTypes.arrayOf(PropTypes.object).isRequired,\n        total: PropTypes.number.isRequired,\n    }\n\n    render() {\n        const {total, users} = this.props;\n        return (\n            <FormError\n                iconClassName='fa-exclamation-triangle'\n                textClassName='has-warning'\n                error={(\n                    <span>\n                        <FormattedMessage\n                            id='admin.team_channel_settings.users_will_be_removed'\n                            defaultMessage='{amount, number} {amount, plural, one {User} other {Users}} will be removed from this team. They are not in groups linked to this team.'\n                            values={{amount: total}}\n                        />\n                        <ToggleModalButton\n                            className='btn btn-link'\n                            dialogType={UsersToBeRemovedModal}\n                            dialogProps={{total, users}}\n                        >\n                            <FormattedMessage\n                                id='admin.team_channel_settings.view_removed_users'\n                                defaultMessage='View These Users'\n                            />\n                        </ToggleModalButton>\n                    </span>\n                )}\n            />\n\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport PropTypes from 'prop-types';\n\nimport AbstractList from 'components/admin_console/team_channel_settings/abstract_list.jsx';\n\nimport GroupRow from './group_row';\n\nconst Header = () => {\n    return (\n        <div className='groups-list--header'>\n            <div className='group-name group-name-adjusted'>\n                <FormattedMessage\n                    id='admin.team_channel_settings.group_list.nameHeader'\n                    defaultMessage='Name'\n                />\n            </div>\n            <div className='group-content'>\n                <div className='group-description group-description-adjusted'>\n                    <FormattedMessage\n                        id='admin.team_channel_settings.group_list.membersHeader'\n                        defaultMessage='Member Count'\n                    />\n                </div>\n                <div className='group-actions'/>\n            </div>\n        </div>\n    );\n};\n\nexport default class GroupList extends React.PureComponent {\n    static propTypes = {\n        removeGroup: PropTypes.func,\n    }\n\n    renderRow = (item) => {\n        return (\n            <GroupRow\n                key={item.id}\n                group={item}\n                removeGroup={this.props.removeGroup}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <AbstractList\n                header={<Header/>}\n                renderRow={this.renderRow}\n                {...this.props}\n            />);\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class GroupRow extends React.Component {\n    static propTypes = {\n        group: PropTypes.object.isRequired,\n        removeGroup: PropTypes.func.isRequired,\n    };\n\n    removeGroup = () => {\n        this.props.removeGroup(this.props.group.id);\n    }\n\n    render = () => {\n        const {group} = this.props;\n        return (\n            <div\n                className={'group'}\n            >\n                <div className='group-row'>\n                    <span className='group-name row-content'>\n                        {group.display_name || group.name}\n                    </span>\n                    <span className='group-description row-content'>\n                        <FormattedMessage\n                            id='admin.team_channel_settings.group_row.members'\n                            defaultMessage='{memberCount, number} {memberCount, plural, one {member} other {members}}'\n                            values={{memberCount: group.member_count}}\n                        />\n                    </span>\n                    <span className='group-actions'>\n                        <a\n                            href='#'\n                            onClick={this.removeGroup}\n                        >\n                            <FormattedMessage\n                                id='admin.team_channel_settings.group_row.remove'\n                                defaultMessage='Remove'\n                            />\n                        </a>\n                    </span>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nimport GroupUsersRow from './group_users_row';\n\nconst GROUP_MEMBERS_PAGE_SIZE = 10;\n\nexport default class AdminGroupUsers extends React.PureComponent {\n    static propTypes = {\n        members: PropTypes.arrayOf(PropTypes.object),\n        total: PropTypes.number.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 0,\n        };\n    }\n\n    previousPage = async () => {\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page});\n    }\n\n    nextPage = async () => {\n        const page = (this.state.page + 1) * GROUP_MEMBERS_PAGE_SIZE >= this.props.total ? this.state.page : this.state.page + 1;\n        this.setState({page});\n    }\n\n    renderRow = (member) => (\n        <GroupUsersRow\n            key={member.id}\n            user={member}\n            displayName={member.first_name + ' ' + member.last_name}\n            lastPictureUpdate={member.last_picture_update || 0}\n        />\n    );\n\n    renderRows = () => {\n        const offset = this.state.page * GROUP_MEMBERS_PAGE_SIZE;\n        return this.props.members.slice(offset, offset + GROUP_MEMBERS_PAGE_SIZE).map(this.renderRow);\n    }\n\n    renderPagination = () => {\n        const {page} = this.state;\n        const startCount = (page * GROUP_MEMBERS_PAGE_SIZE) + 1;\n        let endCount = (page * GROUP_MEMBERS_PAGE_SIZE) + GROUP_MEMBERS_PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        const lastPage = endCount === total;\n        const firstPage = page === 0;\n\n        return (\n            <div className='groups-list--footer'>\n                <div className='counter'>\n                    <FormattedMessage\n                        id='admin.team_channel_settings.list.paginatorCount'\n                        defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                        values={{\n                            startCount,\n                            endCount,\n                            total,\n                        }}\n                    />\n                </div>\n                <button\n                    className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                    onClick={this.previousPage}\n                    disabled={firstPage}\n                >\n                    <PreviousIcon/>\n                </button>\n                <button\n                    className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                    onClick={this.nextPage}\n                    disabled={lastPage}\n                >\n                    <NextIcon/>\n                </button>\n            </div>\n        );\n    }\n\n    render = () => {\n        return (\n            <div className='groups-list groups-list-less-padding'>\n                <div className='groups-list--header'>\n                    <div className='group-name'>\n                        <FormattedMessage\n                            id='admin.team_channel_settings.user_list.nameHeader'\n                            defaultMessage='Name'\n                        />\n                    </div>\n                    <div className='group-content'>\n                        <div className='group-description group-users--header-padded'>\n                            <FormattedMessage\n                                id='admin.team_channel_settings.user_list.roleHeader'\n                                defaultMessage='Role'\n                            />\n                        </div>\n                        <div className='group-description group-users--header-padded'>\n                            <FormattedMessage\n                                id='admin.team_channel_settings.user_list.groupsHeader'\n                                defaultMessage='Groups'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className='groups-list--body'>\n                    {this.renderRows()}\n                </div>\n\n                {this.renderPagination()}\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport {t} from 'utils/i18n';\nimport * as Utils from 'utils/utils';\n\nimport Avatar from 'components/widgets/users/avatar';\n\nexport default class AdminGroupUsersRow extends React.PureComponent {\n    static propTypes = {\n        displayName: PropTypes.string.isRequired,\n        user: PropTypes.object.isRequired,\n        lastPictureUpdate: PropTypes.number.isRequired,\n    };\n\n    renderRolesColumn = (member) => {\n        return member.roles.split(' ').map((role) => Utils.localizeMessage('admin.permissions.roles.' + role + '.name', role)).join(', ');\n    }\n    renderGroupsColumn = (member) => {\n        if (member.groups.length === 1) {\n            return member.groups[0].display_name;\n        }\n        return (\n            <OverlayTrigger\n                placement='top'\n                overlay={\n                    <Tooltip id='groupsTooltip'>\n                        {member.groups.map((g) => g.display_name).join(', ')}\n                    </Tooltip>\n                }\n            >\n                <a href='#'>\n                    <FormattedMessage\n                        id={t('team_channel_settings.group.group_user_row.numberOfGroups')}\n                        defaultMessage={'{amount, number} {amount, plural, one {Group} other {Groups}}'}\n                        values={{amount: member.groups.length}}\n                    />\n                </a>\n            </OverlayTrigger>\n        );\n    }\n\n    render = () => {\n        const {user, lastPictureUpdate, displayName} = this.props;\n        return (\n            <div\n                className={'group '}\n            >\n                <div\n                    className='group-row roc'\n                    style={{padding: '30px 0px'}}\n                >\n                    <div className='group-name col-sm-8'>\n                        <div className='row'>\n                            <div className='col-sm-2'>\n                                <Avatar\n                                    username={user.username}\n                                    url={Client4.getProfilePictureUrl(user.id, lastPictureUpdate)}\n                                    size='lg'\n                                />\n                            </div>\n                            <div className='col-sm-10'>\n                                <div className='row'>\n                                    <b>{'@' + user.username}&nbsp;</b>\n                                    {'-'}&nbsp;\n                                    {displayName}\n                                </div>\n                                <div className='row email-group-row'>\n                                    {user.email}\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </div>\n                    <span\n                        className='col-sm-2 group-user-removal-column group-description'\n                    >{this.renderRolesColumn(user)}</span>\n                    <span\n                        className='col-sm-2 group-user-removal-column group-description group-description-link'\n                    >{this.renderGroupsColumn(user)}</span>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {t} from 'utils/i18n';\n\nimport List from './group_list.jsx';\n\nfunction mapStateToProps(state, {groups, totalGroups, isModeSync, onGroupRemoved}) {\n    return {\n        data: groups,\n        removeGroup: onGroupRemoved,\n        emptyListTextId: isModeSync ? t('admin.team_channel_settings.group_list.no-synced-groups') : t('admin.team_channel_settings.group_list.no-groups'),\n        emptyListTextDefaultMessage: isModeSync ? 'At least one group must be specified' : 'No groups specified yet',\n        total: totalGroups,\n    };\n}\n\nfunction mapDispatchToProps() {\n    return {\n        actions: {\n            getData: () => Promise.resolve(),\n        },\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Toggle from 'components/toggle';\n\nexport default class LineSwitch extends React.PureComponent {\n    static propTypes = {\n        title: PropTypes.node.isRequired,\n        last: PropTypes.bool,\n        toggled: PropTypes.bool.isRequired,\n        disabled: PropTypes.bool,\n        singleLine: PropTypes.bool,\n        subTitle: PropTypes.node.isRequired,\n        onToggle: PropTypes.func.isRequired,\n        children: PropTypes.node,\n        offText: PropTypes.node,\n        onText: PropTypes.node,\n    };\n\n    render() {\n        const {title, subTitle, singleLine, toggled, onToggle, children, offText, onText, disabled, last} = this.props;\n        return (<div>\n            <div className='line-switch d-flex flex-sm-column flex-md-row align-items-sm-start align-items-center justify-content-md-between'>\n                <label className='line-switch__label'>{title}</label>\n                <div className='line-switch__toggle'>\n                    <Toggle\n                        disabled={disabled}\n                        onToggle={onToggle}\n                        toggled={toggled}\n                        onText={onText}\n                        offText={offText}\n                    />\n                </div>\n            </div>\n            <div className='row'>\n                <div className='col-sm-10'>\n                    <div className={`help-text-small help-text-no-padding ${singleLine ? 'help-text-single-line' : ''}`}>{subTitle}</div>\n                </div>\n            </div>\n            {children}\n            {!last && <div className='section-separator'><hr className='separator__hr'/></div>}\n        </div>);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nexport default class RemoveConfirmModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Bool whether the modal is shown\n         */\n        show: PropTypes.bool.isRequired,\n\n        /*\n         * Action to call on confirm\n         */\n        onConfirm: PropTypes.func.isRequired,\n\n        /*\n         * Action to call on cancel\n         */\n        onCancel: PropTypes.func.isRequired,\n\n        /*\n         * Indicates if the message is for removal from channel or team\n         */\n        inChannel: PropTypes.bool.isRequired,\n\n        /*\n         * Number of users to be removed\n         */\n        amount: PropTypes.number.isRequired,\n\n    }\n\n    render() {\n        const {amount, inChannel} = this.props;\n        const title = (\n            <FormattedMessage\n                id='admin.team_channel_settings.removeConfirmModal.title'\n                defaultMessage='Save and remove {amount, number} {amount, plural, one {user} other {users}}?'\n                values={{amount}}\n            />\n        );\n\n        const messageId = inChannel ? t('admin.team_channel_settings.removeConfirmModal.messageGroup') : t('admin.team_channel_settings.removeConfirmModal.messageChannel');\n        const messageChannel = '{amount, number} {amount, plural, one {user} other {users}} will be removed on the next AD/LDAP synchronization. They are not in groups linked to this channel. Are you sure you wish to remove these users?';\n        const messageGroup = '{amount, number} {amount, plural, one {user} other {users}} will be removed on the next AD/LDAP synchronization. They are not in groups linked to this group. Are you sure you wish to remove these users?';\n\n        const message = (\n            <FormattedMessage\n                id={messageId}\n                defaultMessage={inChannel ? messageChannel : messageGroup}\n                values={{amount}}\n            />\n        );\n\n        const buttonClass = 'btn btn-primary';\n        const button = (\n            <FormattedMessage\n                id='admin.team_channel_settings.removeConfirmModal.remove'\n                defaultMessage='Save and remove {amount, plural, one {user} other {users}}'\n                values={{amount}}\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        const {show, onConfirm, onCancel} = this.props;\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={buttonClass}\n                confirmButtonText={button}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport PropTypes from 'prop-types';\n\nimport SaveButton from 'components/save_button';\nimport {localizeMessage} from 'utils/utils';\nimport BlockableLink from 'components/admin_console/blockable_link';\n\nexport default function SaveChangesPanel({saveNeeded, onClick, saving, serverError, cancelLink}) {\n    return (\n        <div className='admin-console-save'>\n            <SaveButton\n                saving={saving}\n                disabled={!saveNeeded}\n                onClick={onClick}\n                savingMessage={localizeMessage('admin.team_channel_settings.saving', 'Saving Config...')}\n            />\n            <BlockableLink\n                className='cancel-button'\n                to={cancelLink}\n            >\n                <FormattedMessage\n                    id='admin.team_channel_settings.cancel'\n                    defaultMessage='Cancel'\n                />\n            </BlockableLink>\n\n            <div className='error-message'>\n                {serverError}\n            </div>\n        </div>\n    );\n}\n\nSaveChangesPanel.propTypes = {\n    saving: PropTypes.bool.isRequired,\n    saveNeeded: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    cancelLink: PropTypes.string.isRequired,\n    serverError: PropTypes.node,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\n\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {getTeam as fetchTeam, membersMinusGroupMembers, patchTeam} from 'mattermost-redux/actions/teams';\n\nimport {getAllGroups, getGroupsAssociatedToTeam} from 'mattermost-redux/selectors/entities/groups';\n\nimport {\n    getGroupsAssociatedToTeam as fetchAssociatedGroups,\n    linkGroupSyncable,\n    unlinkGroupSyncable,\n} from 'mattermost-redux/actions/groups';\n\nimport {connect} from 'react-redux';\n\nimport {setNavigationBlocked} from 'actions/admin_actions';\n\nimport TeamDetails from './team_details';\n\nfunction mapStateToProps(state, props) {\n    const teamID = props.match.params.team_id;\n    const team = getTeam(state, teamID);\n    const groups = getGroupsAssociatedToTeam(state, teamID);\n    const associatedGroups = state.entities.teams.groupsAssociatedToTeam;\n    const allGroups = getAllGroups(state, teamID);\n    const totalGroups = associatedGroups && associatedGroups[teamID] && associatedGroups[teamID].totalCount ? associatedGroups[teamID].totalCount : 0;\n    return {\n        team,\n        groups,\n        totalGroups,\n        allGroups,\n        teamID,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeam: fetchTeam,\n            getGroups: fetchAssociatedGroups,\n            patchTeam,\n            linkGroupSyncable,\n            unlinkGroupSyncable,\n            membersMinusGroupMembers,\n            setNavigationBlocked,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamDetails);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Groups} from 'mattermost-redux/constants';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\n\nimport FormError from 'components/form_error';\n\nimport RemoveConfirmModal from '../../remove_confirm_modal';\nimport {NeedDomainsError, NeedGroupsError, UsersWillBeRemovedError} from '../../errors';\n\nimport SaveChangesPanel from '../../save_changes_panel';\n\nimport {TeamProfile} from './team_profile';\nimport {TeamModes} from './team_modes';\nimport {TeamGroups} from './team_groups';\n\nexport default class TeamDetails extends React.Component {\n    static propTypes = {\n        teamID: PropTypes.string.isRequired,\n        team: PropTypes.object.isRequired,\n        totalGroups: PropTypes.number.isRequired,\n        groups: PropTypes.arrayOf(PropTypes.object),\n        allGroups: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            setNavigationBlocked: PropTypes.func.isRequired,\n            getTeam: PropTypes.func.isRequired,\n            linkGroupSyncable: PropTypes.func.isRequired,\n            unlinkGroupSyncable: PropTypes.func.isRequired,\n            membersMinusGroupMembers: PropTypes.func.isRequired,\n            getGroups: PropTypes.func.isRequired,\n            patchTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        team: {display_name: '', id: ''},\n    };\n\n    constructor(props) {\n        super(props);\n        const team = props.team;\n        this.state = {\n            groups: props.groups,\n            syncChecked: Boolean(team.group_constrained),\n            allAllowedChecked: team.allow_open_invite,\n            allowedDomainsChecked: Boolean(team.allowed_domains && team.allowed_domains !== ''),\n            allowedDomains: team.allowed_domains || '',\n            saving: false,\n            showRemoveConfirmation: false,\n            usersToRemove: 0,\n            totalGroups: props.totalGroups,\n            saveNeeded: false,\n            serverError: null,\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const {totalGroups, team} = this.props;\n        if (prevProps.team.id !== team.id) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                totalGroups,\n                syncChecked: Boolean(team.group_constrained),\n                allAllowedChecked: team.allow_open_invite,\n                allowedDomainsChecked: Boolean(team.allowed_domains && team.allowed_domains !== ''),\n                allowedDomains: team.allowed_domains || '',\n            });\n        }\n    }\n\n    componentDidMount() {\n        const {teamID, actions} = this.props;\n        actions.getTeam(teamID).\n            then(() => actions.getGroups(teamID)).\n            then(() => this.setState({groups: this.props.groups}));\n    }\n\n    handleSubmit = async () => {\n        this.setState({showRemoveConfirmation: false, saving: true});\n        const {groups, allAllowedChecked, allowedDomainsChecked, allowedDomains, syncChecked} = this.state;\n\n        let serverError = null;\n        let saveNeeded = false;\n\n        const {team, groups: origGroups, teamID, actions} = this.props;\n        if (allowedDomainsChecked && allowedDomains.trim().length === 0) {\n            saveNeeded = true;\n            serverError = <NeedDomainsError/>;\n        } else if (this.state.groups.length === 0 && syncChecked) {\n            serverError = <NeedGroupsError/>;\n            saveNeeded = true;\n        } else {\n            const patchTeamPromise = actions.patchTeam({\n                ...team,\n                group_constrained: syncChecked,\n                allowed_domains: allowedDomainsChecked ? allowedDomains : '',\n                allow_open_invite: allAllowedChecked,\n            });\n            const unlink = origGroups.filter((g) => !groups.includes(g)).map((g) => actions.unlinkGroupSyncable(g.id, teamID, Groups.SYNCABLE_TYPE_TEAM));\n            const link = groups.filter((g) => !origGroups.includes(g)).map((g) => actions.linkGroupSyncable(g.id, teamID, Groups.SYNCABLE_TYPE_TEAM, {auto_add: true}));\n            const result = await Promise.all([patchTeamPromise, ...unlink, ...link]);\n            const resultWithError = result.find((r) => r.error);\n            if (resultWithError) {\n                serverError = <FormError error={resultWithError.error.message}/>;\n            } else {\n                await actions.getGroups(teamID);\n            }\n        }\n\n        this.setState({serverError, saving: false, saveNeeded});\n        actions.setNavigationBlocked(saveNeeded);\n    }\n\n    setToggles = (syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains) => {\n        this.setState({\n            saveNeeded: true,\n            syncChecked,\n            allAllowedChecked: !syncChecked && allAllowedChecked,\n            allowedDomainsChecked: !syncChecked && allowedDomainsChecked,\n            allowedDomains,\n        }, () => this.processGroupsChange(this.state.groups));\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    async processGroupsChange(groups) {\n        const {teamID, actions} = this.props;\n        actions.setNavigationBlocked(true);\n\n        let serverError = null;\n        let usersToRemove = 0;\n        if (this.state.syncChecked) {\n            try {\n                if (groups.length === 0) {\n                    serverError = <NeedGroupsError warning={true}/>;\n                } else {\n                    const result = await actions.membersMinusGroupMembers(teamID, groups.map((g) => g.id));\n                    usersToRemove = result.data.total_count;\n                    if (usersToRemove > 0) {\n                        serverError = (\n                            <UsersWillBeRemovedError\n                                total={usersToRemove}\n                                users={result.data.users}\n                            />\n                        );\n                    }\n                }\n            } catch (ex) {\n                serverError = ex;\n            }\n        }\n        this.setState({groups, usersToRemove, saveNeeded: true, serverError});\n    }\n\n    handleGroupRemoved = (gid) => {\n        const groups = this.state.groups.filter((g) => g.id !== gid);\n        this.setState({totalGroups: this.state.totalGroups - 1});\n        this.processGroupsChange(groups);\n    }\n\n    handleGroupChange = (groupIDs) => {\n        const groups = [...this.state.groups, ...groupIDs.map((gid) => this.props.allGroups[gid])];\n        this.setState({totalGroups: this.state.totalGroups + groupIDs.length});\n        this.processGroupsChange(groups);\n    }\n\n    hideRemoveUsersModal = () => {\n        this.setState({showRemoveConfirmation: false});\n    }\n    showRemoveUsersModal = () => {\n        if (this.state.usersToRemove > 0) {\n            this.setState({showRemoveConfirmation: true});\n        } else {\n            this.handleSubmit();\n        }\n    }\n\n    render = () => {\n        const {team} = this.props;\n        const {totalGroups, saving, saveNeeded, serverError, groups, allAllowedChecked, allowedDomainsChecked, allowedDomains, syncChecked, showRemoveConfirmation, usersToRemove} = this.state;\n        const missingGroup = (og) => !groups.find((g) => g.id === og.id);\n        const removedGroups = this.props.groups.filter(missingGroup);\n\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/teams'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.team_settings.team_detail.group_configuration'\n                            defaultMessage='Team Configuration'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <RemoveConfirmModal\n                            amount={usersToRemove}\n                            inChannel={false}\n                            show={showRemoveConfirmation}\n                            onCancel={this.hideRemoveUsersModal}\n                            onConfirm={this.handleSubmit}\n                        />\n                        <TeamProfile\n                            team={team}\n                        />\n\n                        <TeamModes\n                            allAllowedChecked={allAllowedChecked}\n                            allowedDomainsChecked={allowedDomainsChecked}\n                            allowedDomains={allowedDomains}\n                            syncChecked={syncChecked}\n                            onToggle={this.setToggles}\n                        />\n\n                        <TeamGroups\n                            syncChecked={syncChecked}\n                            team={team}\n                            groups={groups}\n                            removedGroups={removedGroups}\n                            totalGroups={totalGroups}\n                            onAddCallback={this.handleGroupChange}\n                            onGroupRemoved={this.handleGroupRemoved}\n                        />\n\n                    </div>\n                </div>\n\n                <SaveChangesPanel\n                    saving={saving}\n                    cancelLink='/admin_console/user_management/teams'\n                    saveNeeded={saveNeeded}\n                    onClick={this.showRemoveUsersModal}\n                    serverError={serverError}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\n\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\n\nimport AddGroupsToTeamModal from 'components/add_groups_to_team_modal';\n\nimport GroupList from '../../group';\n\nexport const TeamGroups = ({onGroupRemoved, syncChecked, team, onAddCallback, totalGroups, groups, removedGroups}) => (\n    <AdminPanel\n        id='team_groups'\n        titleId={syncChecked ? t('admin.team_settings.team_detail.syncedGroupsTitle') : t('admin.team_settings.team_detail.groupsTitle')}\n        titleDefault={syncChecked ? 'Synced Groups' : 'Groups'}\n        subtitleId={syncChecked ? t('admin.team_settings.team_detail.syncedGroupsDescription') : t('admin.team_settings.team_detail.groupsDescription')}\n        subtitleDefault={syncChecked ? 'Add and remove team members based on their group membership.' : 'Group members will be added to the team.'}\n        button={\n            <ToggleModalButton\n                className='btn btn-primary'\n                dialogType={AddGroupsToTeamModal}\n                dialogProps={{\n                    team,\n                    onAddCallback,\n                    skipCommit: true,\n                    excludeGroups: groups,\n                    includeGroups: removedGroups,\n                }}\n            >\n                <FormattedMessage\n                    id='admin.team_settings.team_details.add_group'\n                    defaultMessage='Add Group'\n                />\n            </ToggleModalButton>}\n    >\n        <GroupList\n            team={team}\n            isModeSync={syncChecked}\n            groups={groups}\n            totalGroups={totalGroups}\n            onGroupRemoved={onGroupRemoved}\n        />\n    </AdminPanel>);\n\nTeamGroups.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    team: PropTypes.object.isRequired,\n    totalGroups: PropTypes.number.isRequired,\n    groups: PropTypes.arrayOf(PropTypes.object).isRequired,\n    removedGroups: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onAddCallback: PropTypes.func.isRequired,\n    onGroupRemoved: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport LineSwitch from '../../line_switch.jsx';\n\nconst SyncGroupsToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle}) => (\n    <LineSwitch\n        toggled={syncChecked}\n        last={syncChecked}\n        onToggle={() => onToggle(!syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains)}\n        title={(\n            <FormattedMessage\n                id='admin.team_settings.team_details.syncGroupMembers'\n                defaultMessage='Sync Group Members'\n            />\n        )}\n        subTitle={(\n            <FormattedMarkdownMessage\n                id='admin.team_settings.team_details.syncGroupMembersDescr'\n                defaultMessage='When enabled, adding and removing users from groups will add or remove them from this team. The only way of inviting members to this team is by adding the groups they belong to. [Learn More](!https://www.mattermost.com/pl/default-ldap-group-constrained-team-channel.html)'\n            />\n        )}\n    />);\n\nSyncGroupsToggle.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n\nconst AllowAllToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle}) =>\n    !syncChecked && (\n        <LineSwitch\n            toggled={allAllowedChecked}\n            singleLine={true}\n            onToggle={() => onToggle(syncChecked, !allAllowedChecked, allowedDomainsChecked, allowedDomains)}\n            title={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.anyoneCanJoin'\n                    defaultMessage='Anyone can join this team'\n                />\n            )}\n            subTitle={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.anyoneCanJoinDescr'\n                    defaultMessage='This team can be discovered allowing anyone with an account to join this team.'\n                />\n            )}\n        />);\n\nAllowAllToggle.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n\nconst AllowedDomainsToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle}) =>\n    !syncChecked && (\n        <LineSwitch\n            toggled={allowedDomainsChecked}\n            last={true}\n            onToggle={() => onToggle(syncChecked, allAllowedChecked, !allowedDomainsChecked, allowedDomains)}\n            singleLine={true}\n            title={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.specificDomains'\n                    defaultMessage='Only specific email domains can join this team'\n                />\n            )}\n            subTitle={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.specificDomainsDescr'\n                    defaultMessage='Users can only join the team if their email matches one of the specified domains'\n                />\n            )}\n        >\n            <div className='help-text csvDomains'>\n                <FormattedMessage\n                    id='admin.team_settings.team_details.csvDomains'\n                    defaultMessage='Comma Separated Email Domain List'\n                />\n            </div>\n            <input\n                type='text'\n                value={allowedDomains}\n                placeholder='mattermost.org'\n                className='form-control'\n                onChange={(e) => onToggle(syncChecked, allAllowedChecked, allowedDomainsChecked, e.currentTarget.value)}\n            />\n        </LineSwitch>);\n\nAllowedDomainsToggle.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n\nexport const TeamModes = ({allAllowedChecked, syncChecked, allowedDomains, allowedDomainsChecked, onToggle}) => (\n    <AdminPanel\n        id='team_manage'\n        titleId={t('admin.team_settings.team_detail.manageTitle')}\n        titleDefault='Team Management'\n        subtitleId={t('admin.team_settings.team_detail.manageDescription')}\n        subtitleDefault='Choose between inviting members manually or syncing members automatically from groups.'\n    >\n        <div className='group-teams-and-channels'>\n            <div className='group-teams-and-channels--body'>\n                <SyncGroupsToggle\n                    allAllowedChecked={allAllowedChecked}\n                    allowedDomainsChecked={allowedDomainsChecked}\n                    allowedDomains={allowedDomains}\n                    syncChecked={syncChecked}\n                    onToggle={onToggle}\n                />\n                <AllowAllToggle\n                    allAllowedChecked={allAllowedChecked}\n                    allowedDomainsChecked={allowedDomainsChecked}\n                    allowedDomains={allowedDomains}\n                    syncChecked={syncChecked}\n                    onToggle={onToggle}\n                />\n                <AllowedDomainsToggle\n                    allAllowedChecked={allAllowedChecked}\n                    allowedDomainsChecked={allowedDomainsChecked}\n                    allowedDomains={allowedDomains}\n                    syncChecked={syncChecked}\n                    onToggle={onToggle}\n                />\n            </div>\n        </div>\n    </AdminPanel>);\n\nTeamModes.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport * as Utils from 'utils/utils';\n\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nexport function TeamProfile({team}) {\n    const teamIconUrl = Utils.imageURLForTeam(team);\n\n    return (\n        <AdminPanel\n            id='team_profile'\n            titleId={t('admin.team_settings.team_detail.profileTitle')}\n            titleDefault='Team Profile'\n            subtitleId={t('admin.team_settings.team_detail.profileDescription')}\n            subtitleDefault='Summary of the team, including team name and description.'\n        >\n\n            <div className='group-teams-and-channels'>\n\n                <div className='group-teams-and-channels--body'>\n                    <div className='row'>\n                        <div className='col-sm-2 large-team-image-col'>\n                            <TeamIcon\n                                name={team.display_name}\n                                size='lg'\n                                url={teamIconUrl}\n                            />\n                        </div>\n                        <div className='col-sm-10'>\n                            <div className='row row-bottom-padding'>\n                                <FormattedMarkdownMessage\n                                    id='admin.team_settings.team_detail.teamName'\n                                    defaultMessage='**Team Name**:'\n                                />\n                                <br/>\n                                {team.display_name}\n                            </div>\n                            <div className='row'>\n                                <FormattedMarkdownMessage\n                                    id='admin.team_settings.team_detail.teamDescription'\n                                    defaultMessage='**Team Description**:'\n                                />\n                                <br/>\n                                {team.description || <span className='greyed-out'>{Utils.localizeMessage('admin.team_settings.team_detail.profileNoDescription', 'No team description added.')}</span>}\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </AdminPanel>\n    );\n}\n\nTeamProfile.propTypes = {\n    team: PropTypes.object.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {connect} from 'react-redux';\n\nimport {TeamsSettings} from './team_settings';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n\n    return {\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(TeamsSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {getTeams as fetchTeams, searchTeams} from 'mattermost-redux/actions/teams';\nimport {getTeams} from 'mattermost-redux/selectors/entities/teams';\n\nimport {t} from 'utils/i18n';\n\nimport TeamList from './team_list.jsx';\n\nconst getSortedListOfTeams = createSelector(\n    getTeams,\n    (teams) => Object.values(teams).sort((a, b) => a.display_name.localeCompare(b.display_name))\n);\n\nfunction mapStateToProps(state) {\n    return {\n        data: getSortedListOfTeams(state),\n        total: state.entities.teams.totalCount || 0,\n        emptyListTextId: t('admin.team_settings.team_list.no_teams_found'),\n        emptyListTextDefaultMessage: 'No teams found',\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getData: (page, pageSize) => fetchTeams(page, pageSize, true),\n            searchTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {cloneDeep} from 'lodash';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {Constants} from 'utils/constants';\n\nimport TeamRow from 'components/admin_console/team_channel_settings/team/list/team_row.jsx';\nimport AbstractList, {PAGE_SIZE} from 'components/admin_console/team_channel_settings/abstract_list.jsx';\nimport {browserHistory} from 'utils/browser_history';\n\nimport SearchIcon from 'components/widgets/icons/search_icon';\n\nexport default class TeamList extends React.PureComponent {\n    static propTypes = {\n        actions: PropTypes.shape({\n            searchTeams: PropTypes.func.isRequired,\n            getData: PropTypes.func.isRequired,\n        }).isRequired,\n        data: PropTypes.array,\n        total: PropTypes.number,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchString: '',\n            teams: [],\n            searchTotalCount: 0,\n            pageResetKey: 0,\n        };\n    }\n\n    header() {\n        return (\n            <>\n                {this.searchBar()}\n                <div className='groups-list--header'>\n                    <div className='group-name adjusted'>\n                        <FormattedMessage\n                            id='admin.team_settings.team_list.nameHeader'\n                            defaultMessage='Name'\n                        />\n                    </div>\n                    <div className='group-content'>\n                        <div className='group-description adjusted'>\n                            <FormattedMessage\n                                id='admin.team_settings.team_list.mappingHeader'\n                                defaultMessage='Management'\n                            />\n                        </div>\n                        <div className='group-actions'/>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n    searchBar = () => {\n        return (\n            <div className='groups-list--global-actions'>\n                <div className='group-list-search'>\n                    <input\n                        type='text'\n                        placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                        onKeyUp={this.handleTeamSearchKeyUp}\n                        onChange={this.searchBarChangeHandler}\n                        value={this.state.searchString}\n                        data-testid='search-input'\n                    />\n                    <SearchIcon\n                        id='searchIcon'\n                        className='search__icon'\n                        aria-hidden='true'\n                    />\n                    <i\n                        className={'fa fa-times-circle group-filter-action ' + (this.state.searchString.length ? '' : 'hidden')}\n                        onClick={this.resetSearch}\n                        data-testid='clear-search'\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    searchBarChangeHandler = (e) => {\n        this.setState({searchString: e.target.value});\n    }\n\n    handleTeamSearchKeyUp = async (e) => {\n        const {key} = e;\n        const {searchString} = this.state;\n\n        if (key === Constants.KeyCodes.ENTER[0]) {\n            if (searchString.length > 1) {\n                const response = await this.props.actions.searchTeams(searchString, 0, PAGE_SIZE);\n                this.setState({searchMode: true, teams: response.data.teams, searchTotalCount: response.data.total_count, pageResetKey: Date.now()});\n            }\n        }\n\n        if (searchString.length === 0) {\n            this.resetSearch();\n        }\n    }\n\n    getDataBySearch = async (page, perPage) => {\n        if (this.state.searchString.length > 1) {\n            const response = await this.props.actions.searchTeams(this.state.searchString, page, perPage);\n            const teams = new Array(page * perPage); // Pad the array with empty entries because AbstractList expects to slice the results based on the pagination offset.\n            return teams.concat(response.data.teams);\n        }\n        return [];\n    }\n\n    resetSearch = () => {\n        this.setState({searchString: '', teams: [], searchMode: false, searchTotalCount: 0, pageResetKey: Date.now()});\n    }\n\n    onPageChangedCallback = (pagination, teams) => {\n        if (this.state.searchMode) {\n            this.setState({teams});\n        }\n    }\n\n    render() {\n        const absProps = cloneDeep(this.props);\n        if (this.state.searchMode) {\n            absProps.actions.getData = this.getDataBySearch;\n        }\n        return (\n            <AbstractList\n                header={this.header()}\n                renderRow={this.renderRow}\n                {...absProps}\n                key={this.state.pageResetKey}\n                onPageChangedCallback={this.onPageChangedCallback}\n                data={this.state.searchMode ? this.state.teams : this.props.data}\n                total={this.state.searchMode ? this.state.searchTotalCount : this.props.total}\n            />);\n    }\n\n    renderRow = (item) => {\n        return (\n            <TeamRow\n                key={item.id}\n                team={item}\n                onRowClick={this.onTeamClick}\n            />\n        );\n    }\n\n    onTeamClick = (id) => {\n        browserHistory.push(`/admin_console/user_management/teams/${id}`);\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils';\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nexport default class TeamRow extends React.Component {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        onRowClick: PropTypes.func.isRequired,\n    };\n\n    handleRowClick = () => {\n        const {team, onRowClick} = this.props;\n        onRowClick(team.id);\n    }\n\n    renderManagementMethodText = () => {\n        const {team} = this.props;\n        if (team.group_constrained) {\n            return (\n                <FormattedMessage\n                    id='admin.team_settings.team_row.managementMethod.groupSync'\n                    defaultMessage='Group Sync'\n                />\n            );\n        } else if (team.allow_open_invite) {\n            return (\n                <FormattedMessage\n                    id='admin.team_settings.team_row.managementMethod.anyoneCanJoin'\n                    defaultMessage='Anyone Can Join'\n                />\n            );\n        }\n        return (\n            <FormattedMessage\n                id='admin.team_settings.team_row.managementMethod.inviteOnly'\n                defaultMessage='Invite Only'\n            />\n        );\n    }\n\n    render = () => {\n        const {team} = this.props;\n        const teamIconUrl = Utils.imageURLForTeam(team);\n        return (\n            <div\n                className={'group '}\n                onClick={this.handleRowClick}\n            >\n                <div className='group-row group-row-large'>\n                    <div className='group-name adjusted center-row row-content'>\n                        <TeamIcon\n                            size='sm'\n                            url={teamIconUrl}\n                            name={team.display_name}\n                        />\n                        <div>\n                            <b data-testid='team-display-name'>{team.display_name}</b>\n                            {team.description && (\n                                <div className='overflow--ellipsis text-nowrap team-descr-list-column'>\n                                    {team.description}\n                                </div>)}\n\n                        </div>\n\n                    </div>\n                    <div className='group-content'>\n                        <span className='group-description adjusted row-content'>\n                            {this.renderManagementMethodText()}\n                        </span>\n                        <span className='group-actions'>\n                            <Link to={`/admin_console/user_management/teams/${team.id}`}>\n                                <FormattedMessage\n                                    id='admin.team_settings.team_row.configure'\n                                    defaultMessage='Edit'\n                                />\n                            </Link>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'utils/i18n';\nimport TeamList from 'components/admin_console/team_channel_settings/team/list';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\n\nexport function TeamsSettings(props) {\n    return (\n        <div className='wrapper--fixed'>\n            <div className='admin-console__header'>\n                <FormattedMessage\n                    id='admin.team_settings.groupsPageTitle'\n                    defaultMessage='{siteName} Teams'\n                    values={{siteName: props.siteName}}\n                />\n            </div>\n\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    <AdminPanel\n                        id='teams'\n                        titleId={t('admin.team_settings.title')}\n                        titleDefault='Teams'\n                        subtitleId={t('admin.team_settings.description')}\n                        subtitleDefault='Manage team settings.'\n                    >\n                        <TeamList/>\n                    </AdminPanel>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nTeamsSettings.propTypes = {\n    siteName: PropTypes.string.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Modal} from 'react-bootstrap';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport GroupsUsers from './group/group_users.jsx';\n\nexport default class UsersToBeRemovedModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Number of users to be removed\n         */\n        total: PropTypes.number.isRequired,\n\n        /*\n         * users to be removed\n         */\n        users: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        onHide: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            values: [],\n            show: true,\n        };\n    }\n\n    handleHide = () => {\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onHide) {\n            this.props.onHide();\n        }\n    }\n\n    render() {\n        const {users, total} = this.props;\n        const title = (\n            <FormattedMarkdownMessage\n                id='admin.team_channel_settings.usersToBeRemovedModal.title'\n                defaultMessage='**{total, number} {total, plural, one {User} other {Users}}** To Be Removed'\n                values={{total}}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='admin.team_channel_settings.usersToBeRemovedModal.message'\n                defaultMessage='The members listed below are not in any of the groups currently linked to this team. Because this team is set to be managed by group sync they will all be removed once saved.'\n            />\n        );\n\n        const button = (\n            <FormattedMessage\n                id='admin.team_channel_settings.usersToBeRemovedModal.close'\n                defaultMessage='Close'\n            />\n        );\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal settings-modal'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n                id='confirmModal'\n                role='dialog'\n                aria-labelledby='confirmModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='confirmModalLabel'\n                    >\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='group-users-to-remove-modal-description'>{message}</div>\n                    <GroupsUsers\n                        members={users}\n                        total={total}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        autoFocus={true}\n                        type='button'\n                        className='btn btn-primary'\n                        onClick={this.handleHide}\n                        id='closeModalButton'\n                    >\n                        {button}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport TextSetting, {WidgetTextSettingProps} from 'components/widgets/settings/text_setting';\n\nimport SetByEnv from './set_by_env';\n\ninterface Props extends WidgetTextSettingProps {\n    setByEnv: boolean;\n}\n\nconst AdminTextSetting: React.SFC<Props> = (props: Props): JSX.Element => {\n    const {setByEnv, disabled, ...sharedProps} = props;\n    const isTextDisabled = props.disabled || props.setByEnv;\n\n    return (\n        <TextSetting\n            {...sharedProps}\n            labelClassName='col-sm-4'\n            inputClassName='col-sm-8'\n            disabled={isTextDisabled}\n            footer={setByEnv ? <SetByEnv/> : null}\n        />\n    );\n};\n\nexport default AdminTextSetting;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport GenericUserProvider from 'components/suggestion/generic_user_provider.jsx';\nimport Setting from 'components/admin_console/setting';\nimport SuggestionBox from 'components/suggestion/suggestion_box.jsx';\nimport SuggestionList from 'components/suggestion/suggestion_list.jsx';\n\nexport default class UserAutocompleteSetting extends React.Component {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            label: PropTypes.node.isRequired,\n            placeholder: PropTypes.string,\n            helpText: PropTypes.node,\n            value: PropTypes.string,\n            onChange: PropTypes.func,\n            disabled: PropTypes.bool,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.userSuggestionProviders = [new GenericUserProvider()];\n    }\n\n    handleChange = (e) => {\n        this.props.onChange(this.props.id, e.target.value);\n    }\n\n    handleUserSelected = (user) => {\n        this.props.onChange(this.props.id, user.username);\n    }\n\n    render() {\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div\n                    className='admin-setting-user__dropdown'\n                >\n                    <SuggestionBox\n                        id={'admin_user_setting_' + this.props.id}\n                        className='form-control'\n                        placeholder={this.props.placeholder}\n                        value={this.props.value}\n                        onChange={this.handleChange}\n                        onItemSelected={this.handleUserSelected}\n                        listComponent={SuggestionList}\n                        listStyle='bottom'\n                        providers={this.userSuggestionProviders}\n                        disabled={this.props.disabled}\n                        requiredCharacters={0}\n                        openOnFocus={true}\n                    />\n                </div>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\nimport Chart from 'chart.js';\n\nimport * as Utils from 'utils/utils.jsx';\n\ntype Props = {\n    title: React.ReactNode;\n    width: number;\n    height: number;\n    data?: object;\n}\n\nexport default class DoughnutChart extends React.PureComponent<Props> {\n    public chart: Chart | null = null;\n\n    public componentDidMount(): void {\n        this.initChart();\n    }\n\n    public componentDidUpdate(prevProps: Props): void {\n        if (!Utils.areObjectsEqual(prevProps.data, this.props.data)) {\n            this.initChart(true);\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (this.chart && this.refs.canvas) {\n            this.chart.destroy();\n        }\n    }\n\n    public initChart = (update?: boolean): void => {\n        if (!this.refs.canvas) {\n            return;\n        }\n        const el = ReactDOM.findDOMNode(this.refs.canvas) as HTMLCanvasElement;\n        const ctx = el.getContext('2d') as CanvasRenderingContext2D;\n        const dataCopy = JSON.parse(JSON.stringify(this.props.data));\n        this.chart = new Chart(ctx, {type: 'doughnut', data: dataCopy, options: {}});\n        if (update && this.chart) {\n            this.chart.update();\n        }\n    }\n\n    public render(): JSX.Element {\n        let content;\n        if (this.props.data == null) {\n            content = (\n                <FormattedMessage\n                    id='analytics.chart.loading'\n                    defaultMessage='Loading...'\n                />\n            );\n        } else {\n            content = (\n                <canvas\n                    ref='canvas'\n                    width={this.props.width}\n                    height={this.props.height}\n                />\n            );\n        }\n\n        return (\n            <div className='col-sm-6'>\n                <div className='total-count'>\n                    <div className='title'>\n                        {this.props.title}\n                    </div>\n                    <div className='content'>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {Dictionary} from 'mattermost-redux/types/utilities';\n\nimport * as Utils from 'utils/utils.jsx';\n\nexport function formatChannelDoughtnutData(totalPublic: any, totalPrivate: any) {\n    const channelTypeData = {\n        labels: [\n            Utils.localizeMessage('analytics.system.publicChannels', 'Public Channels'),\n            Utils.localizeMessage('analytics.system.privateGroups', 'Private Channels'),\n        ],\n        datasets: [{\n            data: [totalPublic, totalPrivate],\n            backgroundColor: ['#46BFBD', '#FDB45C'],\n            hoverBackgroundColor: ['#5AD3D1', '#FFC870'],\n        }],\n    };\n\n    return channelTypeData;\n}\n\nexport function formatPostDoughtnutData(filePosts: any, hashtagPosts: any, totalPosts: any) {\n    const postTypeData = {\n        labels: [\n            Utils.localizeMessage('analytics.system.totalFilePosts', 'Posts with Files'),\n            Utils.localizeMessage('analytics.system.totalHashtagPosts', 'Posts with Hashtags'),\n            Utils.localizeMessage('analytics.system.textPosts', 'Posts with Text-only'),\n        ],\n        datasets: [{\n            data: [filePosts, hashtagPosts, (totalPosts - filePosts - hashtagPosts)],\n            backgroundColor: ['#46BFBD', '#F7464A', '#FDB45C'],\n            hoverBackgroundColor: ['#5AD3D1', '#FF5A5E', '#FFC870'],\n        }],\n    };\n\n    return postTypeData;\n}\n\nexport function formatPostsPerDayData(data: any) {\n    const chartData = {\n        labels: [] as any,\n        datasets: [{\n            fillColor: 'rgba(151,187,205,0.2)',\n            borderColor: 'rgba(151,187,205,1)',\n            pointBackgroundColor: 'rgba(151,187,205,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(151,187,205,1)',\n            data: [] as any,\n        }],\n    };\n\n    for (const index in data) {\n        if (data[index]) {\n            const row = data[index];\n            chartData.labels.push(row.name);\n            chartData.datasets[0].data.push(row.value);\n        }\n    }\n\n    return chartData;\n}\n\n// synchronizeChartData converges on a uniform set of labels for all entries in the given chart data. If a given label wasn't already present in the chart data, a 0-valued data point at that label is added.\n//\n// For date-labelled charts, this ensures that each charts starts and ends on the same interval, even if data for part of that interval was never collected.\nexport function synchronizeChartData(...chartDatas: any[]) {\n    const labels: Set<string> = new Set();\n\n    // collect all labels\n    chartDatas.forEach((chartData) => {\n        chartData.labels.forEach((label: string) => labels.add(label));\n    });\n\n    // fill in missing\n    chartDatas.forEach((chartData) => {\n        if (chartData.labels.length > 0) { // don't add to empty graphs\n            labels.forEach((label: string) => {\n                if (chartData.labels.indexOf(label) === -1) {\n                    chartData.labels.push(label);\n                    chartData.datasets[0].data.push(0);\n                }\n            });\n        }\n    });\n}\n\nexport function formatUsersWithPostsPerDayData(data: any) {\n    const chartData = {\n        labels: [] as any,\n        datasets: [{\n            label: '',\n            fillColor: 'rgba(151,187,205,0.2)',\n            borderColor: 'rgba(151,187,205,1)',\n            pointBackgroundColor: 'rgba(151,187,205,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(151,187,205,1)',\n            data: [] as any,\n        }],\n    };\n\n    for (const index in data) {\n        if (data[index]) {\n            const row = data[index];\n            chartData.labels.push(row.name);\n            chartData.datasets[0].data.push(row.value);\n        }\n    }\n\n    return chartData;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\nimport Chart, {ChartOptions} from 'chart.js';\n\nimport * as Utils from 'utils/utils';\n\ntype Props = {\n    title: React.ReactNode;\n    width: number;\n    height: number;\n    data?: any;\n}\n\nexport default class LineChart extends React.PureComponent<Props> {\n    public static propTypes = {\n\n        /*\n         * Chart title\n         */\n        title: PropTypes.node.isRequired,\n\n        /*\n         * Chart width\n         */\n        width: PropTypes.number.isRequired,\n\n        /*\n         * Chart height\n         */\n        height: PropTypes.number.isRequired,\n\n        /*\n         * Chart data\n         */\n        data: PropTypes.object,\n    };\n\n    public chart: Chart | null = null;\n    public chartOptions: ChartOptions = {\n        legend: {\n            display: false,\n        },\n    };\n\n    public componentDidMount(): void {\n        this.initChart();\n    }\n\n    public componentDidUpdate(prevProps: Props): void {\n        const currentData = this.props.data && this.props.data.labels.length > 0;\n\n        if (!currentData && this.chart) {\n            // Clean up the rendered chart before we render and destroy its context\n            this.chart.destroy();\n            this.chart = null;\n        }\n\n        if (Utils.areObjectsEqual(prevProps.data, this.props.data)) {\n            return;\n        }\n\n        const hasData = this.props.data && this.props.data.labels.length > 0;\n        const hasChart = Boolean(this.chart);\n\n        if (hasData) {\n            // Update the rendered chart or initialize it as necessary\n            this.initChart(hasChart);\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (this.chart) {\n            this.chart.destroy();\n        }\n    }\n\n    public initChart = (update?: boolean): void => {\n        if (!this.refs.canvas) {\n            return;\n        }\n\n        const el = ReactDOM.findDOMNode(this.refs.canvas) as HTMLCanvasElement;\n        const ctx = el.getContext('2d') as CanvasRenderingContext2D;\n        const dataCopy: any = JSON.parse(JSON.stringify(this.props.data));\n        this.chart = new Chart(ctx, {type: 'line', data: dataCopy, options: this.chartOptions || {}});\n\n        if (update) {\n            this.chart.update();\n        }\n    }\n\n    public render(): JSX.Element {\n        let content;\n        if (this.props.data == null) {\n            content = (\n                <FormattedMessage\n                    id='analytics.chart.loading'\n                    defaultMessage='Loading...'\n                />\n            );\n        } else if (this.props.data.labels.length === 0) {\n            content = (\n                <h5>\n                    <FormattedMessage\n                        id='analytics.chart.meaningful'\n                        defaultMessage='Not enough data for a meaningful representation.'\n                    />\n                </h5>\n            );\n        } else {\n            content = (\n                <canvas\n                    ref='canvas'\n                    width={this.props.width}\n                    height={this.props.height}\n                />\n            );\n        }\n\n        return (\n            <div className='col-sm-12'>\n                <div className='total-count by-day'>\n                    <div className='title'>\n                        {this.props.title}\n                    </div>\n                    <div className='content'>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {ReactNode} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    title: ReactNode;\n    icon: string;\n    count?: number;\n}\n\nexport default class StatisticCount extends React.PureComponent<Props> {\n    public render(): JSX.Element {\n        const loading = (\n            <FormattedMessage\n                id='analytics.chart.loading'\n                defaultMessage='Loading...'\n            />\n        );\n\n        return (\n            <div className='col-lg-3 col-md-4 col-sm-6'>\n                <div className='total-count'>\n                    <div className='title'>\n                        {this.props.title}\n                        <i className={'fa ' + this.props.icon}/>\n                    </div>\n                    <div className='content'>{typeof this.props.count === 'undefined' || isNaN(this.props.count) ? loading : this.props.count}</div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport SystemAnalytics from './system_analytics.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const isLicensed = license.IsLicensed === 'true';\n\n    return {\n        isLicensed,\n        stats: state.entities.admin.analytics,\n    };\n}\n\nexport default connect(mapStateToProps)(SystemAnalytics);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport * as AdminActions from 'actions/admin_actions.jsx';\nimport Constants from 'utils/constants';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nimport DoughnutChart from '../doughnut_chart';\nimport LineChart from '../line_chart';\nimport StatisticCount from '../statistic_count';\n\nimport {\n    formatPostsPerDayData,\n    formatUsersWithPostsPerDayData,\n    formatChannelDoughtnutData,\n    formatPostDoughtnutData,\n    synchronizeChartData,\n} from '../format';\n\nconst StatTypes = Constants.StatTypes;\n\nexport default class SystemAnalytics extends React.PureComponent {\n    static propTypes = {\n        isLicensed: PropTypes.bool.isRequired,\n        stats: PropTypes.object,\n    }\n\n    componentDidMount() {\n        AdminActions.getStandardAnalytics();\n        AdminActions.getPostsPerDayAnalytics();\n        AdminActions.getBotPostsPerDayAnalytics();\n        AdminActions.getUsersPerDayAnalytics();\n\n        if (this.props.isLicensed) {\n            AdminActions.getAdvancedAnalytics();\n        }\n    }\n\n    render() {\n        const stats = this.props.stats;\n        const isLicensed = this.props.isLicensed;\n        const skippedIntensiveQueries = stats[StatTypes.TOTAL_POSTS] === -1;\n        const postCountsDay = formatPostsPerDayData(stats[StatTypes.POST_PER_DAY]);\n        const botPostCountsDay = formatPostsPerDayData(stats[StatTypes.BOT_POST_PER_DAY]);\n        const userCountsWithPostsDay = formatUsersWithPostsPerDayData(stats[StatTypes.USERS_WITH_POSTS_PER_DAY]);\n        synchronizeChartData(postCountsDay, botPostCountsDay, userCountsWithPostsDay);\n\n        let banner;\n        let postCount;\n        let postTotalGraph;\n        let botPostTotalGraph;\n        let activeUserGraph;\n        if (skippedIntensiveQueries) {\n            banner = (\n                <div className='banner'>\n                    <div className='banner__content'>\n                        <FormattedMarkdownMessage\n                            id='analytics.system.skippedIntensiveQueries'\n                            defaultMessage='To maximize performance, some statistics are disabled. You can [re-enable them in config.json](!https://docs.mattermost.com/administration/statistics.html).'\n                        />\n                    </div>\n                </div>\n            );\n        } else {\n            postCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalPosts'\n                            defaultMessage='Total Posts'\n                        />\n                    }\n                    icon='fa-comment'\n                    count={stats[StatTypes.TOTAL_POSTS]}\n                />\n            );\n\n            botPostTotalGraph = (\n                <div className='row'>\n                    <LineChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalBotPosts'\n                                defaultMessage='Total Posts from Bots'\n                            />\n                        }\n                        data={botPostCountsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n\n            postTotalGraph = (\n                <div className='row'>\n                    <LineChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalPosts'\n                                defaultMessage='Total Posts'\n                            />\n                        }\n                        data={postCountsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n\n            activeUserGraph = (\n                <div className='row'>\n                    <LineChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.activeUsers'\n                                defaultMessage='Active Users With Posts'\n                            />\n                        }\n                        data={userCountsWithPostsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n        }\n\n        let advancedStats;\n        let advancedGraphs;\n        let sessionCount;\n        let commandCount;\n        let incomingCount;\n        let outgoingCount;\n        if (this.props.isLicensed) {\n            sessionCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalSessions'\n                            defaultMessage='Total Sessions'\n                        />\n                    }\n                    icon='fa-signal'\n                    count={stats[StatTypes.TOTAL_SESSIONS]}\n                />\n            );\n\n            commandCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalCommands'\n                            defaultMessage='Total Commands'\n                        />\n                    }\n                    icon='fa-terminal'\n                    count={stats[StatTypes.TOTAL_COMMANDS]}\n                />\n            );\n\n            incomingCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalIncomingWebhooks'\n                            defaultMessage='Incoming Webhooks'\n                        />\n                    }\n                    icon='fa-arrow-down'\n                    count={stats[StatTypes.TOTAL_IHOOKS]}\n                />\n            );\n\n            outgoingCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalOutgoingWebhooks'\n                            defaultMessage='Outgoing Webhooks'\n                        />\n                    }\n                    icon='fa-arrow-up'\n                    count={stats[StatTypes.TOTAL_OHOOKS]}\n                />\n            );\n\n            advancedStats = (\n                <div>\n                    <StatisticCount\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalWebsockets'\n                                defaultMessage='WebSocket Conns'\n                            />\n                        }\n                        icon='fa-user'\n                        count={stats[StatTypes.TOTAL_WEBSOCKET_CONNECTIONS]}\n                    />\n                    <StatisticCount\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalMasterDbConnections'\n                                defaultMessage='Master DB Conns'\n                            />\n                        }\n                        icon='fa-terminal'\n                        count={stats[StatTypes.TOTAL_MASTER_DB_CONNECTIONS]}\n                    />\n                    <StatisticCount\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalReadDbConnections'\n                                defaultMessage='Replica DB Conns'\n                            />\n                        }\n                        icon='fa-terminal'\n                        count={stats[StatTypes.TOTAL_READ_DB_CONNECTIONS]}\n                    />\n                </div>\n            );\n\n            const channelTypeData = formatChannelDoughtnutData(stats[StatTypes.TOTAL_PUBLIC_CHANNELS], stats[StatTypes.TOTAL_PRIVATE_GROUPS]);\n            const postTypeData = formatPostDoughtnutData(stats[StatTypes.TOTAL_FILE_POSTS], stats[StatTypes.TOTAL_HASHTAG_POSTS], stats[StatTypes.TOTAL_POSTS]);\n\n            let postTypeGraph;\n            if (stats[StatTypes.TOTAL_POSTS] !== -1) {\n                postTypeGraph = (\n                    <DoughnutChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.postTypes'\n                                defaultMessage='Posts, Files and Hashtags'\n                            />\n                        }\n                        data={postTypeData}\n                        width={300}\n                        height={225}\n                    />\n                );\n            }\n\n            advancedGraphs = (\n                <div className='row'>\n                    <DoughnutChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.channelTypes'\n                                defaultMessage='Channel Types'\n                            />\n                        }\n                        data={channelTypeData}\n                        width={300}\n                        height={225}\n                    />\n                    {postTypeGraph}\n                </div>\n            );\n        }\n\n        const userCount = (\n            <StatisticCount\n                title={\n                    <FormattedMessage\n                        id='analytics.system.totalUsers'\n                        defaultMessage='Total Active Users'\n                    />\n                }\n                icon='fa-user'\n                count={stats[StatTypes.TOTAL_USERS]}\n            />\n        );\n\n        const teamCount = (\n            <StatisticCount\n                title={\n                    <FormattedMessage\n                        id='analytics.system.totalTeams'\n                        defaultMessage='Total Teams'\n                    />\n                }\n                icon='fa-users'\n                count={stats[StatTypes.TOTAL_TEAMS]}\n            />\n        );\n\n        const channelCount = (\n            <StatisticCount\n                title={\n                    <FormattedMessage\n                        id='analytics.system.totalChannels'\n                        defaultMessage='Total Channels'\n                    />\n                }\n                icon='fa-globe'\n                count={stats[StatTypes.TOTAL_PUBLIC_CHANNELS] + stats[StatTypes.TOTAL_PRIVATE_GROUPS]}\n            />\n        );\n\n        const dailyActiveUsers = (\n            <StatisticCount\n                title={\n                    <FormattedMessage\n                        id='analytics.system.dailyActiveUsers'\n                        defaultMessage='Daily Active Users'\n                    />\n                }\n                icon='fa-users'\n                count={stats[StatTypes.DAILY_ACTIVE_USERS]}\n            />\n        );\n\n        const monthlyActiveUsers = (\n            <StatisticCount\n                title={\n                    <FormattedMessage\n                        id='analytics.system.monthlyActiveUsers'\n                        defaultMessage='Monthly Active Users'\n                    />\n                }\n                icon='fa-users'\n                count={stats[StatTypes.MONTHLY_ACTIVE_USERS]}\n            />\n        );\n\n        let firstRow;\n        let secondRow;\n        if (isLicensed && skippedIntensiveQueries) {\n            firstRow = (\n                <div>\n                    {userCount}\n                    {teamCount}\n                    {channelCount}\n                    {sessionCount}\n                </div>\n            );\n\n            secondRow = (\n                <div>\n                    {commandCount}\n                    {incomingCount}\n                    {outgoingCount}\n                </div>\n            );\n        } else if (isLicensed && !skippedIntensiveQueries) {\n            firstRow = (\n                <div>\n                    {userCount}\n                    {teamCount}\n                    {channelCount}\n                    {postCount}\n                </div>\n            );\n\n            secondRow = (\n                <div>\n                    {sessionCount}\n                    {commandCount}\n                    {incomingCount}\n                    {outgoingCount}\n                </div>\n            );\n        } else if (!isLicensed) {\n            firstRow = (\n                <div>\n                    {userCount}\n                    {teamCount}\n                    {channelCount}\n                    {postCount}\n                </div>\n            );\n        }\n\n        const thirdRow = (\n            <div>\n                {dailyActiveUsers}\n                {monthlyActiveUsers}\n            </div>\n        );\n\n        return (\n            <div className='wrapper--fixed team_statistics'>\n                <FormattedAdminHeader\n                    id='analytics.system.title'\n                    defaultMessage='System Statistics'\n                />\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        {banner}\n                        <div className='row'>\n                            {firstRow}\n                            {secondRow}\n                            {thirdRow}\n                            {advancedStats}\n                        </div>\n                        {advancedGraphs}\n                        {postTotalGraph}\n                        {botPostTotalGraph}\n                        {activeUserGraph}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport Constants from 'utils/constants';\n\ntype TableItem = {\n    name: string;\n    tip: string;\n    value: React.ReactNode;\n}\ntype Props = {\n    title: React.ReactNode;\n    data: TableItem[];\n}\n\nexport default class TableChart extends React.PureComponent<Props> {\n    public render() {\n        return (\n            <div className='col-sm-6'>\n                <div className='total-count recent-active-users'>\n                    <div className='title'>\n                        {this.props.title}\n                    </div>\n                    <div className='content'>\n                        <table>\n                            <tbody>\n                                {\n                                    this.props.data.map((item) => {\n                                        const tooltip = (\n                                            <Tooltip id={'tip-table-entry-' + item.name}>\n                                                {item.tip}\n                                            </Tooltip>\n                                        );\n\n                                        return (\n                                            <tr key={'table-entry-' + item.name}>\n                                                <td>\n                                                    <OverlayTrigger\n                                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                                        placement='top'\n                                                        overlay={tooltip}\n                                                    >\n                                                        <time>\n                                                            {item.name}\n                                                        </time>\n                                                    </OverlayTrigger>\n                                                </td>\n                                                <td>\n                                                    {item.value}\n                                                </td>\n                                            </tr>\n                                        );\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getTeams} from 'mattermost-redux/actions/teams';\nimport {getProfilesInTeam} from 'mattermost-redux/actions/users';\nimport {getTeamsList} from 'mattermost-redux/selectors/entities/teams';\n\nimport BrowserStore from 'stores/browser_store.jsx';\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport TeamAnalytics from './team_analytics.jsx';\n\nconst LAST_ANALYTICS_TEAM = 'last_analytics_team';\n\nfunction mapStateToProps(state) {\n    const teams = getTeamsList(state);\n    const teamId = BrowserStore.getGlobalItem(LAST_ANALYTICS_TEAM, null);\n    const initialTeam = state.entities.teams.teams[teamId] || (teams.length > 0 ? teams[0] : null);\n\n    return {\n        initialTeam,\n        locale: getCurrentLocale(state),\n        teams,\n        stats: state.entities.admin.teamAnalytics,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n            getProfilesInTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamAnalytics);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate, FormattedMessage} from 'react-intl';\nimport {General} from 'mattermost-redux/constants';\n\nimport LoadingScreen from 'components/loading_screen';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport * as AdminActions from 'actions/admin_actions';\nimport BrowserStore from 'stores/browser_store';\nimport {StatTypes} from 'utils/constants';\nimport Banner from 'components/admin_console/banner';\nimport LineChart from 'components/analytics/line_chart';\nimport StatisticCount from 'components/analytics/statistic_count';\nimport TableChart from 'components/analytics/table_chart';\n\nimport {getMonthLong} from 'utils/i18n';\n\nimport {formatPostsPerDayData, formatUsersWithPostsPerDayData} from '../format';\n\nconst LAST_ANALYTICS_TEAM = 'last_analytics_team';\n\nexport default class TeamAnalytics extends React.Component {\n    static propTypes = {\n\n        /*\n         * Array of team objects\n         */\n        teams: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /*\n         * Initial team to load analytics for\n         */\n        initialTeam: PropTypes.object,\n\n        /**\n         * The locale of the current user\n          */\n        locale: PropTypes.string.isRequired,\n        stats: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get teams\n             */\n            getTeams: PropTypes.func.isRequired,\n\n            /*\n             * Function to get users in a team\n             */\n            getProfilesInTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            team: props.initialTeam,\n            recentlyActiveUsers: [],\n            newUsers: [],\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.team) {\n            this.getData(this.state.team.id);\n        }\n\n        this.props.actions.getTeams(0, 1000);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.team && prevState.team !== this.state.team) {\n            this.getData(this.state.team.id);\n        }\n    }\n\n    getData = async (id) => {\n        AdminActions.getStandardAnalytics(id);\n        AdminActions.getPostsPerDayAnalytics(id);\n        AdminActions.getBotPostsPerDayAnalytics(id);\n        AdminActions.getUsersPerDayAnalytics(id);\n        const {data: recentlyActiveUsers} = await this.props.actions.getProfilesInTeam(id, 0, General.PROFILE_CHUNK_SIZE, 'last_activity_at');\n        const {data: newUsers} = await this.props.actions.getProfilesInTeam(id, 0, General.PROFILE_CHUNK_SIZE, 'create_at');\n\n        this.setState({\n            recentlyActiveUsers,\n            newUsers,\n        });\n    }\n\n    handleTeamChange = (e) => {\n        const teamId = e.target.value;\n\n        let team;\n        this.props.teams.forEach((t) => {\n            if (t.id === teamId) {\n                team = t;\n            }\n        });\n\n        this.setState({\n            team,\n        });\n\n        BrowserStore.setGlobalItem(LAST_ANALYTICS_TEAM, teamId);\n    }\n\n    render() {\n        if (this.props.teams.length === 0 || !this.state.team || !this.props.stats[this.state.team.id]) {\n            return <LoadingScreen/>;\n        }\n\n        if (this.state.team == null) {\n            return (\n                <Banner\n                    description={\n                        <FormattedMessage\n                            id='analytics.team.noTeams'\n                            defaultMessage='There are no teams on this server for which to view statistics.'\n                        />\n                    }\n                />\n            );\n        }\n\n        const stats = this.props.stats[this.state.team.id];\n        const postCountsDay = formatPostsPerDayData(stats[StatTypes.POST_PER_DAY]);\n        const userCountsWithPostsDay = formatUsersWithPostsPerDayData(stats[StatTypes.USERS_WITH_POSTS_PER_DAY]);\n\n        let banner = (\n            <div className='banner'>\n                <div className='banner__content'>\n                    <FormattedMessage\n                        id='analytics.system.info'\n                        defaultMessage='Only data for the chosen team is calculated. Excludes posts made in direct message channels, which are not tied to a team.'\n                    />\n                </div>\n            </div>\n        );\n\n        let totalPostsCount;\n        let postTotalGraph;\n        let userActiveGraph;\n        if (stats[StatTypes.TOTAL_POSTS] === -1) {\n            banner = (\n                <div className='banner'>\n                    <div className='banner__content'>\n                        <FormattedMarkdownMessage\n                            id='analytics.system.infoAndSkippedIntensiveQueries'\n                            defaultMessage='Only data for the chosen team is calculated. Excludes posts made in direct message channels, which are not tied to a team. \\n \\n Some statistics have been omitted because they put too much load on the system to calculate. See [https://docs.mattermost.com/administration/statistics.html](!https://docs.mattermost.com/administration/statistics.html) for more details.'\n                        />\n                    </div>\n                </div>\n            );\n        } else {\n            totalPostsCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.team.totalPosts'\n                            defaultMessage='Total Posts'\n                        />\n                    }\n                    icon='fa-comment'\n                    count={stats[StatTypes.TOTAL_POSTS]}\n                />\n            );\n\n            postTotalGraph = (\n                <div className='row'>\n                    <LineChart\n                        key={this.state.team.id}\n                        title={\n                            <FormattedMessage\n                                id='analytics.team.totalPosts'\n                                defaultMessage='Total Posts'\n                            />\n                        }\n                        data={postCountsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n\n            userActiveGraph = (\n                <div className='row'>\n                    <LineChart\n                        key={this.state.team.id}\n                        title={\n                            <FormattedMessage\n                                id='analytics.team.activeUsers'\n                                defaultMessage='Active Users With Posts'\n                            />\n                        }\n                        data={userCountsWithPostsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n        }\n\n        const recentActiveUsers = formatRecentUsersData(this.state.recentlyActiveUsers, this.props.locale);\n        const newlyCreatedUsers = formatNewUsersData(this.state.newUsers, this.props.locale);\n\n        const teams = this.props.teams.sort((a, b) => {\n            const aName = a.display_name.toUpperCase();\n            const bName = b.display_name.toUpperCase();\n            if (aName === bName) {\n                return 0;\n            }\n            if (aName > bName) {\n                return 1;\n            }\n            return -1;\n        }).map((team) => {\n            return (\n                <option\n                    key={team.id}\n                    value={team.id}\n                >\n                    {team.display_name}\n                </option>\n            );\n        });\n\n        return (\n            <div className='wrapper--fixed team_statistics'>\n                <div className='admin-console__header team-statistics__header-row'>\n                    <div className='team-statistics__header'>\n                        <FormattedMarkdownMessage\n                            id='analytics.team.title'\n                            defaultMessage='Team Statistics for {team}'\n                            values={{\n                                team: this.state.team.display_name,\n                            }}\n                        />\n                    </div>\n                    <div className='team-statistics__team-filter'>\n                        <select\n                            className='form-control team-statistics__team-filter__dropdown'\n                            onChange={this.handleTeamChange}\n                            value={this.state.team.id}\n                        >\n                            {teams}\n                        </select>\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        {banner}\n                        <div className='row'>\n                            <StatisticCount\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.totalUsers'\n                                        defaultMessage='Total Active Users'\n                                    />\n                                }\n                                icon='fa-users'\n                                count={stats[StatTypes.TOTAL_USERS]}\n                            />\n                            <StatisticCount\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.publicChannels'\n                                        defaultMessage='Public Channels'\n                                    />\n                                }\n                                icon='fa-globe'\n                                count={stats[StatTypes.TOTAL_PUBLIC_CHANNELS]}\n                            />\n                            <StatisticCount\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.privateGroups'\n                                        defaultMessage='Private Channels'\n                                    />\n                                }\n                                icon='fa-lock'\n                                count={stats[StatTypes.TOTAL_PRIVATE_GROUPS]}\n                            />\n                            {totalPostsCount}\n                        </div>\n                        {postTotalGraph}\n                        {userActiveGraph}\n                        <div className='row'>\n                            <TableChart\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.recentUsers'\n                                        defaultMessage='Recent Active Users'\n                                    />\n                                }\n                                data={recentActiveUsers}\n                            />\n                            <TableChart\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.newlyCreated'\n                                        defaultMessage='Newly Created Users'\n                                    />\n                                }\n                                data={newlyCreatedUsers}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport function formatRecentUsersData(data, locale) {\n    if (data == null) {\n        return [];\n    }\n\n    const formattedData = data.map((user) => {\n        const item = {};\n        item.name = user.username;\n        item.value = (\n            <FormattedDate\n                value={user.last_activity_at}\n                day='numeric'\n                month={getMonthLong(locale)}\n                year='numeric'\n                hour12={true}\n                hour='2-digit'\n                minute='2-digit'\n            />\n        );\n        item.tip = user.email;\n\n        return item;\n    });\n\n    return formattedData;\n}\n\nexport function formatNewUsersData(data, locale) {\n    if (data == null) {\n        return [];\n    }\n\n    const formattedData = data.map((user) => {\n        const item = {};\n        item.name = user.username;\n        item.value = (\n            <FormattedDate\n                value={user.create_at}\n                day='numeric'\n                month={getMonthLong(locale)}\n                year='numeric'\n                hour12={true}\n                hour='2-digit'\n                minute='2-digit'\n            />\n        );\n        item.tip = user.email;\n\n        return item;\n    });\n\n    return formattedData;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport {localizeMessage, compareChannels} from 'utils/utils.jsx';\n\nimport MultiSelect from 'components/multiselect/multiselect';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport GlobeIcon from 'components/widgets/icons/globe_icon';\nimport LockIcon from 'components/widgets/icons/lock_icon';\n\nconst CHANNELS_PER_PAGE = 50;\n\nexport default class ChannelSelectorModal extends React.Component {\n    static propTypes = {\n        searchTerm: PropTypes.string.isRequired,\n        onModalDismissed: PropTypes.func,\n        onChannelsSelected: PropTypes.func,\n        groupID: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            loadChannels: PropTypes.func.isRequired,\n            setModalSearchTerm: PropTypes.func.isRequired,\n            searchChannels: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            values: [],\n            show: true,\n            search: false,\n            loadingChannels: true,\n            channels: [],\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.loadChannels(0, CHANNELS_PER_PAGE + 1, this.props.groupID, true).then((response) => {\n            this.setState({channels: response.data.sort(compareChannels)});\n            this.setChannelsLoadingState(false);\n        });\n    }\n\n    componentDidUpdate(prevProps) { // eslint-disable-line camelcase\n        if (prevProps.searchTerm !== this.props.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n\n            const searchTerm = this.props.searchTerm;\n            if (searchTerm === '') {\n                this.props.actions.loadChannels(0, CHANNELS_PER_PAGE + 1, this.props.groupID, true).then((response) => {\n                    this.setState({channels: response.data.sort(compareChannels)});\n                    this.setChannelsLoadingState(false);\n                });\n            } else {\n                this.searchTimeoutId = setTimeout(\n                    async () => {\n                        this.setChannelsLoadingState(true);\n                        const response = await this.props.actions.searchChannels(searchTerm, this.props.groupID, true);\n                        this.setState({channels: response.data});\n                        this.setChannelsLoadingState(false);\n                    },\n                    Constants.SEARCH_TIMEOUT_MILLISECONDS\n                );\n            }\n        }\n    }\n\n    handleHide = () => {\n        this.props.actions.setModalSearchTerm('');\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n    }\n\n    handleSubmit = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (this.state.values.length === 0) {\n            return;\n        }\n\n        this.props.onChannelsSelected(this.state.values);\n        this.handleHide();\n    }\n\n    addValue = (value) => {\n        const values = Object.assign([], this.state.values);\n        if (value && value.id && values.findIndex((v) => v.id === value.id) === -1) {\n            values.push(value);\n        }\n\n        this.setState({values});\n    }\n\n    setChannelsLoadingState = (loadingState) => {\n        this.setState({\n            loadingChannels: loadingState,\n        });\n    }\n\n    handlePageChange = (page, prevPage) => {\n        if (page > prevPage) {\n            this.setChannelsLoadingState(true);\n            this.props.actions.loadChannels(page, CHANNELS_PER_PAGE + 1, this.props.groupID, true).then((response) => {\n                const newState = [...this.state.channels];\n                const stateChannelIDs = this.state.channels.map((stateChannel) => stateChannel.id);\n                response.data.forEach((serverChannel) => {\n                    if (!stateChannelIDs.includes(serverChannel.id)) {\n                        newState.push(serverChannel);\n                    }\n                });\n                this.setState({channels: newState.sort(compareChannels)});\n                this.setChannelsLoadingState(false);\n            });\n        }\n    }\n\n    handleDelete = (values) => {\n        this.setState({values});\n    }\n\n    search = (term, multiselectComponent) => {\n        if (multiselectComponent.state.page !== 0) {\n            multiselectComponent.setState({page: 0});\n        }\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    renderOption(option, isSelected, onAdd) {\n        let rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? 'selected' : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n            >\n                <div\n                    className='more-modal__details'\n                >\n                    {option.type === 'P' &&\n                        <LockIcon className='icon icon__lock'/>}\n                    {option.type === 'O' &&\n                        <GlobeIcon className='icon icon__globe'/>}\n                    <span className='channel-name'>{option.display_name}</span>\n                    <span className='team-name'>{'(' + option.team_display_name + ')'}</span>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <i className='fa fa-plus'/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderValue(props) {\n        return props.data.display_name + ' (' + props.data.team_display_name + ')';\n    }\n\n    render() {\n        const numRemainingText = (\n            <FormattedMessage\n                id='multiselect.selectChannels'\n                defaultMessage='Use ↑↓ to browse, ↵ to select.'\n            />\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n\n        return (\n            <Modal\n                dialogClassName={'a11y__modal more-modal more-direct-channels channel-selector-modal'}\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n                role='dialog'\n                aria-labelledby='channelSelectorModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='channelSelectorModalLabel'\n                    >\n                        <FormattedMarkdownMessage\n                            id='add_channels_to_scheme.title'\n                            defaultMessage='Add Channels To **Channel Selection** List'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <MultiSelect\n                        key='addChannelsToSchemeKey'\n                        options={this.state.channels}\n                        optionRenderer={this.renderOption}\n                        values={this.state.values}\n                        valueRenderer={this.renderValue}\n                        perPage={CHANNELS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.addValue}\n                        handleSubmit={this.handleSubmit}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        saving={false}\n                        loading={this.state.loadingChannels}\n                        placeholderText={localizeMessage('multiselect.addChannelsPlaceholder', 'Search and add channels')}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getAllChannels as loadChannels, searchAllChannels} from 'mattermost-redux/actions/channels';\n\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport ChannelSelectorModal from './channel_selector_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        searchTerm: state.views.search.modalSearch,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadChannels,\n            setModalSearchTerm,\n            searchChannels: searchAllChannels,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelSelectorModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\ntype Props = {\n    show: boolean;\n    onConfirm: (event: React.MouseEvent<HTMLButtonElement>) => void;\n    onCancel: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport default class DiscardChangesModal extends React.Component<Props> {\n    public render(): JSX.Element {\n        const title: JSX.Element = (\n            <FormattedMessage\n                id='discard_changes_modal.title'\n                defaultMessage='Discard Changes?'\n            />\n        );\n\n        const message: JSX.Element = (\n            <FormattedMessage\n                id='discard_changes_modal.message'\n                defaultMessage='You have unsaved changes, are you sure you want to discard them?'\n            />\n        );\n\n        const buttonClass = 'btn btn-primary';\n        const button: JSX.Element = (\n            <FormattedMessage\n                id='discard_changes_modal.leave'\n                defaultMessage='Yes, Discard'\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        const {show, onConfirm, onCancel} = this.props;\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={buttonClass}\n                confirmButtonText={button}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getTeams as loadTeams, searchTeams} from 'mattermost-redux/actions/teams';\nimport {getTeams} from 'mattermost-redux/selectors/entities/teams';\n\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport TeamSelectorModal from './team_selector_modal.jsx';\n\nfunction mapStateToProps(state) {\n    const searchTerm = state.views.search.modalSearch;\n\n    const teams = Object.values(getTeams(state) || {}).filter((team) => {\n        return team.display_name.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n               team.description.toLowerCase().startsWith(searchTerm.toLowerCase());\n    });\n\n    return {\n        searchTerm,\n        teams,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadTeams,\n            setModalSearchTerm,\n            searchTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamSelectorModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants, {ModalIdentifiers} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport MultiSelect from 'components/multiselect/multiselect';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport {imageURLForTeam} from 'utils/utils';\n\nconst TEAMS_PER_PAGE = 50;\n\nexport default class TeamSelectorModal extends React.Component {\n    static propTypes = {\n        currentSchemeId: PropTypes.string,\n        alreadySelected: PropTypes.array,\n        searchTerm: PropTypes.string.isRequired,\n        teams: PropTypes.array.isRequired,\n        onModalDismissed: PropTypes.func,\n        onTeamsSelected: PropTypes.func,\n        modalID: PropTypes.string,\n        actions: PropTypes.shape({\n            loadTeams: PropTypes.func.isRequired,\n            setModalSearchTerm: PropTypes.func.isRequired,\n            searchTeams: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            values: [],\n            show: true,\n            search: false,\n            loadingTeams: true,\n            confirmAddModal: false,\n            confirmAddTeam: null,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.loadTeams(0, TEAMS_PER_PAGE + 1).then(() => {\n            this.setTeamsLoadingState(false);\n        });\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.searchTerm !== nextProps.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n\n            const searchTerm = nextProps.searchTerm;\n            if (searchTerm === '') {\n                return;\n            }\n\n            this.searchTimeoutId = setTimeout(\n                async () => {\n                    this.setTeamsLoadingState(true);\n                    await this.props.actions.searchTeams(searchTerm);\n                    this.setTeamsLoadingState(false);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS\n            );\n        }\n    }\n\n    handleHide = () => {\n        this.props.actions.setModalSearchTerm('');\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n    }\n\n    handleSubmit = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (this.state.values.length === 0) {\n            return;\n        }\n\n        this.props.onTeamsSelected(this.state.values);\n        this.handleHide();\n    }\n\n    addValue = (value, confirmed = false) => {\n        if (this.props.modalID === ModalIdentifiers.ADD_TEAMS_TO_SCHEME && value.scheme_id !== null && value.scheme_id !== '' && !confirmed) {\n            this.setState({confirmAddModal: true, confirmAddTeam: value});\n            return;\n        }\n        const values = Object.assign([], this.state.values);\n        const teamIds = values.map((v) => v.id);\n        if (value && value.id && teamIds.indexOf(value.id) === -1) {\n            values.push(value);\n        }\n\n        this.setState({values, confirmAddModal: false, confirmAddTeam: null});\n    }\n\n    setTeamsLoadingState = (loadingState) => {\n        this.setState({\n            loadingTeams: loadingState,\n        });\n    }\n\n    handlePageChange = (page, prevPage) => {\n        if (page > prevPage) {\n            this.setTeamsLoadingState(true);\n            this.props.actions.loadTeams(page, TEAMS_PER_PAGE + 1).then(() => {\n                this.setTeamsLoadingState(false);\n            });\n        }\n    }\n\n    handleDelete = (values) => {\n        this.setState({values});\n    }\n\n    search = (term, multiselectComponent) => {\n        if (multiselectComponent.state.page !== 0) {\n            multiselectComponent.setState({page: 0});\n        }\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    renderOption(option, isSelected, onAdd) {\n        var rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? 'selected' : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n            >\n                <div\n                    className='more-modal__details'\n                >\n                    <div className='team-info-block'>\n                        <TeamIcon\n                            name={option.display_name}\n                            url={imageURLForTeam(option)}\n                        />\n                        <div className='team-data'>\n                            <div className='title'>{option.display_name}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <i className='fa fa-plus'/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderValue(props) {\n        return props.data.display_name;\n    }\n\n    renderConfirmModal(show, team) {\n        const title = (\n            <FormattedMessage\n                id='add_teams_to_scheme.confirmation.title'\n                defaultMessage='Team Override Scheme Change?'\n            />\n        );\n        const message = (\n            <FormattedMessage\n                id='add_teams_to_scheme.confirmation.message'\n                defaultMessage='This team is already selected in another team scheme, are you sure you want to move it to this team scheme?'\n            />\n        );\n        const confirmButtonText = (\n            <FormattedMessage\n                id='add_teams_to_scheme.confirmation.accept'\n                defaultMessage='Yes, Move Team'\n            />\n        );\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                confirmButtonText={confirmButtonText}\n                onCancel={() => this.setState({confirmAddModal: false, confirmAddTeam: null})}\n                onConfirm={() => this.addValue(team, true)}\n            />\n        );\n    }\n\n    render() {\n        const confirmModal = this.renderConfirmModal(this.state.confirmAddModal, this.state.confirmAddTeam);\n        const numRemainingText = (\n            <FormattedMessage\n                id='multiselect.selectTeams'\n                defaultMessage='Use ↑↓ to browse, ↵ to select.'\n            />\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n\n        let teams = [];\n        if (this.props.teams) {\n            teams = this.props.teams.filter((team) => team.delete_at === 0);\n            teams = teams.filter((team) => team.scheme_id !== this.currentSchemeId);\n            teams = teams.filter((team) => this.props.alreadySelected.indexOf(team.id) === -1);\n            teams.sort((a, b) => {\n                const aName = a.display_name.toUpperCase();\n                const bName = b.display_name.toUpperCase();\n                if (aName === bName) {\n                    return 0;\n                }\n                if (aName > bName) {\n                    return 1;\n                }\n                return -1;\n            });\n        }\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal more-modal more-direct-channels team-selector-modal'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n                role='dialog'\n                aria-labelledby='teamSelectorModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='teamSelectorModalLabel'\n                    >\n                        <FormattedMarkdownMessage\n                            id='add_teams_to_scheme.title'\n                            defaultMessage='Add Teams To **Team Selection** List'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {confirmModal}\n                    <MultiSelect\n                        key='addTeamsToSchemeKey'\n                        options={teams}\n                        optionRenderer={this.renderOption}\n                        values={this.state.values}\n                        valueRenderer={this.renderValue}\n                        perPage={TEAMS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.addValue}\n                        handleSubmit={this.handleSubmit}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        saving={false}\n                        loading={this.state.loadingTeams}\n                        placeholderText={localizeMessage('multiselect.addTeamsPlaceholder', 'Search and add teams')}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\ntype Props = {\n    onToggle: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    toggled?: boolean;\n    disabled?: boolean;\n    onText?: React.ReactNode;\n    offText?: React.ReactNode;\n}\n\nconst Toggle: React.FC<Props> = (props: Props) => {\n    const {onToggle, toggled, disabled, onText, offText} = props;\n    return (\n        <button\n            type='button'\n            onClick={onToggle}\n            className={`btn btn-lg btn-toggle ${toggled && 'active'} ${disabled && 'disabled'}`}\n            aria-pressed={toggled ? 'true' : 'false'}\n        >\n            <div className='handle'/>\n            {text(toggled, onText, offText)}\n        </button>\n    );\n};\n\nfunction text(toggled?: boolean, onText?: React.ReactNode, offText?: React.ReactNode): React.ReactNode | null {\n    if ((toggled && !onText) || (!toggled && !offText)) {\n        return null;\n    }\n    return (<div className={`bg-text ${toggled ? 'on' : 'off'}`}>{toggled ? onText : offText}</div>);\n}\n\nexport default Toggle;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport UserListRow from './user_list_row_with_error.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const user = ownProps.user || {};\n    return {\n        status: getStatusForUserId(state, user.id),\n    };\n}\n\nexport default connect(mapStateToProps)(UserListRow);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Client4} from 'mattermost-redux/client';\n\nimport * as Utils from 'utils/utils.jsx';\nimport ProfilePicture from 'components/profile_picture';\nimport BotBadge from 'components/widgets/badges/bot_badge';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class UserListRowWithError extends React.Component {\n    static propTypes = {\n        user: PropTypes.object.isRequired,\n        status: PropTypes.string,\n        extraInfo: PropTypes.array,\n        actions: PropTypes.arrayOf(PropTypes.func),\n        actionProps: PropTypes.object,\n        actionUserProps: PropTypes.object,\n        index: PropTypes.number,\n        totalUsers: PropTypes.number,\n        userCount: PropTypes.number,\n    };\n\n    static defaultProps = {\n        extraInfo: [],\n        actions: [],\n        actionProps: {},\n        actionUserProps: {},\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    onError = (errorObj) => {\n        this.setState({\n            error: errorObj,\n        });\n    }\n\n    render() {\n        let buttons = null;\n        if (this.props.actions) {\n            buttons = this.props.actions.map((Action, index) => {\n                return (\n                    <Action\n                        key={index.toString()}\n                        user={this.props.user}\n                        index={this.props.index}\n                        totalUsers={this.props.totalUsers}\n                        {...this.props.actionProps}\n                        {...this.props.actionUserProps}\n                        onError={this.onError}\n                    />\n                );\n            });\n        }\n\n        // QUICK HACK, NEEDS A PROP FOR TOGGLING STATUS\n        let email = this.props.user.email;\n        let emailStyle = 'more-modal__description';\n        let status;\n        if (this.props.user.is_bot) {\n            email = null;\n        } else if (this.props.extraInfo && this.props.extraInfo.length > 0) {\n            email = (\n                <FormattedMarkdownMessage\n                    id='admin.user_item.emailTitle'\n                    defaultMessage='**Email:** {email}'\n                    values={{\n                        email: this.props.user.email,\n                    }}\n                />\n            );\n            emailStyle = '';\n        } else if (this.props.user.status) {\n            status = this.props.user.status;\n        } else {\n            status = this.props.status;\n        }\n\n        if (this.props.user.is_bot) {\n            status = null;\n        }\n\n        let userCountID = null;\n        let userCountEmail = null;\n        if (this.props.userCount >= 0) {\n            userCountID = Utils.createSafeId('userListRowName' + this.props.userCount);\n            userCountEmail = Utils.createSafeId('userListRowEmail' + this.props.userCount);\n        }\n\n        let error = null;\n        if (this.state.error) {\n            error = (\n                <div className='has-error'>\n                    <label className='has-error control-label'>{this.state.error.message}</label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                data-testid='userListRow'\n                key={this.props.user.id}\n                className='more-modal__row'\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(this.props.user.id, this.props.user.last_picture_update)}\n                    status={status}\n                    size='md'\n                />\n                <div className='more-modal__right'>\n                    <div className='more-modal__top'>\n                        <div className='more-modal__details'>\n                            <div\n                                id={userCountID}\n                                className='more-modal__name'\n                            >\n                                <Link to={'/admin_console/user_management/user/' + this.props.user.id}>{Utils.displayEntireNameForUser(this.props.user)}</Link>\n                                <BotBadge\n                                    className='badge-admin'\n                                    show={Boolean(this.props.user.is_bot)}\n                                />\n                            </div>\n                            <div\n                                id={userCountEmail}\n                                className={emailStyle}\n                            >\n                                {email}\n                            </div>\n                            {this.props.extraInfo}\n                        </div>\n                        <div\n                            className='more-modal__actions'\n                        >\n                            {buttons}\n                        </div>\n                    </div>\n                    <div\n                        className='more-modal__bottom'\n                    >\n                        {error}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\ntype Props = {\n    children: JSX.Element[] | JSX.Element | string;\n};\n\nexport default class AdminHeader extends React.Component<Props> {\n    public render() {\n        return (\n            <div className={'admin-console__header'}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./admin_panel.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport './admin_panel.scss';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\ntype Props = {\n    id?: string;\n    className: string;\n    onHeaderClick?: React.EventHandler<React.MouseEvent>;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    subtitleValues?: any;\n    button?: React.ReactNode;\n    children?: React.ReactNode;\n};\n\nconst AdminPanel: React.FC<Props> = (props: Props) => (\n    <div\n        className={'AdminPanel ' + props.className}\n        id={props.id}\n    >\n        <div\n            className='header'\n            onClick={props.onHeaderClick}\n        >\n            <div>\n                <h3>\n                    <FormattedMessage\n                        id={props.titleId}\n                        defaultMessage={props.titleDefault}\n                    />\n                </h3>\n                <span>\n                    <FormattedMarkdownMessage\n                        id={props.subtitleId}\n                        defaultMessage={props.subtitleDefault}\n                        values={props.subtitleValues}\n                    />\n                </span>\n            </div>\n            {props.button &&\n                <div className='button'>\n                    {props.button}\n                </div>\n            }\n        </div>\n        {props.children}\n    </div>\n);\n\nAdminPanel.defaultProps = {\n    className: '',\n};\n\nexport default AdminPanel;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport AccordionToggleIcon from 'components/widgets/icons/accordion_toggle_icon.jsx';\n\nimport AdminPanel from './admin_panel';\n\ntype Props = {\n    children?: React.ReactNode;\n    className: string;\n    id?: string;\n    open: boolean;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    onToggle?: React.EventHandler<React.MouseEvent>;\n};\n\nconst AdminPanelTogglable: React.FC<Props> = (props: Props) => {\n    return (\n        <AdminPanel\n            className={'AdminPanelTogglable ' + props.className + (props.open ? '' : ' closed')}\n            id={props.id}\n            titleId={props.titleId}\n            titleDefault={props.titleDefault}\n            subtitleId={props.subtitleId}\n            subtitleDefault={props.subtitleDefault}\n            onHeaderClick={props.onToggle}\n            button={<AccordionToggleIcon/>}\n        >\n            {props.children}\n        </AdminPanel>\n    );\n};\n\nAdminPanelTogglable.defaultProps = {\n    className: '',\n    open: true,\n};\n\nexport default AdminPanelTogglable;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport AdminPanel from './admin_panel';\n\ntype Props = {\n    children?: React.ReactNode;\n    className: string;\n    id?: string;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    onButtonClick?: React.EventHandler<React.MouseEvent>;\n    disabled?: boolean;\n    buttonTextId?: string;\n    buttonTextDefault?: string;\n}\n\nconst AdminPanelWithButton: React.FC<Props> = (props: Props) => {\n    let button;\n    if (props.onButtonClick && props.buttonTextId) {\n        button = (\n            <a\n                className='btn btn-primary'\n                onClick={props.disabled ? (e) => e.preventDefault() : props.onButtonClick}\n            >\n                <FormattedMessage\n                    id={props.buttonTextId}\n                    defaultMessage={props.buttonTextDefault}\n                />\n            </a>\n        );\n    }\n\n    return (\n        <AdminPanel\n            className={'AdminPanelWithButton ' + props.className}\n            id={props.id}\n            titleId={props.titleId}\n            titleDefault={props.titleDefault}\n            subtitleId={props.subtitleId}\n            subtitleDefault={props.subtitleDefault}\n            button={button}\n        >\n            {props.children}\n        </AdminPanel>\n    );\n};\n\nAdminPanelWithButton.defaultProps = {\n    className: '',\n};\n\nexport default AdminPanelWithButton;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport AdminPanel from './admin_panel';\n\ntype Props = {\n    children?: React.ReactNode;\n    className: string;\n    id?: string;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    url: string;\n    disabled: boolean;\n    linkTextId: string;\n    linkTextDefault: string;\n}\n\nconst AdminPanelWithLink = (props: Props) => {\n    const button = (\n        <Link\n            className='btn btn-primary'\n            to={props.url}\n            onClick={props.disabled ? (e) => e.preventDefault() : () => null}\n        >\n            <FormattedMessage\n                id={props.linkTextId}\n                defaultMessage={props.linkTextDefault}\n            />\n        </Link>\n    );\n\n    return (\n        <AdminPanel\n            className={'AdminPanelWithLink ' + props.className}\n            id={props.id}\n            titleId={props.titleId}\n            titleDefault={props.titleDefault}\n            subtitleId={props.subtitleId}\n            subtitleDefault={props.subtitleDefault}\n            button={button}\n        >\n            {props.children}\n        </AdminPanel>\n    );\n};\n\nAdminPanelWithLink.defaultProps = {\n    className: '',\n};\n\nexport default AdminPanelWithLink;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport AdminHeader from './admin_header';\n\ntype Props = {\n    id: string;\n    defaultMessage: string;\n    values?: any;\n};\n\nconst FormattedAdminHeader: React.FC<Props> = (props: Props) => (\n    <AdminHeader>\n        <FormattedMarkdownMessage\n            id={props.id}\n            defaultMessage={props.defaultMessage}\n            values={props.values}\n        />\n    </AdminHeader>\n);\n\nFormattedAdminHeader.defaultProps = {\n    values: {},\n};\n\nexport default FormattedAdminHeader;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class AccordionToggleIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='30px'\n                    height='30px'\n                    viewBox='0 0 30 30'\n                >\n                    <g\n                        id='Developer-Export'\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='none'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-995.000000, -1372.000000)'\n                            id='All-Team-Members'\n                        >\n                            <g transform='translate(245.000000, 698.000000)'>\n                                <g\n                                    id='Team-Administrators'\n                                    transform='translate(0.000000, 651.000000)'\n                                >\n                                    <g id='accordion-header'>\n                                        <g\n                                            id='accordion---expanded'\n                                            transform='translate(750.000000, 23.000000)'\n                                        >\n                                            <path\n                                                d='M23.1484532,13.3124932 C23.3437659,13.1171805 23.3437659,12.7968676 23.1484532,12.6015549 L21.8515766,11.3124908 C21.6562639,11.1171781 21.3437635,11.1171781 21.1484508,11.3124908 L15.0000083,17.4609333 L8.8515659,11.3124908 C8.65625317,11.1171781 8.34375279,11.1171781 8.14844006,11.3124908 L6.85156352,12.6015549 C6.65625078,12.7968676 6.65625078,13.1171805 6.85156352,13.3124932 L14.6484454,21.1015626 C14.8437582,21.2968754 15.1562585,21.2968754 15.3515713,21.1015626 L23.1484532,13.3124932 Z'\n                                                id=''\n                                                fill='#979797'\n                                            />\n                                            <circle\n                                                id='Oval-2'\n                                                stroke='#989898'\n                                                strokeWidth='2'\n                                                cx='15'\n                                                cy='15'\n                                                r='14'\n                                            />\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class AtIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 24 24'\n                >\n                    <path\n                        fill='inherit'\n                        d='M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class CheckboxCheckedIcon extends React.PureComponent {\n    render() {\n        return (\n            <svg\n                width='18px'\n                height='18px'\n                viewBox='0 0 18 18'\n            >\n                <g\n                    id='Developer-Export'\n                    stroke='none'\n                    strokeWidth='1'\n                    fillRule='evenodd'\n                >\n                    <g\n                        transform='translate(-285.000000, -933.000000)'\n                        id='All-Team-Members'\n                    >\n                        <g transform='translate(245.000000, 698.000000)'>\n                            <g\n                                id='Channel-Administrators'\n                                transform='translate(0.000000, 106.000000)'\n                            >\n                                <g\n                                    id='data-table/column-1'\n                                    transform='translate(11.000000, 86.000000)'\n                                >\n                                    <g\n                                        id='row-checkbox---Public-Channels'\n                                        transform='translate(12.000000, 35.000000)'\n                                    >\n                                        <g\n                                            id='Stacked-Group'\n                                            transform='translate(0.000000, 5.000000)'\n                                        >\n                                            <g id='data-table/1st/row-checkbox-label-base'>\n                                                <g\n                                                    id='check-on-copy-11'\n                                                    transform='translate(14.000000, 0.000000)'\n                                                >\n                                                    <path\n                                                        d='M19,3 L5,3 C3.9,3 3,3.9 3,5 L3,19 C3,20.1 3.9,21 5,21 L19,21 C20.1,21 21,20.1 21,19 L21,5 C21,3.9 20.1,3 19,3 L19,3 Z M10,17 L5,12.1923077 L6.4,10.8461538 L10,14.3076923 L17.6,7 L19,8.34615385 L10,17 L10,17 Z'\n                                                        id='checkbox---checked'\n                                                    />\n                                                </g>\n                                            </g>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class CheckboxPartialIcon extends React.PureComponent {\n    render() {\n        return (\n            <svg\n                width='18px'\n                height='18px'\n                viewBox='0 0 18 18'\n            >\n                <g\n                    id='Developer-Export'\n                    stroke='none'\n                    strokeWidth='1'\n                    fillRule='evenodd'\n                >\n                    <g\n                        transform='translate(-298.000000, -1273.000000)'\n                        id='All-Team-Members'\n                    >\n                        <g transform='translate(245.000000, 698.000000)'>\n                            <g\n                                id='Channel-Administrators'\n                                transform='translate(0.000000, 106.000000)'\n                            >\n                                <g\n                                    id='data-table/column-1'\n                                    transform='translate(11.000000, 86.000000)'\n                                >\n                                    <g\n                                        id='row-checkbox---@all-@channel-Mentions'\n                                        transform='translate(0.000000, 375.000000)'\n                                    >\n                                        <g id='Stacked-Group'>\n                                            <g\n                                                id='data-table/1st/row-checkbox-label-base'\n                                                transform='translate(25.000000, 5.000000)'\n                                            >\n                                                <g\n                                                    id='check-on-copy-11'\n                                                    transform='translate(14.000000, 0.000000)'\n                                                >\n                                                    <path\n                                                        d='M19,3 C20.1,3 21,3.9 21,5 L21,19 C21,20.1 20.1,21 19,21 L5,21 C3.9,21 3,20.1 3,19 L3,5 C3,3.9 3.9,3 5,3 L19,3 Z M7,11 L7,13 L17,13 L17,11 L7,11 Z'\n                                                        id='checkbox---partial'\n                                                    />\n                                                </g>\n                                            </g>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class EllipsisHorizontalIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <FormattedMessage\n                    id='generic_icons.elipsisHorizontalIcon'\n                    defaultMessage='Ellipsis Horizontal Icon'\n                >\n                    {(ariaLabel) => (\n                        <svg\n                            width='24px'\n                            height='24px'\n                            viewBox='0 0 24 24'\n                            role='img'\n                            aria-label={ariaLabel}\n                        >\n                            <path d='M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z'/>\n                        </svg>\n                    )}\n                </FormattedMessage>\n            </span>\n        );\n    }\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class EmailIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 24 24'\n                >\n                    <path\n                        fill='inherit'\n                        d='M22 6C22 4.9 21.1 4 20 4H4C2.9 4 2 4.9 2 6V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6M20 6L12 11L4 6H20M20 18H4V8L12 13L20 8V18Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {intlShape} from 'react-intl';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class NextIcon extends React.PureComponent<Props> {\n    public static contextTypes = {\n        intl: intlShape.isRequired,\n    };\n\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const {formatMessage} = this.context.intl;\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <i\n                className={className}\n                title={formatMessage({id: 'generic_icons.next', defaultMessage: 'Next Icon'})}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {intlShape} from 'react-intl';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class PreviousIcon extends React.PureComponent<Props> {\n    public static contextTypes = {\n        intl: intlShape.isRequired,\n    };\n\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const {formatMessage} = this.context.intl;\n        const className = 'fa fa-1x fa-angle-left' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <i\n                className={className}\n                title={formatMessage({id: 'generic_icons.previous', defaultMessage: 'Previous Icon'})}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class ReloadIcon extends React.PureComponent {\n    render() {\n        return (\n            <FormattedMessage\n                id='generic_icons.reload'\n                defaultMessage='Reload Icon'\n            >\n                {(title) => (\n                    <i\n                        className='fa fa-refresh'\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class ShieldOutlineIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 24 24'\n                >\n                    <path\n                        fill='inherit'\n                        d='M21,11C21,16.55 17.16,21.74 12,23C6.84,21.74 3,16.55 3,11V5L12,1L21,5V11M12,21C15.75,20 19,15.54 19,11.22V6.3L12,3.18L5,6.3V11.22C5,15.54 8.25,20 12,21Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/069c3bb3dec2befb54a0694265b0e7fc.png\";","module.exports = __webpack_public_path__ + \"files/6990c0422142b59e2cacdc823aab9d6d.png\";","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".AdminButtonOutline.btn.btn-primary {\\n  background-color: transparent !important;\\n  border: solid 1px #165DBA !important;\\n  color: #165DBA;\\n  margin-right: 8px; }\\n  .AdminButtonOutline.btn.btn-primary:hover, .AdminButtonOutline.btn.btn-primary:active, .AdminButtonOutline.btn.btn-primary:focus, .AdminButtonOutline.btn.btn-primary:active:focus {\\n    color: #165DBA; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".AdminUserCard {\\n  border-radius: 2px;\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  margin: 2em 0 1em;\\n  padding: 0; }\\n\\n.AdminUserCard__header {\\n  align-items: flex-start;\\n  background-color: #295EB9;\\n  display: flex;\\n  flex-direction: row;\\n  padding: 30px 20px 12px 30px;\\n  height: 92px; }\\n\\n.AdminUserCard__header .Avatar.Avatar-xxl {\\n  border: solid 2px #fff; }\\n\\n.AdminUserCard__body {\\n  padding: 12px 20px 20px 178px;\\n  background-color: #fff; }\\n\\n.AdminUserCard__footer {\\n  padding: 20px;\\n  background-color: #fff;\\n  border-top: solid 1px rgba(0, 0, 0, 0.2); }\\n\\n.AdminUserCard__user-info {\\n  color: #fff;\\n  font-size: 20px;\\n  font-weight: normal;\\n  margin-left: 20px;\\n  padding: 0;\\n  align-self: flex-end; }\\n\\n.AdminUserCard__user-nickname {\\n  opacity: .5; }\\n\\n.AdminUserCard__user-id {\\n  color: #fff;\\n  font-size: 12px;\\n  margin-left: auto;\\n  align-self: flex-end;\\n  opacity: .5; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".SystemUserDetail__field-label {\\n  font-size: 12px;\\n  display: block;\\n  font-weight: bold;\\n  margin-top: 12px;\\n  margin-bottom: 4px; }\\n\\n.SystemUserDetail__input {\\n  display: inline-block;\\n  height: 40px;\\n  max-width: 320px; }\\n\\n.SystemUserDetail .add-team-button {\\n  position: relative;\\n  margin-left: 10px; }\\n\\n.SystemUserDetail .team-btn__content {\\n  opacity: 1; }\\n\\n.SystemUserDetail__field-text {\\n  vertical-align: middle; }\\n\\n.SystemUserDetail__field-icon {\\n  width: 16px;\\n  height: 16px;\\n  fill: rgba(61, 60, 64, 0.6);\\n  margin: 0 8px 0 0;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.SystemUserDetail__error {\\n  padding-top: 8px;\\n  padding-left: 15px; }\\n\\n.SystemUserDetail__actions-menu-icon svg {\\n  color: #333;\\n  width: 18px; }\\n\\n.SystemUserDetail .MenuItem .SystemUserDetail__action-remove-team {\\n  color: #8B0008; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".AbstractList {\\n  -webkit-transition: all 0.4s ease-in-out;\\n  -webkit-transition-delay: 0s;\\n  -moz-transition: all 0.4s ease-in-out 0s;\\n  -o-transition: all 0.4s ease-in-out 0s;\\n  transition: all 0.4s ease-in-out 0s;\\n  padding: 1rem 2rem 2rem 2rem; }\\n  .AbstractList .AbstractList__header {\\n    border-bottom: solid 1px rgba(0, 0, 0, 0.1);\\n    display: flex;\\n    flex-direction: row;\\n    font-size: 1.1em;\\n    font-weight: bold;\\n    padding: .5em 0; }\\n    .AbstractList .AbstractList__header .AbstractList__header-label {\\n      display: inline-block; }\\n  .AbstractList .AbstractList__body {\\n    background: whitesmoke; }\\n    .AbstractList .AbstractList__body .AbstractList__loading {\\n      text-align: center;\\n      padding: 40px; }\\n    .AbstractList .AbstractList__body .AbstractList__empty {\\n      text-align: center;\\n      margin-top: 1rem;\\n      font-size: 1.6rem;\\n      background: rgba(255, 255, 255, 0.5);\\n      color: rgba(0, 0, 0, 0.3); }\\n      .AbstractList .AbstractList__body .AbstractList__empty span {\\n        display: inline-block;\\n        width: 100%;\\n        height: 100%;\\n        padding-top: 20px;\\n        padding-bottom: 20px; }\\n  .AbstractList .AbstractList__footer {\\n    display: flex;\\n    justify-content: flex-end;\\n    align-items: center;\\n    background: white;\\n    padding: 5px;\\n    height: auto;\\n    border-top: solid 1px rgba(0, 0, 0, 0.1); }\\n    .AbstractList .AbstractList__footer .btn-link {\\n      color: rgba(0, 0, 0, 0.5); }\\n      .AbstractList .AbstractList__footer .btn-link.disabled {\\n        opacity: .5; }\\n    .AbstractList .AbstractList__footer .counter {\\n      color: rgba(0, 0, 0, 0.5);\\n      font-size: 1.1em;\\n      margin-bottom: 2px; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".d-flex {\\n  display: -webkit-box !important;\\n  display: -ms-flexbox !important;\\n  display: flex !important; }\\n\\n.d-inline-flex {\\n  display: -webkit-inline-box !important;\\n  display: -ms-inline-flexbox !important;\\n  display: inline-flex !important; }\\n\\n.flex-row {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: row !important;\\n  flex-direction: row !important; }\\n\\n.flex-column {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: column !important;\\n  flex-direction: column !important; }\\n\\n.flex-row-reverse {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: row-reverse !important;\\n  flex-direction: row-reverse !important; }\\n\\n.flex-column-reverse {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: column-reverse !important;\\n  flex-direction: column-reverse !important; }\\n\\n.flex-wrap {\\n  -ms-flex-wrap: wrap !important;\\n  flex-wrap: wrap !important; }\\n\\n.flex-nowrap {\\n  -ms-flex-wrap: nowrap !important;\\n  flex-wrap: nowrap !important; }\\n\\n.flex-wrap-reverse {\\n  -ms-flex-wrap: wrap-reverse !important;\\n  flex-wrap: wrap-reverse !important; }\\n\\n.justify-content-start {\\n  -webkit-box-pack: start !important;\\n  -ms-flex-pack: start !important;\\n  justify-content: flex-start !important; }\\n\\n.justify-content-end {\\n  -webkit-box-pack: end !important;\\n  -ms-flex-pack: end !important;\\n  justify-content: flex-end !important; }\\n\\n.justify-content-center {\\n  -webkit-box-pack: center !important;\\n  -ms-flex-pack: center !important;\\n  justify-content: center !important; }\\n\\n.justify-content-between {\\n  -webkit-box-pack: justify !important;\\n  -ms-flex-pack: justify !important;\\n  justify-content: space-between !important; }\\n\\n.justify-content-around {\\n  -ms-flex-pack: distribute !important;\\n  justify-content: space-around !important; }\\n\\n.align-items-start {\\n  -webkit-box-align: start !important;\\n  -ms-flex-align: start !important;\\n  align-items: flex-start !important; }\\n\\n.align-items-end {\\n  -webkit-box-align: end !important;\\n  -ms-flex-align: end !important;\\n  align-items: flex-end !important; }\\n\\n.align-items-center {\\n  -webkit-box-align: center !important;\\n  -ms-flex-align: center !important;\\n  align-items: center !important; }\\n\\n.align-items-baseline {\\n  -webkit-box-align: baseline !important;\\n  -ms-flex-align: baseline !important;\\n  align-items: baseline !important; }\\n\\n.align-items-stretch {\\n  -webkit-box-align: stretch !important;\\n  -ms-flex-align: stretch !important;\\n  align-items: stretch !important; }\\n\\n.align-content-start {\\n  -ms-flex-line-pack: start !important;\\n  align-content: flex-start !important; }\\n\\n.align-content-end {\\n  -ms-flex-line-pack: end !important;\\n  align-content: flex-end !important; }\\n\\n.align-content-center {\\n  -ms-flex-line-pack: center !important;\\n  align-content: center !important; }\\n\\n.align-content-between {\\n  -ms-flex-line-pack: justify !important;\\n  align-content: space-between !important; }\\n\\n.align-content-around {\\n  -ms-flex-line-pack: distribute !important;\\n  align-content: space-around !important; }\\n\\n.align-content-stretch {\\n  -ms-flex-line-pack: stretch !important;\\n  align-content: stretch !important; }\\n\\n.align-self-auto {\\n  -ms-flex-item-align: auto !important;\\n  align-self: auto !important; }\\n\\n.align-self-start {\\n  -ms-flex-item-align: start !important;\\n  align-self: flex-start !important; }\\n\\n.align-self-end {\\n  -ms-flex-item-align: end !important;\\n  align-self: flex-end !important; }\\n\\n.align-self-center {\\n  -ms-flex-item-align: center !important;\\n  align-self: center !important; }\\n\\n.align-self-baseline {\\n  -ms-flex-item-align: baseline !important;\\n  align-self: baseline !important; }\\n\\n.align-self-stretch {\\n  -ms-flex-item-align: stretch !important;\\n  align-self: stretch !important; }\\n\\n@media (min-width: 576px) {\\n  .flex-sm-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-sm-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-sm-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-sm-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-sm-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-sm-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-sm-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-sm-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-sm-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-sm-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-sm-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-sm-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-sm-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-sm-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-sm-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-sm-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-sm-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-sm-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-sm-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-sm-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-sm-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-sm-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-sm-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-sm-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-sm-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-sm-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-sm-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-sm-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-sm-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 768px) {\\n  .flex-md-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-md-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-md-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-md-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-md-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-md-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-md-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-md-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-md-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-md-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-md-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-md-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-md-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-md-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-md-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-md-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-md-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-md-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-md-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-md-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-md-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-md-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-md-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-md-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-md-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-md-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-md-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-md-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-md-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 992px) {\\n  .flex-lg-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-lg-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-lg-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-lg-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-lg-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-lg-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-lg-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-lg-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-lg-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-lg-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-lg-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-lg-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-lg-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-lg-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-lg-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-lg-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-lg-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-lg-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-lg-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-lg-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-lg-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-lg-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-lg-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-lg-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-lg-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-lg-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-lg-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-lg-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-lg-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 1200px) {\\n  .flex-xl-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-xl-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-xl-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-xl-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-xl-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-xl-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-xl-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-xl-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-xl-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-xl-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-xl-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-xl-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-xl-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-xl-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-xl-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-xl-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-xl-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-xl-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-xl-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-xl-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-xl-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-xl-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-xl-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-xl-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-xl-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-xl-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-xl-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-xl-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-xl-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n.col {\\n  -ms-flex-preferred-size: 0;\\n  flex-basis: 0;\\n  -ms-flex-positive: 1;\\n  flex-grow: 1;\\n  max-width: 100%; }\\n\\n.col-auto {\\n  -ms-flex: 0 0 auto;\\n  flex: 0 0 auto;\\n  width: auto;\\n  max-width: 100%; }\\n\\n@keyframes spin {\\n  from {\\n    transform: scale(1) rotate(0deg); }\\n  to {\\n    transform: scale(1) rotate(360deg); } }\\n\\n@keyframes highlight {\\n  from {\\n    background: rgba(255, 255, 0, 0.5); }\\n  to {\\n    background: none; } }\\n\\n.padding-top {\\n  padding-top: 7px; }\\n  .padding-top.half {\\n    padding-top: 3px; }\\n  .padding-top.x2 {\\n    padding-top: 12px; }\\n  .padding-top.x3 {\\n    padding-top: 21px; }\\n\\n.padding-bottom {\\n  padding-bottom: 7px; }\\n  .padding-bottom.half {\\n    padding-bottom: 3px; }\\n  .padding-bottom.x1 {\\n    padding-bottom: 4px; }\\n  .padding-bottom.x2 {\\n    padding-bottom: 12px; }\\n  .padding-bottom.x3 {\\n    padding-bottom: 21px; }\\n  .padding-bottom .control-label {\\n    font-weight: 600; }\\n    .padding-bottom .control-label.text-left {\\n      text-align: left; }\\n\\n.padding-left {\\n  padding-left: 7px; }\\n  .padding-left.x2 {\\n    padding-left: 12px; }\\n  .padding-left.x3 {\\n    padding-left: 21px; }\\n\\n.padding-right {\\n  padding-right: 7px; }\\n  .padding-right.x2 {\\n    padding-right: 12px; }\\n  .padding-right.x3 {\\n    padding-right: 21px; }\\n\\n.margin-right {\\n  margin-right: 7px; }\\n  .margin-right.margin-right--half {\\n    margin-right: 3px; }\\n  .margin-right.x2 {\\n    margin-right: 12px; }\\n  .margin-right.x3 {\\n    margin-right: 21px; }\\n\\n.margin-left {\\n  margin-left: 7px; }\\n  .margin-left.x2 {\\n    margin-left: 12px; }\\n  .margin-left.x3 {\\n    margin-left: 21px; }\\n\\n.margin-top {\\n  margin-top: 7px; }\\n  .margin-top.margin-top--half {\\n    margin-top: 4px; }\\n  .margin-top.x2 {\\n    margin-top: 12px; }\\n  .margin-top.x3 {\\n    margin-top: 21px; }\\n\\n.margin-bottom {\\n  margin-bottom: 7px; }\\n  .margin-bottom.margin-bottom--half {\\n    margin-top: 4px; }\\n  .margin-bottom.x2 {\\n    margin-bottom: 12px; }\\n  .margin-bottom.x3 {\\n    margin-bottom: 21px; }\\n\\n.d-block {\\n  display: block; }\\n\\n.a11y--focused {\\n  border-radius: 4px;\\n  box-shadow: 0 0 0 1px 2px #166de0; }\\n\\n.hidden-label {\\n  position: absolute;\\n  overflow: hidden;\\n  height: 1px;\\n  width: 1px;\\n  margin: -1px;\\n  padding: 0;\\n  border: 0; }\\n\\n.TeamRow:nth-child(odd) {\\n  background: rgba(255, 255, 255, 0.5); }\\n\\n.TeamRow__row {\\n  align-items: center;\\n  border: 2px solid rgba(0, 0, 0, 0);\\n  display: flex;\\n  flex-direction: row;\\n  height: 80px; }\\n\\n.TeamRow__row .TeamRow__team-name {\\n  display: inline-block;\\n  min-width: 300px;\\n  flex-grow: 3; }\\n  .TeamRow__row .TeamRow__team-name .TeamIcon {\\n    margin-right: 0px; }\\n  .TeamRow__row .TeamRow__team-name .TeamRow__team-description {\\n    min-width: 276px;\\n    max-width: 400px; }\\n\\n.SystemUserDetail .TeamRow__col-description {\\n  min-width: 276px;\\n  max-width: 400px; }\\n\\n.TeamRow__row .TeamRow__description {\\n  align-items: center;\\n  display: flex;\\n  height: 100%;\\n  overflow: hidden;\\n  width: 150px;\\n  max-width: 400px; }\\n  .TeamRow__row .TeamRow__description.adjusted {\\n    width: 120px; }\\n  .TeamRow__row .TeamRow__description i {\\n    margin-right: 5px; }\\n  .TeamRow__row .TeamRow__description > a {\\n    color: black;\\n    text-decoration: none;\\n    padding: 3px 5px; }\\n    .TeamRow__row .TeamRow__description > a:hover {\\n      background-color: rgba(0, 0, 0, 0.15);\\n      border-radius: 3px; }\\n    .TeamRow__row .TeamRow__description > a.warning {\\n      color: #d64946; }\\n\\n.TeamRow__row .TeamRow__actions {\\n  align-items: center;\\n  justify-content: flex-end;\\n  display: flex;\\n  height: 100%;\\n  width: 150px;\\n  max-width: 400px;\\n  padding-right: 15px; }\\n\\n.TeamRow__row .TeamIcon__content {\\n  opacity: 1; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".d-flex {\\n  display: -webkit-box !important;\\n  display: -ms-flexbox !important;\\n  display: flex !important; }\\n\\n.d-inline-flex {\\n  display: -webkit-inline-box !important;\\n  display: -ms-inline-flexbox !important;\\n  display: inline-flex !important; }\\n\\n.flex-row {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: row !important;\\n  flex-direction: row !important; }\\n\\n.flex-column {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: column !important;\\n  flex-direction: column !important; }\\n\\n.flex-row-reverse {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: row-reverse !important;\\n  flex-direction: row-reverse !important; }\\n\\n.flex-column-reverse {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: column-reverse !important;\\n  flex-direction: column-reverse !important; }\\n\\n.flex-wrap {\\n  -ms-flex-wrap: wrap !important;\\n  flex-wrap: wrap !important; }\\n\\n.flex-nowrap {\\n  -ms-flex-wrap: nowrap !important;\\n  flex-wrap: nowrap !important; }\\n\\n.flex-wrap-reverse {\\n  -ms-flex-wrap: wrap-reverse !important;\\n  flex-wrap: wrap-reverse !important; }\\n\\n.justify-content-start {\\n  -webkit-box-pack: start !important;\\n  -ms-flex-pack: start !important;\\n  justify-content: flex-start !important; }\\n\\n.justify-content-end {\\n  -webkit-box-pack: end !important;\\n  -ms-flex-pack: end !important;\\n  justify-content: flex-end !important; }\\n\\n.justify-content-center {\\n  -webkit-box-pack: center !important;\\n  -ms-flex-pack: center !important;\\n  justify-content: center !important; }\\n\\n.justify-content-between {\\n  -webkit-box-pack: justify !important;\\n  -ms-flex-pack: justify !important;\\n  justify-content: space-between !important; }\\n\\n.justify-content-around {\\n  -ms-flex-pack: distribute !important;\\n  justify-content: space-around !important; }\\n\\n.align-items-start {\\n  -webkit-box-align: start !important;\\n  -ms-flex-align: start !important;\\n  align-items: flex-start !important; }\\n\\n.align-items-end {\\n  -webkit-box-align: end !important;\\n  -ms-flex-align: end !important;\\n  align-items: flex-end !important; }\\n\\n.align-items-center {\\n  -webkit-box-align: center !important;\\n  -ms-flex-align: center !important;\\n  align-items: center !important; }\\n\\n.align-items-baseline {\\n  -webkit-box-align: baseline !important;\\n  -ms-flex-align: baseline !important;\\n  align-items: baseline !important; }\\n\\n.align-items-stretch {\\n  -webkit-box-align: stretch !important;\\n  -ms-flex-align: stretch !important;\\n  align-items: stretch !important; }\\n\\n.align-content-start {\\n  -ms-flex-line-pack: start !important;\\n  align-content: flex-start !important; }\\n\\n.align-content-end {\\n  -ms-flex-line-pack: end !important;\\n  align-content: flex-end !important; }\\n\\n.align-content-center {\\n  -ms-flex-line-pack: center !important;\\n  align-content: center !important; }\\n\\n.align-content-between {\\n  -ms-flex-line-pack: justify !important;\\n  align-content: space-between !important; }\\n\\n.align-content-around {\\n  -ms-flex-line-pack: distribute !important;\\n  align-content: space-around !important; }\\n\\n.align-content-stretch {\\n  -ms-flex-line-pack: stretch !important;\\n  align-content: stretch !important; }\\n\\n.align-self-auto {\\n  -ms-flex-item-align: auto !important;\\n  align-self: auto !important; }\\n\\n.align-self-start {\\n  -ms-flex-item-align: start !important;\\n  align-self: flex-start !important; }\\n\\n.align-self-end {\\n  -ms-flex-item-align: end !important;\\n  align-self: flex-end !important; }\\n\\n.align-self-center {\\n  -ms-flex-item-align: center !important;\\n  align-self: center !important; }\\n\\n.align-self-baseline {\\n  -ms-flex-item-align: baseline !important;\\n  align-self: baseline !important; }\\n\\n.align-self-stretch {\\n  -ms-flex-item-align: stretch !important;\\n  align-self: stretch !important; }\\n\\n@media (min-width: 576px) {\\n  .flex-sm-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-sm-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-sm-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-sm-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-sm-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-sm-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-sm-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-sm-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-sm-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-sm-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-sm-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-sm-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-sm-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-sm-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-sm-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-sm-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-sm-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-sm-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-sm-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-sm-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-sm-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-sm-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-sm-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-sm-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-sm-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-sm-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-sm-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-sm-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-sm-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 768px) {\\n  .flex-md-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-md-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-md-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-md-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-md-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-md-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-md-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-md-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-md-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-md-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-md-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-md-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-md-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-md-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-md-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-md-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-md-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-md-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-md-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-md-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-md-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-md-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-md-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-md-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-md-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-md-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-md-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-md-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-md-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 992px) {\\n  .flex-lg-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-lg-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-lg-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-lg-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-lg-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-lg-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-lg-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-lg-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-lg-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-lg-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-lg-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-lg-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-lg-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-lg-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-lg-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-lg-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-lg-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-lg-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-lg-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-lg-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-lg-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-lg-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-lg-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-lg-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-lg-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-lg-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-lg-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-lg-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-lg-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 1200px) {\\n  .flex-xl-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-xl-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-xl-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-xl-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-xl-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-xl-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-xl-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-xl-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-xl-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-xl-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-xl-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-xl-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-xl-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-xl-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-xl-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-xl-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-xl-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-xl-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-xl-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-xl-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-xl-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-xl-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-xl-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-xl-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-xl-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-xl-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-xl-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-xl-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-xl-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n.col {\\n  -ms-flex-preferred-size: 0;\\n  flex-basis: 0;\\n  -ms-flex-positive: 1;\\n  flex-grow: 1;\\n  max-width: 100%; }\\n\\n.col-auto {\\n  -ms-flex: 0 0 auto;\\n  flex: 0 0 auto;\\n  width: auto;\\n  max-width: 100%; }\\n\\n@keyframes spin {\\n  from {\\n    transform: scale(1) rotate(0deg); }\\n  to {\\n    transform: scale(1) rotate(360deg); } }\\n\\n@keyframes highlight {\\n  from {\\n    background: rgba(255, 255, 0, 0.5); }\\n  to {\\n    background: none; } }\\n\\n.padding-top {\\n  padding-top: 7px; }\\n  .padding-top.half {\\n    padding-top: 3px; }\\n  .padding-top.x2 {\\n    padding-top: 12px; }\\n  .padding-top.x3 {\\n    padding-top: 21px; }\\n\\n.padding-bottom {\\n  padding-bottom: 7px; }\\n  .padding-bottom.half {\\n    padding-bottom: 3px; }\\n  .padding-bottom.x1 {\\n    padding-bottom: 4px; }\\n  .padding-bottom.x2 {\\n    padding-bottom: 12px; }\\n  .padding-bottom.x3 {\\n    padding-bottom: 21px; }\\n  .padding-bottom .control-label {\\n    font-weight: 600; }\\n    .padding-bottom .control-label.text-left {\\n      text-align: left; }\\n\\n.padding-left {\\n  padding-left: 7px; }\\n  .padding-left.x2 {\\n    padding-left: 12px; }\\n  .padding-left.x3 {\\n    padding-left: 21px; }\\n\\n.padding-right {\\n  padding-right: 7px; }\\n  .padding-right.x2 {\\n    padding-right: 12px; }\\n  .padding-right.x3 {\\n    padding-right: 21px; }\\n\\n.margin-right {\\n  margin-right: 7px; }\\n  .margin-right.margin-right--half {\\n    margin-right: 3px; }\\n  .margin-right.x2 {\\n    margin-right: 12px; }\\n  .margin-right.x3 {\\n    margin-right: 21px; }\\n\\n.margin-left {\\n  margin-left: 7px; }\\n  .margin-left.x2 {\\n    margin-left: 12px; }\\n  .margin-left.x3 {\\n    margin-left: 21px; }\\n\\n.margin-top {\\n  margin-top: 7px; }\\n  .margin-top.margin-top--half {\\n    margin-top: 4px; }\\n  .margin-top.x2 {\\n    margin-top: 12px; }\\n  .margin-top.x3 {\\n    margin-top: 21px; }\\n\\n.margin-bottom {\\n  margin-bottom: 7px; }\\n  .margin-bottom.margin-bottom--half {\\n    margin-top: 4px; }\\n  .margin-bottom.x2 {\\n    margin-bottom: 12px; }\\n  .margin-bottom.x3 {\\n    margin-bottom: 21px; }\\n\\n.d-block {\\n  display: block; }\\n\\n.a11y--focused {\\n  border-radius: 4px;\\n  box-shadow: 0 0 0 1px 2px #166de0; }\\n\\n.hidden-label {\\n  position: absolute;\\n  overflow: hidden;\\n  height: 1px;\\n  width: 1px;\\n  margin: -1px;\\n  padding: 0;\\n  border: 0; }\\n\\n.AdminPanel {\\n  -webkit-border-radius: 2px;\\n  -moz-border-radius: 2px;\\n  -ms-border-radius: 2px;\\n  -o-border-radius: 2px;\\n  border-radius: 2px;\\n  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  -moz-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  overflow: hidden;\\n  *zoom: 1;\\n  font-size: .95em;\\n  margin: 2em 0 1em;\\n  padding: 0; }\\n  .AdminPanel .header {\\n    cursor: pointer;\\n    align-items: center;\\n    background: white;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 20px; }\\n    .AdminPanel .header h3 {\\n      font-size: 18px;\\n      font-weight: normal;\\n      margin: 0;\\n      padding: 0; }\\n    .AdminPanel .header .button {\\n      self-align: end;\\n      margin-left: 10px; }\\n      .AdminPanel .header .button svg {\\n        transform: rotate(0deg);\\n        transition: transform 300ms; }\\n  .AdminPanel.closed .header .button svg {\\n    transform: rotate(90deg);\\n    transition: transform 300ms; }\\n\", \"\"]);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {createSelector} from 'reselect';\nimport {cloneDeep} from 'lodash';\n\nimport AdminDefinition from 'components/admin_console/admin_definition.jsx';\n\nexport const getAdminDefinition = createSelector(\n    () => AdminDefinition,\n    (state) => state.plugins.adminConsoleReducers,\n    (adminDefinition, reducers) => {\n        let result = cloneDeep(AdminDefinition);\n        for (const reducer of Object.values(reducers)) {\n            result = reducer(result);\n        }\n        return result;\n    }\n);\n\nexport const getAdminConsoleCustomComponents = (state, pluginId) =>\n    state.plugins.adminConsoleCustomComponents[pluginId] || {};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport FlexSearch from 'flexsearch/dist/flexsearch.es5';\n\nimport {getPluginEntries} from './admin_console_plugin_index';\n\nfunction extractTextsFromSection(section, intl) {\n    const texts = [];\n    if (section.title) {\n        texts.push(intl.formatMessage({id: section.title, defaultMessage: section.title_default}));\n    }\n    if (section.schema && section.schema.name) {\n        texts.push(section.schema.name);\n    }\n    if (section.searchableStrings) {\n        for (const searchableString of section.searchableStrings) {\n            if (typeof searchableString === 'string') {\n                texts.push(intl.formatMessage({id: searchableString, defaultMessage: searchableString}));\n            } else {\n                texts.push(intl.formatMessage({id: searchableString[0], defaultMessage: ''}, searchableString[1]));\n            }\n        }\n    }\n\n    if (section.schema && section.schema.settings) {\n        for (const setting of Object.values(section.schema.settings)) {\n            if (setting.label) {\n                texts.push(intl.formatMessage({id: setting.label, defaultMessage: setting.label_default}, setting.label_values));\n            }\n            if (setting.help_text && typeof setting.help_text === 'string') {\n                texts.push(intl.formatMessage({id: setting.help_text, defaultMessage: setting.help_text_default}, setting.help_text_values));\n            }\n            if (setting.remove_help_text) {\n                texts.push(intl.formatMessage({id: setting.remove_help_text, defaultMessage: setting.remove_help_text_default}));\n            }\n            if (setting.remove_button_text) {\n                texts.push(intl.formatMessage({id: setting.remove_button_text, defaultMessage: setting.remove_button_text_default}));\n            }\n        }\n    }\n    return texts;\n}\n\nexport function adminDefinitionsToUrlsAndTexts(adminDefinition, intl) {\n    const entries = {};\n    for (const item of Object.values(adminDefinition.about)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.reporting)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.user_management)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.environment)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.site)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.authentication)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.plugins)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.integrations)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.compliance)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.experimental)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    return entries;\n}\n\nexport function generateIndex(AdminDefinition, plugins, intl) {\n    const idx = new FlexSearch();\n\n    addToIndex(adminDefinitionsToUrlsAndTexts(AdminDefinition, intl), idx);\n\n    addToIndex(getPluginEntries(plugins), idx);\n\n    return idx;\n}\n\nfunction addToIndex(entries, idx) {\n    for (const key of Object.keys(entries)) {\n        let text = '';\n        for (const str of entries[key]) {\n            text += ' ' + str;\n        }\n        idx.add(key, text);\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {stripMarkdown} from 'utils/markdown';\nimport getEnablePluginSetting from 'components/admin_console/custom_plugin_settings/enable_plugin_setting';\n\nfunction extractTextsFromPlugin(plugin) {\n    const texts = extractTextFromSetting(getEnablePluginSetting(plugin));\n    if (plugin.name) {\n        texts.push(plugin.name);\n    }\n    if (plugin.id) {\n        texts.push(plugin.id);\n    }\n    if (plugin.settings_schema) {\n        if (plugin.settings_schema.footer) {\n            texts.push(stripMarkdown(plugin.settings_schema.footer));\n        }\n        if (plugin.settings_schema.header) {\n            texts.push(stripMarkdown(plugin.settings_schema.header));\n        }\n\n        if (plugin.settings_schema.settings) {\n            const settings = Object.values(plugin.settings_schema.settings);\n\n            for (const setting of settings) {\n                const settingsTexts = extractTextFromSetting(setting, texts);\n                texts.push(...settingsTexts);\n            }\n        }\n    }\n    return texts;\n}\n\nfunction extractTextFromSetting(setting) {\n    const texts = [];\n    if (setting.label) {\n        texts.push(setting.label);\n    }\n    if (setting.display_name) {\n        texts.push(setting.display_name);\n    }\n    if (setting.help_text) {\n        texts.push(stripMarkdown(setting.help_text));\n    }\n    if (setting.key) {\n        texts.push(setting.key);\n    }\n    return texts;\n}\n\nexport function getPluginEntries(pluginsObj = {}) {\n    const entries = {};\n    const plugins = pluginsObj || {};\n    for (const pluginId of Object.keys(plugins)) {\n        const url = `plugin_${pluginId}`;\n        entries[url] = extractTextsFromPlugin(plugins[pluginId]);\n    }\n    return entries;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {UserSearchOptions, UserListOptions, UserFilters} from 'utils/constants';\n\n// userSelectorOptionsFromFilter will convert a string UI filter to an options object\n// for selecting users out of redux state\n// Note: this is currently the same as getUserOptionsFromFilter but wrapped to be clear\n// that there are separate purposes (this can be used with both getProfiles and searchProfiles\n// selectors)\nexport function userSelectorOptionsFromFilter(filter) {\n    return getUserOptionsFromFilter(filter);\n}\n\n// getUserOptionsFromFilter will convert a string UI filter to an options objects\n// for an API request to the get users endpoint\nexport function getUserOptionsFromFilter(filter) {\n    const options = {};\n    if (filter === UserFilters.SYSTEM_ADMIN) {\n        options[UserListOptions.ROLE] = UserFilters.SYSTEM_ADMIN;\n    } else if (filter === UserFilters.SYSTEM_GUEST) {\n        options[UserListOptions.ROLE] = UserFilters.SYSTEM_GUEST;\n    } else if (filter === UserFilters.INACTIVE) {\n        options[UserListOptions.INACTIVE] = true;\n    }\n    return options;\n}\n\n// searchUserOptionsFromFilter will convert a string UI filter to an options objects\n// for an API request to the search users endpoint\nexport function searchUserOptionsFromFilter(filter) {\n    const options = {};\n    if (filter === UserFilters.SYSTEM_ADMIN) {\n        options[UserSearchOptions.ROLE] = UserFilters.SYSTEM_ADMIN;\n    } else if (filter === UserFilters.SYSTEM_GUEST) {\n        options[UserSearchOptions.ROLE] = UserFilters.SYSTEM_GUEST;\n    } else if (filter === UserFilters.INACTIVE) {\n        options[UserSearchOptions.ALLOW_INACTIVE] = true;\n    }\n    return options;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {Permissions} from 'mattermost-redux/constants/index';\n\nconst MAPPING = {\n    enableTeamCreation: {\n        true: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: true}],\n        false: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: false}],\n    },\n\n    editOthersPosts: {\n        true: [\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n        ],\n        false: [\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: false},\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n        ],\n    },\n\n    enableOnlyAdminIntegrations: {\n        true: [\n            {roleName: 'team_user', permission: Permissions.MANAGE_INCOMING_WEBHOOKS, shouldHave: false},\n            {roleName: 'team_user', permission: Permissions.MANAGE_OUTGOING_WEBHOOKS, shouldHave: false},\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: false},\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: false},\n        ],\n        false: [\n            {roleName: 'team_user', permission: Permissions.MANAGE_INCOMING_WEBHOOKS, shouldHave: true},\n            {roleName: 'team_user', permission: Permissions.MANAGE_OUTGOING_WEBHOOKS, shouldHave: true},\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: true},\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: true},\n        ],\n    },\n};\n\n/**\n * Get the roles that were changed (but unsaved) for given mapping key/values.\n *\n * @param {object} mappingValues key/value to indicate which mapping items to use to update the roles.\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\n * @return {object} the updated roles (only) in the same structure as returned by mattermost-redux `getRoles`.\n */\nexport function rolesFromMapping(mappingValues, roles) {\n    const rolesClone = JSON.parse(JSON.stringify(roles));\n\n    // Purge roles that aren't present in MAPPING, we don't care about them.\n    purgeNonPertinentRoles(rolesClone);\n\n    Object.keys(MAPPING).forEach((mappingKey) => {\n        const value = mappingValues[mappingKey];\n        if (value) {\n            mutateRolesBasedOnMapping(mappingKey, value, rolesClone);\n        }\n    });\n\n    // Purge roles that didn't have permissions changes, we don't care about them.\n    Object.entries(rolesClone).forEach(([roleName, roleClone]) => {\n        const originalPermissionSet = new Set(roles[roleName].permissions);\n        const newPermissionSet = new Set(roleClone.permissions);\n        const difference = [...newPermissionSet].filter((x) => !originalPermissionSet.has(x));\n\n        if (originalPermissionSet.size === newPermissionSet.size && difference.length === 0) {\n            delete rolesClone[roleName];\n        }\n    });\n\n    return rolesClone;\n}\n\n/**\n * Get the mapping value that matches for a given set of roles.\n *\n * @param {string} key to match under in the mapping.\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\n * @return {string} the value that the roles/permissions assignment match in the mapping.\n */\nexport function mappingValueFromRoles(key, roles) {\n    for (const o of mappingPartIterator(MAPPING[key], roles)) {\n        if (o.allConditionsAreMet) {\n            return o.value;\n        }\n    }\n    throw new Error(`No matching mapping value found for key '${key}' with the given roles.`);\n}\n\nfunction purgeNonPertinentRoles(roles) {\n    const pertinentRoleNames = roleNamesInMapping();\n\n    Object.keys(roles).forEach((key) => {\n        if (!pertinentRoleNames.includes(key)) {\n            delete roles[key];\n        }\n    });\n}\n\nfunction mutateRolesBasedOnMapping(mappingKey, value, roles) {\n    const roleRules = MAPPING[mappingKey][value];\n\n    if (typeof roleRules === 'undefined') {\n        throw new Error(`Value '${value}' not present in MAPPING for key '${mappingKey}'.`);\n    }\n\n    roleRules.forEach((item) => {\n        const role = roles[item.roleName];\n        if (item.shouldHave) {\n            addPermissionToRole(item.permission, role);\n        } else {\n            removePermissionFromRole(item.permission, role);\n        }\n    });\n}\n\n// Returns a set of the role names present in MAPPING.\nfunction roleNamesInMapping() {\n    let roleNames = [];\n\n    Object.values(MAPPING).forEach((v1) => {\n        Object.values(v1).forEach((v2) => {\n            const names = v2.map((item) => item.roleName); // eslint-disable-line max-nested-callbacks\n            roleNames = roleNames.concat(names);\n        });\n    });\n\n    return [...new Set(roleNames.map((item) => item))];\n}\n\nfunction* mappingPartIterator(mappingPart, roles) {\n    for (const value in mappingPart) {\n        if (mappingPart.hasOwnProperty(value)) {\n            const roleRules = mappingPart[value];\n\n            const hasUnmetCondition = roleRules.some((item) => {\n                const role = roles[item.roleName];\n                return (item.shouldHave && !role.permissions.includes(item.permission)) || (!item.shouldHave && role.permissions.includes(item.permission));\n            });\n\n            yield {value, allConditionsAreMet: !hasUnmetCondition};\n        }\n    }\n}\n\nfunction addPermissionToRole(permission, role) {\n    if (!role.permissions.includes(permission)) {\n        role.permissions.push(permission);\n    }\n}\n\nfunction removePermissionFromRole(permission, role) {\n    const permissionIndex = role.permissions.indexOf(permission);\n    if (permissionIndex !== -1) {\n        role.permissions.splice(permissionIndex, 1);\n    }\n}\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}
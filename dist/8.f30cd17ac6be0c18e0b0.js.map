{"version":3,"sources":["webpack:///./actions/integration_actions.jsx","webpack:///./components/backstage/backstage_controller.jsx","webpack:///./components/backstage/components/backstage_category.jsx","webpack:///./components/backstage/components/backstage_header.jsx","webpack:///./components/backstage/components/backstage_list.jsx","webpack:///./components/backstage/components/backstage_navbar.jsx","webpack:///./components/backstage/components/backstage_section.jsx","webpack:///./components/backstage/components/backstage_sidebar.jsx","webpack:///./components/backstage/index.js","webpack:///./components/channel_select/channel_select.jsx","webpack:///./components/channel_select/index.js","webpack:///./components/copy_text.tsx","webpack:///./components/delete_modal_trigger.jsx","webpack:///./components/emoji/add_emoji/add_emoji.jsx","webpack:///./components/emoji/add_emoji/index.js","webpack:///./components/emoji/delete_emoji_modal.jsx","webpack:///./components/emoji/emoji_list/emoji_list.jsx","webpack:///./components/emoji/emoji_list/index.js","webpack:///./components/emoji/emoji_list_item/emoji_list_item.jsx","webpack:///./components/emoji/emoji_list_item/index.js","webpack:///./components/emoji/emoji_page.jsx","webpack:///./components/emoji/index.js","webpack:///./components/integrations/abstract_command.jsx","webpack:///./components/integrations/abstract_incoming_webhook.jsx","webpack:///./components/integrations/abstract_oauth_app.jsx","webpack:///./components/integrations/abstract_outgoing_webhook.jsx","webpack:///./components/integrations/add_command/add_command.jsx","webpack:///./components/integrations/add_command/index.js","webpack:///./components/integrations/add_incoming_webhook/add_incoming_webhook.jsx","webpack:///./components/integrations/add_incoming_webhook/index.js","webpack:///./components/integrations/add_oauth_app/add_oauth_app.jsx","webpack:///./components/integrations/add_oauth_app/index.js","webpack:///./components/integrations/add_outgoing_webhook/add_outgoing_webhook.jsx","webpack:///./components/integrations/add_outgoing_webhook/index.js","webpack:///./components/integrations/bots/add_bot/add_bot.jsx","webpack:///./components/integrations/bots/add_bot/index.js","webpack:///./components/integrations/bots/bot.jsx","webpack:///./components/integrations/bots/bots.jsx","webpack:///./components/integrations/bots/index.js","webpack:///./components/integrations/commands_container/commands_container.jsx","webpack:///./components/integrations/commands_container/index.js","webpack:///./components/integrations/confirm_integration/confirm_integration.jsx","webpack:///./components/integrations/confirm_integration/index.js","webpack:///./components/integrations/delete_integration.jsx","webpack:///./components/integrations/edit_command/edit_command.jsx","webpack:///./components/integrations/edit_command/index.js","webpack:///./components/integrations/edit_incoming_webhook/edit_incoming_webhook.jsx","webpack:///./components/integrations/edit_incoming_webhook/index.js","webpack:///./components/integrations/edit_oauth_app/edit_oauth_app.jsx","webpack:///./components/integrations/edit_oauth_app/index.js","webpack:///./components/integrations/edit_outgoing_webhook/edit_outgoing_webhook.jsx","webpack:///./components/integrations/edit_outgoing_webhook/index.js","webpack:///./components/integrations/index.js","webpack:///./components/integrations/installed_command.jsx","webpack:///./components/integrations/installed_commands/index.js","webpack:///./components/integrations/installed_commands/installed_commands.jsx","webpack:///./components/integrations/installed_incoming_webhook.jsx","webpack:///./components/integrations/installed_incoming_webhooks/index.js","webpack:///./components/integrations/installed_incoming_webhooks/installed_incoming_webhooks.jsx","webpack:///./components/integrations/installed_oauth_app/index.js","webpack:///./components/integrations/installed_oauth_app/installed_oauth_app.jsx","webpack:///./components/integrations/installed_oauth_apps/index.js","webpack:///./components/integrations/installed_oauth_apps/installed_oauth_apps.jsx","webpack:///./components/integrations/installed_outgoing_webhook.jsx","webpack:///./components/integrations/installed_outgoing_webhooks/index.js","webpack:///./components/integrations/installed_outgoing_webhooks/installed_outgoing_webhooks.jsx","webpack:///./components/integrations/integration_option.jsx","webpack:///./components/integrations/integrations.jsx","webpack:///./components/permissions_gates/any_team_permission_gate/any_team_permission_gate.jsx","webpack:///./components/permissions_gates/any_team_permission_gate/index.js","webpack:///./components/widgets/icons/fa_next_icon.tsx","webpack:///./components/widgets/icons/fa_previous_icon.tsx","webpack:///./components/widgets/icons/fa_search_icon.jsx","webpack:///./images/bot_default_icon.png","webpack:///./images/incoming_webhook.jpg","webpack:///./images/oauth_icon.png","webpack:///./images/outgoing_webhook.jpg","webpack:///./images/slash_command_icon.jpg","webpack:///./node_modules/mattermost-redux/actions/bots.js","webpack:///./node_modules/mattermost-redux/selectors/entities/bots.js","webpack:///./node_modules/mattermost-redux/selectors/entities/integrations.js"],"names":["DEFAULT_PAGE_SIZE","loadIncomingHooksAndProfilesForTeam","teamId","page","perPage","dispatch","data","IntegrationActions","loadProfilesForIncomingHooks","hooks","getState","state","profilesToLoad","i","length","hook","getUser","user_id","list","Object","keys","getProfilesByIds","loadOutgoingHooksAndProfilesForTeam","loadProfilesForOutgoingHooks","creator_id","loadCommandsAndProfilesForTeam","loadProfilesForCommands","commands","command","loadOAuthAppsAndProfiles","loadProfilesForOAuthApps","apps","app","getYoutubeVideoInfo","googleKey","videoId","success","error","request","get","query","part","id","key","end","err","res","body","console","BackstageRoute","component","Component","extraProps","rest","props","BackstageController","React","listRef","scrollTop","ref","render","team","user","scrollToTop","siteName","setListRef","enableCustomEmoji","enableIncomingWebhooks","enableOutgoingWebhooks","enableCommands","enableOAuthServiceProvider","canCreateOrDeleteCustomEmoji","Integrations","match","url","InstalledIncomingWebhooks","AddIncomingWehook","EditIncomingWebhook","InstalledOutgoingWebhooks","AddOutgoingWebhook","EditOutgoingWebhook","CommandsContainer","InstalledOauthApps","AddOauthApp","EditOauthApp","ConfirmIntegration","Emoji","AddEmoji","AddBot","Bots","PropTypes","object","shape","string","isRequired","bool","BackstageCategory","propTypes","name","title","node","icon","parentLink","children","arrayOf","element","defaultProps","contextTypes","router","link","Children","map","child","cloneElement","BackstageHeader","formatMessage","context","intl","forEach","index","push","defaultMessage","intlShape","BackstageList","constructor","e","setState","filter","target","value","toLowerCase","loading","hasChildren","emptyText","emptyTextSearch","values","searchTerm","addLink","addText","addButtonId","header","searchPlaceholder","updateFilter","style","search","helpText","oneOfType","func","Utils","flexGrow","flexShrink","BackstageNavbar","BackstageSection","subsection","getLink","clonedChildren","className","BackstageSidebar","renderCustomEmoji","renderIntegrations","incomingWebhooks","Permissions","MANAGE_INCOMING_WEBHOOKS","outgoingWebhooks","MANAGE_OUTGOING_WEBHOOKS","MANAGE_SLASH_COMMANDS","oauthApps","MANAGE_OAUTH","botAccounts","mapStateToProps","getCurrentUser","getCurrentTeam","config","getConfig","SiteName","EnableCustomEmoji","EnableIncomingWebhooks","EnableOutgoingWebhooks","EnableCommands","EnableOAuthServiceProvider","haveISystemPermission","permission","CREATE_EMOJIS","DELETE_EMOJIS","t","getMyTeams","haveITeamPermission","withRouter","connect","ChannelSelect","PureComponent","channels","array","onChange","selectOpen","selectPrivate","selectDm","options","channel","channelName","display_name","type","Constants","OPEN_CHANNEL","PRIVATE_CHANNEL","DM_CHANNEL","getMyChannelsSorted","createSelector","getMyChannels","getCurrentUserLocale","locale","sort","sortChannelsByTypeAndDisplayName","bind","CopyText","preventDefault","copyToClipboard","document","queryCommandSupported","tooltip","idMessage","OVERLAY_TIME_DELAY","copyText","DeleteModalTrigger","showDeleteModal","onDelete","KeyCodes","ENTER","handleConfirm","TypeError","handleOpenModal","triggerTitle","modalTitle","modalMessage","modalConfirmButton","handleCancel","handleKeyDown","actions","emojiMap","image","saving","emoji","trim","startsWith","endsWith","substring","test","hasSystemEmoji","createCustomEmoji","message","browserHistory","files","imageUrl","reader","FileReader","onload","result","readAsDataURL","filename","preview","backgroundImage","handleSubmit","updateName","updateImage","localizeMessage","getEmojiMap","mapDispatchToProps","bindActionCreators","DeleteEmoji","EMOJI_PER_PAGE","EMOJI_SEARCH_DELAY_MILLISECONDS","EmojiList","next","nextLoading","getCustomEmojis","SORT_BY_NAME","then","missingPages","term","clearTimeout","searchTimeout","setTimeout","searchEmojis","searchCustomEmojis","em","emojiId","indexOf","newSearchEmojis","splice","componentDidMount","emojis","nextButton","previousButton","emojiIds","deleteFromSearch","pageStart","pageEnd","emojisToDisplay","slice","buttonContents","nextPage","previousPage","onSearchChange","getCustomEmojiIdsSortedByName","EmojiListItem","deleteCustomEmoji","creatorUsername","creatorDisplayName","deleteButton","currentUserId","handleDelete","DELETE_OTHERS_EMOJIS","Client4","getCustomEmojiImageUrl","currentTeam","ownProps","entities","customEmoji","creator","getDisplayNameByUser","username","getCurrentUserId","EmojiPage","teamDisplayName","updateTitle","loadRolesIfNeeded","componentDidUpdate","prevProps","teamName","general","REQUEST_POST","REQUEST_GET","AbstractCommand","displayName","description","trigger","method","iconUrl","icon_url","autocomplete","auto_complete","autocompleteHint","auto_complete_hint","autocompleteDescription","auto_complete_desc","clientError","triggerWord","substr","team_id","MIN_TRIGGER_LENGTH","MAX_TRIGGER_LENGTH","min","max","action","checked","getStateFromCommand","initialCommand","updateAutocompleteHint","updateAutocompleteDescription","updateDisplayName","updateDescription","updateTrigger","updateUrl","updateMethod","updateUsername","updateIconUrl","updateAutocomplete","serverError","footer","renderExtra","AbstractIncomingWebhook","channelId","channel_id","channelLocked","channel_locked","iconURL","getStateFromHook","initialHook","headerToRender","footerToRender","updateChannelId","updateChannelLocked","enablePostUsernameOverride","enablePostIconOverride","updateIconURL","AbstractOAuthApp","homepage","callbackUrls","callback_urls","join","is_trusted","has_icon","Boolean","refs","callbackUrl","split","src","Image","imageLoaded","getStateFromApp","initialApp","trusted","MANAGE_SYSTEM","updateTrusted","updateHomepage","updateCallbackUrls","AbstractOutgoingWebhook","triggerWords","trigger_words","contentType","content_type","triggerWhen","trigger_when","parseInt","contentTypeOption1","contentTypeOption2","updateContentType","updateTriggerWords","updateTriggerWhen","HEADER","FOOTER","LOADING","AddCommand","addCommand","AddIncomingWebhook","createIncomingHook","createIncomingHookRequest","addIncomingHook","EnablePostUsernameOverride","EnablePostIconOverride","requests","integrations","AddOAuthApp","addOAuthApp","addOAuthAppRequest","createOutgoingHook","createOutgoingHookRequest","addOutgoingHook","roleOptionSystemAdmin","roleOptionMember","role","postAll","postChannels","pictureFile","previewBlob","URL","createObjectURL","e2","orientation","FileUtils","orientationStyles","readAsArrayBuffer","BotDefaultIcon","roles","General","SYSTEM_USER_ROLE","SYSTEM_ADMIN_ROLE","SYSTEM_POST_ALL_ROLE","SYSTEM_POST_ALL_PUBLIC_ROLE","rolesResult","updateUserRoles","adding","AcceptedProfileImageTypes","includes","size","maxFileSize","bot","patchBot","imageResult","uploadProfileImage","setDefaultProfileImage","updateRoles","usernameError","createBot","token","tokenResult","createUserAccessToken","UserUtils","subtitle","buttonText","buttonActiveText","imageURL","removeImageIcon","setDefault","imageStyles","updatePicture","editingUserHasManageSystem","updateRole","updatePostAll","updatePostChannels","number","botId","URLSearchParams","location","bots","getBotAccounts","getUsers","MaxFileSize","matchesFilter","owner","ownerUsername","Bot","enableBot","disableBot","enableUserAccessToken","disableUserAccessToken","confirmingId","revokeUserAccessToken","closeConfirm","creatingTokenState","assign","tokenList","accessTokens","activeLink","disableClass","disabledText","is_active","confirmRevokeToken","openCreateToken","delete_at","handleCreateToken","handleUpdateDescription","closeCreateToken","revokeTokenConfirmed","owners","a","b","localeCompare","enabledBots","botToJSX","disabledBots","sections","loadBots","START_PAGE_NUM","PAGE_SIZE","promises","owner_id","getUserAccessTokensForUser","Promise","all","DisabledSection","hasDisabled","botsToDisplay","EnabledSection","createBots","siteURL","getSiteURL","EnableBotAccountCreation","reduce","UserSelectors","admin","userAccessTokensByUser","CommandRoute","users","InstalledCommands","EditCommand","getCommands","incomingHooks","outgoingHooks","window","addEventListener","handleKeyPress","componentWillUnmount","removeEventListener","headerText","tokenText","incomingHook","outgoingHook","oauthApp","COMMAND","commandToken","INCOMING_WEBHOOK","incomingHookToken","OUTGOING_WEBHOOK","outgoingHookToken","OAUTH_APP","oauthAppToken","oauthAppSecret","client_secret","secret","BOT","botToken","botname","replace","ErrorPageTypes","PAGE_NOT_FOUND","getOAuthApps","getIncomingHooks","getOutgoingHooks","DeleteIntegration","messageId","newCommand","originalCommand","handleConfirmModal","submitCommand","showConfirmModal","editCommand","confirmButton","confirmTitle","confirmMessage","confirmModalDismissed","getCustomTeamCommands","commandId","newHook","submitHook","updateIncomingHook","updateIncomingHookRequest","getIncomingHook","hookId","editIncomingHook","EditOAuthApp","newApp","callbackUrlsSame","every","v","submitOAuthApp","editOAuthApp","getOAuthApp","oauthAppId","triggerWordsSame","updateOutgoingHook","updateOutgoingHookRequest","getOutgoingHook","editOutgoingHook","InstalledCommand","onRegenToken","canChange","handleRegenToken","createAt","create_at","canManageOthersSlashCommands","MANAGE_OTHERS_SLASH_COMMANDS","regenCommandToken","deleteCommand","commandCompare","nameA","nameB","buildYourOwn","appDirectory","incomingWebhook","InstalledIncomingWebhook","incomingWebhookId","getCurrentTeamId","canManageOthersWebhooks","MANAGE_OTHERS_INCOMING_WEBHOOKS","getAllChannels","removeIncomingHook","Actions","displayNameA","channelA","displayNameB","incomingWebhookCompare","deleteIncomingWebhook","creatorName","InstalledOAuthApp","FAKE_SECRET","clientSecret","onRegenerateSecret","regenOAuthAppSecretRequest","handleShowClientSecret","urls","isTrusted","showHide","handleHideClientSecret","regen","handleRegenerate","clientId","canManageOauth","updateOAuthApp","regenOAuthAppSecret","deleteOAuthApp","InstalledOAuthApps","oauthAppCompare","integrationsEnabled","oauthApplications","outgoingWebhook","InstalledOutgoingWebhook","makeDisplayName","triggerWordsFull","triggerWordsStartsWith","MANAGE_OTHERS_OUTGOING_WEBHOOKS","removeOutgoingHook","regenOutgoingHookToken","channelB","outgoingWebhookCompare","regenOutgoingWebhookToken","IntegrationOption","currentSiteName","IncomingWebhookIcon","OutgoingWebhookIcon","SlashCommandIcon","OAuthIcon","BotAccountsIcon","AnyTeamPermissionGate","hasPermission","invert","permissions","teams","NextIcon","additionalClassName","PreviousIcon","SearchIcon"],"mappings":"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;;;;;;;;;;;;;;;;;;ACPrB,iBAAiB,qBAAuB,gD;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,gD;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,gD;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,gD;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,gD;;;;;;;;;;;;ACA3B;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,kEAAW;AAClC,qBAAqB,mBAAO,CAAC,8EAAiB;AAC9C,gBAAgB,mBAAO,CAAC,qEAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0BAA0B,UAAU;AACpC,6BAA6B,iCAAiC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gC;;;;;;;;;;;;ACnFa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;ACRa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,gDAAO;AAC7B,oCAAoC,mBAAO,CAAC,qDAAU;AACtD,cAAc,mBAAO,CAAC,4EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,6BAA6B,EAAE;AACpF,CAAC;AACD;AACA,+CAA+C;AAC/C,CAAC;AACD;AACA;AACA;AACA,KAAK,wBAAwB,qDAAqD,EAAE;AACpF,CAAC;AACD,wC","file":"8.f30cd17ac6be0c18e0b0.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport request from 'superagent';\nimport * as IntegrationActions from 'mattermost-redux/actions/integrations';\nimport {getProfilesByIds} from 'mattermost-redux/actions/users';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\n\nconst DEFAULT_PAGE_SIZE = 100;\n\nexport function loadIncomingHooksAndProfilesForTeam(teamId, page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getIncomingHooks(teamId, page, perPage));\n        if (data) {\n            dispatch(loadProfilesForIncomingHooks(data));\n        }\n    };\n}\n\nexport function loadProfilesForIncomingHooks(hooks) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < hooks.length; i++) {\n            const hook = hooks[i];\n            if (!getUser(state, hook.user_id)) {\n                profilesToLoad[hook.user_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadOutgoingHooksAndProfilesForTeam(teamId, page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getOutgoingHooks('', teamId, page, perPage));\n        if (data) {\n            dispatch(loadProfilesForOutgoingHooks(data));\n        }\n    };\n}\n\nexport function loadProfilesForOutgoingHooks(hooks) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < hooks.length; i++) {\n            const hook = hooks[i];\n            if (!getUser(state, hook.creator_id)) {\n                profilesToLoad[hook.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadCommandsAndProfilesForTeam(teamId) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getCustomTeamCommands(teamId));\n        if (data) {\n            dispatch(loadProfilesForCommands(data));\n        }\n    };\n}\n\nexport function loadProfilesForCommands(commands) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < commands.length; i++) {\n            const command = commands[i];\n            if (!getUser(state, command.creator_id)) {\n                profilesToLoad[command.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadOAuthAppsAndProfiles(page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getOAuthApps(page, perPage));\n        if (data) {\n            dispatch(loadProfilesForOAuthApps(data));\n        }\n    };\n}\n\nexport function loadProfilesForOAuthApps(apps) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < apps.length; i++) {\n            const app = apps[i];\n            if (!getUser(state, app.creator_id)) {\n                profilesToLoad[app.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function getYoutubeVideoInfo(googleKey, videoId, success, error) {\n    request.get('https://www.googleapis.com/youtube/v3/videos').\n        query({part: 'snippet', id: videoId, key: googleKey}).\n        end((err, res) => {\n            if (err) {\n                return error(err);\n            }\n\n            if (!res.body) {\n                console.error('Missing response body for getYoutubeVideoInfo'); // eslint-disable-line no-console\n            }\n\n            return success(res.body);\n        });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Switch} from 'react-router-dom';\n\nimport Bots from 'components/integrations/bots';\nimport AddBot from 'components/integrations/bots/add_bot';\n\nimport Pluggable from 'plugins/pluggable';\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport Integrations from 'components/integrations';\nimport Emoji from 'components/emoji';\nimport AddEmoji from 'components/emoji/add_emoji';\nimport InstalledIncomingWebhooks from 'components/integrations/installed_incoming_webhooks';\nimport AddIncomingWehook from 'components/integrations/add_incoming_webhook';\nimport EditIncomingWebhook from 'components/integrations/edit_incoming_webhook';\nimport InstalledOutgoingWebhooks from 'components/integrations/installed_outgoing_webhooks';\nimport AddOutgoingWebhook from 'components/integrations/add_outgoing_webhook';\nimport EditOutgoingWebhook from 'components/integrations/edit_outgoing_webhook';\nimport InstalledOauthApps from 'components/integrations/installed_oauth_apps';\nimport AddOauthApp from 'components/integrations/add_oauth_app';\nimport EditOauthApp from 'components/integrations/edit_oauth_app';\nimport CommandsContainer from 'components/integrations/commands_container';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nimport BackstageSidebar from './components/backstage_sidebar.jsx';\nimport BackstageNavbar from './components/backstage_navbar';\n\nconst BackstageRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class BackstageController extends React.Component {\n    static propTypes = {\n\n        /**\n         * Current user.\n         */\n        user: PropTypes.object,\n\n        /**\n         * Current team.\n         */\n        team: PropTypes.object,\n\n        /**\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        siteName: PropTypes.string,\n        enableCustomEmoji: PropTypes.bool.isRequired,\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n        enableOutgoingWebhooks: PropTypes.bool.isRequired,\n        enableCommands: PropTypes.bool.isRequired,\n        enableOAuthServiceProvider: PropTypes.bool.isRequired,\n        canCreateOrDeleteCustomEmoji: PropTypes.bool.isRequired,\n    }\n\n    scrollToTop = () => {\n        if (this.listRef) {\n            this.listRef.scrollTop = 0;\n        }\n    }\n\n    setListRef = (ref) => {\n        this.listRef = ref;\n    }\n\n    render() {\n        if (this.props.team == null || this.props.user == null) {\n            return <div/>;\n        }\n        const extraProps = {\n            team: this.props.team,\n            user: this.props.user,\n            scrollToTop: this.scrollToTop,\n        };\n        return (\n            <div className='backstage'>\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <BackstageNavbar\n                    team={this.props.team}\n                    siteName={this.props.siteName}\n                />\n                <Pluggable pluggableName='Root'/>\n                <div\n                    className='backstage-body'\n                    ref={this.setListRef}\n                >\n                    <BackstageSidebar\n                        team={this.props.team}\n                        user={this.props.user}\n                        enableCustomEmoji={this.props.enableCustomEmoji}\n                        enableIncomingWebhooks={this.props.enableIncomingWebhooks}\n                        enableOutgoingWebhooks={this.props.enableOutgoingWebhooks}\n                        enableCommands={this.props.enableCommands}\n                        enableOAuthServiceProvider={this.props.enableOAuthServiceProvider}\n                        canCreateOrDeleteCustomEmoji={this.props.canCreateOrDeleteCustomEmoji}\n                    />\n                    <Switch>\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/integrations'}\n                            component={Integrations}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/incoming_webhooks`}\n                            component={InstalledIncomingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/add`}\n                            component={AddIncomingWehook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/edit`}\n                            component={EditIncomingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/outgoing_webhooks`}\n                            component={InstalledOutgoingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/add`}\n                            component={AddOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/edit`}\n                            component={EditOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/commands`}\n                            component={CommandsContainer}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/oauth2-apps`}\n                            component={InstalledOauthApps}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/add`}\n                            component={AddOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/edit`}\n                            component={EditOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/confirm`}\n                            component={ConfirmIntegration}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/emoji'}\n                            component={Emoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/add`}\n                            component={AddEmoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots/add`}\n                            component={AddBot}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots/edit`}\n                            component={AddBot}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots`}\n                            component={Bots}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, NavLink} from 'react-router-dom';\n\nexport default class BackstageCategory extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            icon: PropTypes.string.isRequired,\n            parentLink: PropTypes.string,\n            children: PropTypes.arrayOf(PropTypes.element),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    render() {\n        const {name, title, icon, parentLink, children} = this.props;\n\n        const link = parentLink + '/' + name;\n\n        return (\n            <li className='backstage-sidebar__category'>\n                <NavLink\n                    to={link}\n                    className='category-title'\n                    activeClassName='category-title--active'\n                >\n                    <i className={'fa ' + icon}/>\n                    <span className='category-title__text'>\n                        {title}\n                    </span>\n                </NavLink>\n                {\n                    children && children.length > 0 &&\n                    <Route\n                        path={link}\n                        render={() => (\n                            <ul className='sections'>\n                                {\n                                    React.Children.map(children, (child) => {\n                                        if (!child) {\n                                            return child;\n                                        }\n\n                                        return React.cloneElement(child, {\n                                            parentLink: link,\n                                        });\n                                    })\n                                }\n                            </ul>\n                        )}\n                    />\n                }\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {intlShape} from 'react-intl';\n\nexport default class BackstageHeader extends React.Component {\n    static propTypes = {\n        children: PropTypes.node,\n    };\n\n    static contextTypes = {\n        intl: intlShape.isRequired,\n    };\n\n    render() {\n        const children = [];\n        const {formatMessage} = this.context.intl;\n\n        React.Children.forEach(this.props.children, (child, index) => {\n            if (index !== 0) {\n                children.push(\n                    <span\n                        key={'divider' + index}\n                        className='backstage-header__divider'\n                    >\n                        <i\n                            className='fa fa-angle-right'\n                            title={formatMessage({id: 'generic_icons.breadcrumb', defaultMessage: 'Breadcrumb Icon'})}\n                        />\n                    </span>\n                );\n            }\n\n            children.push(child);\n        });\n\n        return (\n            <div className='backstage-header'>\n                <h1>\n                    {children}\n                </h1>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen';\nimport SearchIcon from 'components/widgets/icons/fa_search_icon';\n\nexport default class BackstageList extends React.Component {\n    static propTypes = {\n        children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n        header: PropTypes.node.isRequired,\n        addLink: PropTypes.string,\n        addText: PropTypes.node,\n        addButtonId: PropTypes.string,\n        emptyText: PropTypes.node,\n        emptyTextSearch: PropTypes.node,\n        helpText: PropTypes.node,\n        loading: PropTypes.bool.isRequired,\n        searchPlaceholder: PropTypes.string,\n    }\n\n    static defaultProps = {\n        searchPlaceholder: Utils.localizeMessage('backstage_list.search', 'Search'),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: '',\n        };\n    }\n\n    updateFilter = (e) => {\n        this.setState({\n            filter: e.target.value,\n        });\n    }\n\n    render() {\n        const filter = this.state.filter.toLowerCase();\n\n        let children;\n        if (this.props.loading) {\n            children = <LoadingScreen/>;\n        } else {\n            children = this.props.children;\n            let hasChildren = true;\n            if (typeof children === 'function') {\n                [children, hasChildren] = children(filter);\n            }\n            children = React.Children.map(children, (child) => {\n                return React.cloneElement(child, {filter});\n            });\n            if (children.length === 0 || !hasChildren) {\n                if (!filter) {\n                    if (this.props.emptyText) {\n                        children = (\n                            <div className='backstage-list__item backstage-list__empty'>\n                                {this.props.emptyText}\n                            </div>\n                        );\n                    }\n                } else if (this.props.emptyTextSearch) {\n                    children = (\n                        <div\n                            className='backstage-list__item backstage-list__empty'\n                            id='emptySearchResultsMessage'\n                        >\n                            {React.cloneElement(this.props.emptyTextSearch, {values: {searchTerm: filter}})}\n                        </div>\n                    );\n                }\n            }\n        }\n\n        let addLink = null;\n\n        if (this.props.addLink && this.props.addText) {\n            addLink = (\n                <Link\n                    className='add-link'\n                    to={this.props.addLink}\n                >\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        id={this.props.addButtonId}\n                    >\n                        <span>\n                            {this.props.addText}\n                        </span>\n                    </button>\n                </Link>\n            );\n        }\n\n        return (\n            <div className='backstage-content'>\n                <div className='backstage-header'>\n                    <h1>\n                        {this.props.header}\n                    </h1>\n                    {addLink}\n                </div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <SearchIcon/>\n                        <input\n                            type='search'\n                            className='form-control'\n                            placeholder={this.props.searchPlaceholder}\n                            value={this.state.filter}\n                            onChange={this.updateFilter}\n                            style={style.search}\n                            id='searchInput'\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    {this.props.helpText}\n                </span>\n                <div className='backstage-list'>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackIcon from 'components/widgets/icons/fa_back_icon';\n\nexport default class BackstageNavbar extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            siteName: PropTypes.string,\n        };\n    }\n\n    render() {\n        if (!this.props.team) {\n            return null;\n        }\n\n        return (\n            <div className='backstage-navbar'>\n                <Link\n                    className='backstage-navbar__back'\n                    to={`/${this.props.team.name}`}\n                >\n                    <BackIcon/>\n                    <span>\n                        <FormattedMessage\n                            id='backstage_navbar.backToMattermost'\n                            defaultMessage='Back to {siteName}'\n                            values={{\n                                siteName: this.props.siteName,\n                            }}\n                        />\n                    </span>\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default class BackstageSection extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            parentLink: PropTypes.string,\n            subsection: PropTypes.bool,\n            children: PropTypes.arrayOf(PropTypes.element),\n            id: PropTypes.string,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            subsection: false,\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    getLink() {\n        return this.props.parentLink + '/' + this.props.name;\n    }\n\n    render() {\n        const {title, subsection, children} = this.props;\n\n        const link = this.getLink();\n\n        let clonedChildren = null;\n        if (children.length > 0) {\n            clonedChildren = (\n                <ul className='subsections'>\n                    {\n                        React.Children.map(children, (child) => {\n                            return React.cloneElement(child, {\n                                parentLink: link,\n                                subsection: true,\n                            });\n                        })\n                    }\n                </ul>\n            );\n        }\n\n        let className = 'section';\n        if (subsection) {\n            className = 'subsection';\n        }\n\n        return (\n            <li\n                className={className}\n                id={this.props.id}\n            >\n                <NavLink\n                    className={`${className}-title`}\n                    activeClassName={`${className}-title--active`}\n                    to={link}\n                >\n                    <span className={`${className}-title__text`}>\n                        {title}\n                    </span>\n                </NavLink>\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport BackstageCategory from './backstage_category.jsx';\nimport BackstageSection from './backstage_section.jsx';\n\nexport default class BackstageSidebar extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            user: PropTypes.object.isRequired,\n            enableCustomEmoji: PropTypes.bool.isRequired,\n            enableIncomingWebhooks: PropTypes.bool.isRequired,\n            enableOutgoingWebhooks: PropTypes.bool.isRequired,\n            enableCommands: PropTypes.bool.isRequired,\n            enableOAuthServiceProvider: PropTypes.bool.isRequired,\n            canCreateOrDeleteCustomEmoji: PropTypes.bool.isRequired,\n        };\n    }\n\n    renderCustomEmoji() {\n        if (!this.props.enableCustomEmoji || !this.props.canCreateOrDeleteCustomEmoji) {\n            return null;\n        }\n\n        return (\n            <BackstageCategory\n                name='emoji'\n                parentLink={'/' + this.props.team.name}\n                icon='fa-smile-o'\n                title={\n                    <FormattedMessage\n                        id='backstage_sidebar.emoji'\n                        defaultMessage='Custom Emoji'\n                    />\n                }\n            />\n        );\n    }\n\n    renderIntegrations() {\n        let incomingWebhooks = null;\n        if (this.props.enableIncomingWebhooks) {\n            incomingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='incoming_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.incoming_webhooks'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        )}\n                        id='incomingWebhooks'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let outgoingWebhooks = null;\n        if (this.props.enableOutgoingWebhooks) {\n            outgoingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_OUTGOING_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='outgoing_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.outgoing_webhooks'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        )}\n                        id='outgoingWebhooks'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let commands = null;\n        if (this.props.enableCommands) {\n            commands = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='commands'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.commands'\n                                defaultMessage='Slash Commands'\n                            />\n                        )}\n                        id='slashCommands'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let oauthApps = null;\n        if (this.props.enableOAuthServiceProvider) {\n            oauthApps = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_OAUTH]}>\n                    <BackstageSection\n                        name='oauth2-apps'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.oauthApps'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        id='oauthApps'\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        const botAccounts = (\n            <SystemPermissionGate permissions={['manage_bots']}>\n                <BackstageSection\n                    name='bots'\n                    parentLink={'/' + this.props.team.name + '/integrations'}\n                    title={\n                        <FormattedMessage\n                            id='backstage_sidebar.bots'\n                            defaultMessage='Bot Accounts'\n                        />\n                    }\n                    id='botAccounts'\n                />\n            </SystemPermissionGate>\n        );\n\n        return (\n            <TeamPermissionGate\n                permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS, Permissions.MANAGE_OUTGOING_WEBHOOKS, Permissions.MANAGE_SLASH_COMMANDS, Permissions.MANAGE_OAUTH]}\n                teamId={this.props.team.id}\n            >\n                <BackstageCategory\n                    name='integrations'\n                    icon='fa-link'\n                    parentLink={'/' + this.props.team.name}\n                    title={\n                        <FormattedMessage\n                            id='backstage_sidebar.integrations'\n                            defaultMessage='Integrations'\n                        />\n                    }\n                >\n                    {incomingWebhooks}\n                    {outgoingWebhooks}\n                    {commands}\n                    {oauthApps}\n                    {botAccounts}\n                </BackstageCategory>\n            </TeamPermissionGate>\n        );\n    }\n\n    render() {\n        return (\n            <div className='backstage-sidebar'>\n                <ul>\n                    {this.renderCustomEmoji()}\n                    {this.renderIntegrations()}\n                </ul>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getMyTeams, getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {haveITeamPermission, haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BackstageController from './backstage_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const user = getCurrentUser(state);\n    const team = getCurrentTeam(state);\n\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enableCustomEmoji = config.EnableCustomEmoji === 'true';\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    let canCreateOrDeleteCustomEmoji = (haveISystemPermission(state, {permission: Permissions.CREATE_EMOJIS}) || haveISystemPermission(state, {permission: Permissions.DELETE_EMOJIS}));\n    if (!canCreateOrDeleteCustomEmoji) {\n        for (const t of getMyTeams(state)) {\n            if (haveITeamPermission(state, {team: t.id, permission: Permissions.CREATE_EMOJIS}) || haveITeamPermission(state, {team: t.id, permission: Permissions.DELETE_EMOJIS})) {\n                canCreateOrDeleteCustomEmoji = true;\n                break;\n            }\n        }\n    }\n\n    return {\n        user,\n        team,\n        siteName,\n        enableCustomEmoji,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n        canCreateOrDeleteCustomEmoji,\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(BackstageController));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ChannelSelect extends React.PureComponent {\n    static get propTypes() {\n        return {\n            channels: PropTypes.array.isRequired,\n            onChange: PropTypes.func,\n            value: PropTypes.string,\n            selectOpen: PropTypes.bool.isRequired,\n            selectPrivate: PropTypes.bool.isRequired,\n            selectDm: PropTypes.bool.isRequired,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            selectOpen: false,\n            selectPrivate: false,\n            selectDm: false,\n        };\n    }\n\n    render() {\n        const options = [\n            <option\n                key=''\n                value=''\n            >\n                {Utils.localizeMessage('channel_select.placeholder', '--- Select a channel ---')}\n            </option>,\n        ];\n\n        this.props.channels.forEach((channel) => {\n            const channelName = channel.display_name || channel.name;\n            if (channel.type === Constants.OPEN_CHANNEL && this.props.selectOpen) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>\n                );\n            } else if (channel.type === Constants.PRIVATE_CHANNEL && this.props.selectPrivate) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>\n                );\n            } else if (channel.type === Constants.DM_CHANNEL && this.props.selectDm) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>\n                );\n            }\n        });\n\n        return (\n            <select\n                className='form-control'\n                value={this.props.value}\n                onChange={this.props.onChange}\n                id='channelSelect'\n            >\n                {options}\n            </select>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\n\nimport {getMyChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentUserLocale} from 'mattermost-redux/selectors/entities/i18n';\nimport {sortChannelsByTypeAndDisplayName} from 'mattermost-redux/utils/channel_utils';\n\nimport ChannelSelect from './channel_select.jsx';\n\nconst getMyChannelsSorted = createSelector(\n    getMyChannels,\n    getCurrentUserLocale,\n    (channels, locale) => {\n        return [...channels].sort(sortChannelsByTypeAndDisplayName.bind(null, locale));\n    }\n);\n\nfunction mapStateToProps(state) {\n    return {\n        channels: getMyChannelsSorted(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelSelect);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport Constants from 'utils/constants';\nimport {copyToClipboard} from 'utils/utils.jsx';\n\ntype Props = {\n    value: string;\n    defaultMessage: string;\n    idMessage: string;\n};\n\nexport default class CopyText extends React.PureComponent<Props, {}> {\n    public static defaultProps = {\n        defaultMessage: 'Copy',\n        idMessage: 'integrations.copy',\n    };\n\n    private copyText = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>): void => {\n        e.preventDefault();\n        copyToClipboard(this.props.value);\n    };\n\n    public render() {\n        if (!document.queryCommandSupported('copy')) {\n            return null;\n        }\n\n        const tooltip = (\n            <Tooltip id='copy'>\n                <FormattedMessage\n                    id={this.props.idMessage}\n                    defaultMessage={this.props.defaultMessage}\n                />\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                overlay={tooltip}\n            >\n                <a\n                    href='#'\n                    className='fa fa-copy margin-left'\n                    onClick={this.copyText}\n                />\n            </OverlayTrigger>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\nimport ConfirmModal from './confirm_modal.jsx';\n\nexport default class DeleteModalTrigger extends React.PureComponent {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        if (this.constructor === DeleteModalTrigger) {\n            throw new TypeError('Can not construct abstract class.');\n        }\n\n        this.state = {\n            showDeleteModal: false,\n        };\n    }\n\n    handleOpenModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showDeleteModal: true,\n        });\n    }\n\n    handleConfirm = () => {\n        this.props.onDelete();\n    }\n\n    handleCancel = () => {\n        this.setState({\n            showDeleteModal: false,\n        });\n    }\n\n    handleKeyDown = (e) => {\n        if (Utils.isKeyPressed(e, Constants.KeyCodes.ENTER)) {\n            this.handleConfirm(e);\n        }\n    }\n\n    render() {\n        return (\n            <span>\n                <button\n                    className='color--link style--none'\n                    onClick={this.handleOpenModal}\n                >\n                    { this.triggerTitle }\n                </button>\n                <ConfirmModal\n                    show={this.state.showDeleteModal}\n                    title={this.modalTitle}\n                    message={this.modalMessage}\n                    confirmButtonText={this.modalConfirmButton}\n                    onConfirm={this.handleConfirm}\n                    onCancel={this.handleCancel}\n                    onKeyDown={this.handleKeyDown}\n                />\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport {browserHistory} from 'utils/browser_history';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class AddEmoji extends React.Component {\n    static propTypes = {\n        actions: PropTypes.shape({\n            createCustomEmoji: PropTypes.func.isRequired,\n        }).isRequired,\n        emojiMap: PropTypes.object.isRequired,\n        team: PropTypes.object,\n        user: PropTypes.object,\n    };\n\n    static contextTypes = {\n        router: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            image: null,\n            imageUrl: '',\n            saving: false,\n            error: null,\n        };\n    }\n\n    handleSubmit = async (e) => {\n        const {actions, emojiMap, user, team} = this.props;\n        const {image, name, saving} = this.state;\n\n        e.preventDefault();\n\n        if (saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            error: null,\n        });\n\n        const emoji = {\n            creator_id: user.id,\n            name: name.trim().toLowerCase(),\n        };\n\n        // trim surrounding colons if the user accidentally included them in the name\n        if (emoji.name.startsWith(':') && emoji.name.endsWith(':')) {\n            emoji.name = emoji.name.substring(1, emoji.name.length - 1);\n        }\n\n        if (!emoji.name) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameRequired'\n                        defaultMessage='A name is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        } else if ((/[^a-z0-9_-]/).test(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameInvalid'\n                        defaultMessage=\"An emoji's name can only contain lowercase letters, numbers, and the symbols '-' and '_'.\"\n                    />\n                ),\n            });\n\n            return;\n        } else if (emojiMap.hasSystemEmoji(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameTaken'\n                        defaultMessage='This name is already in use by a system emoji. Please choose another name.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!image) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.imageRequired'\n                        defaultMessage='An image is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const {error} = await actions.createCustomEmoji(emoji, image);\n        if (error) {\n            this.setState({\n                saving: false,\n                error: error.message,\n            });\n            return;\n        }\n\n        browserHistory.push('/' + team.name + '/emoji');\n    };\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    };\n\n    updateImage = (e) => {\n        if (e.target.files.length === 0) {\n            this.setState({\n                image: null,\n                imageUrl: '',\n            });\n\n            return;\n        }\n\n        const image = e.target.files[0];\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.setState({\n                image,\n                imageUrl: reader.result,\n            });\n        };\n        reader.readAsDataURL(image);\n    };\n\n    render() {\n        let filename = null;\n        if (this.state.image) {\n            filename = (\n                <span className='add-emoji__filename'>\n                    {this.state.image.name}\n                </span>\n            );\n        }\n\n        let preview = null;\n        if (this.state.imageUrl) {\n            preview = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='preview'\n                    >\n                        <FormattedMessage\n                            id='add_emoji.preview'\n                            defaultMessage='Preview'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8 add-emoji__preview'>\n                        <FormattedMessage\n                            id='add_emoji.preview.sentence'\n                            defaultMessage='This is a sentence with {image} in it.'\n                            values={{\n                                image: (\n                                    <span\n                                        className='emoticon'\n                                        style={{backgroundImage: 'url(' + this.state.imageUrl + ')'}}\n                                    />\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/emoji'}>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id='add_emoji.header'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.name'\n                                    defaultMessage='Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_emoji.name.help'\n                                        defaultMessage=\"Choose a name for your emoji made of up to 64 characters consisting of lowercase letters, numbers, and the symbols '-' and '_'.\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='image'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.image'\n                                    defaultMessage='Image'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div>\n                                    <div className='add-emoji__upload'>\n                                        <button className='btn btn-primary'>\n                                            <FormattedMessage\n                                                id='add_emoji.image.button'\n                                                defaultMessage='Select'\n                                            />\n                                        </button>\n                                        <input\n                                            id='select-emoji'\n                                            type='file'\n                                            accept='.jpg,.png,.gif'\n                                            multiple={false}\n                                            onChange={this.updateImage}\n                                        />\n                                    </div>\n                                    {filename}\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_emoji.image.help'\n                                            defaultMessage='Choose the image for your emoji. The image can be a gif, png, or jpeg file with a max size of 64 KB and dimensions up to 128 by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {preview}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                error={this.state.error}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={'/' + this.props.team.name + '/emoji'}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage('add_emoji.saving', 'Saving...')}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.save'\n                                    defaultMessage='Save'\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {createCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {getEmojiMap} from 'selectors/emojis';\n\nimport AddEmoji from './add_emoji.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        emojiMap: getEmojiMap(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEmoji);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nexport default class DeleteEmoji extends DeleteModalTrigger {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.title'\n                defaultMessage='Delete Custom Emoji'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <WarningIcon additionalClassName='fa-margin--right'/>\n                <FormattedMessage\n                    id='emoji_list.delete.confirm.msg'\n                    defaultMessage='This action permanently deletes the custom emoji. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Emoji} from 'mattermost-redux/constants';\n\nimport LoadingScreen from 'components/loading_screen';\nimport SaveButton from 'components/save_button';\nimport EmojiListItem from 'components/emoji/emoji_list_item';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\nimport SearchIcon from 'components/widgets/icons/fa_search_icon';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n.jsx';\n\nconst EMOJI_PER_PAGE = 50;\nconst EMOJI_SEARCH_DELAY_MILLISECONDS = 200;\n\nexport default class EmojiList extends React.Component {\n    static propTypes = {\n\n        /**\n         * Custom emojis on the system.\n         */\n        emojiIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Function to scroll list to top.\n         */\n        scrollToTop: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Get pages of custom emojis.\n             */\n            getCustomEmojis: PropTypes.func.isRequired,\n\n            /**\n             * Search custom emojis.\n             */\n            searchCustomEmojis: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeout = null;\n\n        this.state = {\n            loading: true,\n            page: 0,\n            nextLoading: false,\n            searchEmojis: null,\n            missingPages: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getCustomEmojis(0, EMOJI_PER_PAGE + 1, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({loading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n        });\n    }\n\n    nextPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const next = this.state.page + 1;\n        this.setState({nextLoading: true});\n        this.props.actions.getCustomEmojis(next, EMOJI_PER_PAGE, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({page: next, nextLoading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n\n            this.props.scrollToTop();\n        });\n    }\n\n    previousPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.setState({page: this.state.page - 1, nextLoading: false});\n        this.props.scrollToTop();\n    }\n\n    onSearchChange = (e) => {\n        if (!e || !e.target) {\n            return;\n        }\n\n        const term = e.target.value || '';\n\n        clearTimeout(this.searchTimeout);\n\n        this.searchTimeout = setTimeout(async () => {\n            if (term.trim() === '') {\n                this.setState({searchEmojis: null, page: 0});\n                return;\n            }\n\n            this.setState({loading: true});\n\n            const {data} = await this.props.actions.searchCustomEmojis(term, {}, true);\n\n            if (data) {\n                this.setState({searchEmojis: data.map((em) => em.id), loading: false});\n            } else {\n                this.setState({searchEmojis: [], loading: false});\n            }\n        }, EMOJI_SEARCH_DELAY_MILLISECONDS);\n    }\n\n    deleteFromSearch = (emojiId) => {\n        if (!this.state.searchEmojis) {\n            return;\n        }\n\n        const index = this.state.searchEmojis.indexOf(emojiId);\n\n        if (index < 0) {\n            return;\n        }\n\n        const newSearchEmojis = [...this.state.searchEmojis];\n        newSearchEmojis.splice(index, 1);\n        this.setState({searchEmojis: newSearchEmojis});\n    }\n\n    render() {\n        const searchEmojis = this.state.searchEmojis;\n        const emojis = [];\n        let nextButton;\n        let previousButton;\n\n        if (this.state.loading) {\n            emojis.push(\n                <tr\n                    key='loading'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <LoadingScreen key='loading'/>\n                    </td>\n                </tr>\n            );\n        } else if (this.props.emojiIds.length === 0 || (searchEmojis && searchEmojis.length === 0)) {\n            emojis.push(\n                <tr\n                    key='empty'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <FormattedMessage\n                            id='emoji_list.empty'\n                            defaultMessage='No custom emoji found'\n                        />\n                    </td>\n                </tr>\n            );\n        } else if (searchEmojis) {\n            searchEmojis.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_search_item' + emojiId}\n                        emojiId={emojiId}\n                        onDelete={this.deleteFromSearch}\n                    />\n                );\n            });\n        } else {\n            const pageStart = this.state.page * EMOJI_PER_PAGE;\n            const pageEnd = pageStart + EMOJI_PER_PAGE;\n            const emojisToDisplay = this.props.emojiIds.slice(pageStart, pageEnd);\n\n            emojisToDisplay.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_list_item' + emojiId}\n                        emojiId={emojiId}\n                    />\n                );\n            });\n\n            if (this.state.missingPages) {\n                const buttonContents = (\n                    <span>\n                        <FormattedMessage\n                            id='filtered_user_list.next'\n                            defaultMessage='Next'\n                        />\n                        <NextIcon additionalClassName='margin-left'/>\n                    </span>\n                );\n\n                nextButton = (\n                    <SaveButton\n                        btnClass='btn-link'\n                        extraClasses='pull-right'\n                        onClick={this.nextPage}\n                        saving={this.state.nextLoading}\n                        disabled={this.state.nextLoading}\n                        defaultMessage={buttonContents}\n                        savingMessage={buttonContents}\n                    />\n                );\n            }\n\n            if (this.state.page > 0) {\n                previousButton = (\n                    <button\n                        className='btn btn-link'\n                        onClick={this.previousPage}\n                    >\n                        <PreviousIcon additionalClassName='margin-right'/>\n                        <FormattedMessage\n                            id='filtered_user_list.prev'\n                            defaultMessage='Previous'\n                        />\n                    </button>\n                );\n            }\n        }\n\n        return (\n            <div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <SearchIcon/>\n                        <LocalizedInput\n                            type='search'\n                            className='form-control'\n                            placeholder={{id: t('emoji_list.search'), defaultMessage: 'Search Custom Emoji'}}\n                            onChange={this.onSearchChange}\n                            style={style.search}\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help'\n                            defaultMessage=\"Custom emoji are available to everyone on your server. Type ':' followed by two characters in a message box to bring up the emoji selection menu.\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help2'\n                            defaultMessage=\"Tip: If you add #, ##, or ### as the first character on a new line containing emoji, you can use larger sized emoji. To try it out, send a message such as: '# :smile:'.\"\n                        />\n                    </p>\n                </span>\n                <div className='backstage-list'>\n                    <table className='emoji-list__table'>\n                        <thead>\n                            <tr className='backstage-list__item emoji-list__table-header'>\n                                <th className='emoji-list__name'>\n                                    <FormattedMessage\n                                        id='emoji_list.name'\n                                        defaultMessage='Name'\n                                    />\n                                </th>\n                                <th className='emoji-list__image'>\n                                    <FormattedMessage\n                                        id='emoji_list.image'\n                                        defaultMessage='Image'\n                                    />\n                                </th>\n                                <th className='emoji-list__creator'>\n                                    <FormattedMessage\n                                        id='emoji_list.creator'\n                                        defaultMessage='Creator'\n                                    />\n                                </th>\n                                <th className='emoji-list_actions'>\n                                    <FormattedMessage\n                                        id='emoji_list.actions'\n                                        defaultMessage='Actions'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {emojis}\n                        </tbody>\n                    </table>\n                </div>\n                <div className='filter-controls padding-top x2'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCustomEmojiIdsSortedByName} from 'mattermost-redux/selectors/entities/emojis';\n\nimport {getCustomEmojis, searchCustomEmojis} from 'mattermost-redux/actions/emojis';\n\nimport EmojiList from './emoji_list.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        emojiIds: getCustomEmojiIdsSortedByName(state) || [],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomEmojis,\n            searchCustomEmojis,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport {Client4} from 'mattermost-redux/client';\n\nimport DeleteEmoji from 'components/emoji/delete_emoji_modal.jsx';\nimport AnyTeamPermissionGate from 'components/permissions_gates/any_team_permission_gate';\n\nexport default class EmojiListItem extends React.Component {\n    static propTypes = {\n        emoji: PropTypes.object.isRequired,\n        currentUserId: PropTypes.string.isRequired,\n        creatorDisplayName: PropTypes.string.isRequired,\n        creatorUsername: PropTypes.string,\n        currentTeam: PropTypes.object,\n        onDelete: PropTypes.func,\n        actions: PropTypes.shape({\n            deleteCustomEmoji: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        emoji: {},\n        currentUserId: '',\n        currentTeam: {},\n        creatorDisplayName: '',\n    }\n\n    handleDelete = () => {\n        if (this.props.onDelete) {\n            this.props.onDelete(this.props.emoji.id);\n        }\n\n        this.props.actions.deleteCustomEmoji(this.props.emoji.id);\n    }\n\n    render() {\n        const emoji = this.props.emoji;\n        const creatorUsername = this.props.creatorUsername;\n        let creatorDisplayName = this.props.creatorDisplayName;\n\n        if (creatorUsername && creatorUsername !== creatorDisplayName) {\n            creatorDisplayName += ' (@' + creatorUsername + ')';\n        }\n\n        let deleteButton = null;\n        if (emoji.creator_id === this.props.currentUserId) {\n            deleteButton = (\n                <AnyTeamPermissionGate permissions={[Permissions.DELETE_EMOJIS]}>\n                    <DeleteEmoji onDelete={this.handleDelete}/>\n                </AnyTeamPermissionGate>\n            );\n        } else {\n            deleteButton = (\n                <AnyTeamPermissionGate permissions={[Permissions.DELETE_EMOJIS]}>\n                    <AnyTeamPermissionGate permissions={[Permissions.DELETE_OTHERS_EMOJIS]}>\n                        <DeleteEmoji onDelete={this.handleDelete}/>\n                    </AnyTeamPermissionGate>\n                </AnyTeamPermissionGate>\n            );\n        }\n\n        return (\n            <tr className='backstage-list__item'>\n                <td className='emoji-list__name'>\n                    {':' + emoji.name + ':'}\n                </td>\n                <td className='emoji-list__image'>\n                    <span\n                        className='emoticon'\n                        style={{backgroundImage: 'url(' + Client4.getCustomEmojiImageUrl(emoji.id) + ')'}}\n                    />\n                </td>\n                <td className='emoji-list__creator'>\n                    {creatorDisplayName}\n                </td>\n                <td className='emoji-list-item_actions'>\n                    {deleteButton}\n                </td>\n            </tr>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getUser, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {deleteCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {getDisplayNameByUser} from 'utils/utils.jsx';\n\nimport EmojiListItem from './emoji_list_item.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const emoji = state.entities.emojis.customEmoji[ownProps.emojiId];\n    const creator = getUser(state, emoji.creator_id);\n\n    return {\n        emoji,\n        creatorDisplayName: getDisplayNameByUser(creator),\n        creatorUsername: creator ? creator.username : '',\n        currentUserId: getCurrentUserId(state),\n        currentTeam: getCurrentTeam(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiListItem);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport * as Utils from 'utils/utils.jsx';\nimport AnyTeamPermissionGate from 'components/permissions_gates/any_team_permission_gate';\n\nimport EmojiList from './emoji_list';\n\nexport default class EmojiPage extends React.Component {\n    static propTypes = {\n        teamId: PropTypes.string.isRequired,\n        teamName: PropTypes.string.isRequired,\n        teamDisplayName: PropTypes.string.isRequired,\n        siteName: PropTypes.string,\n        scrollToTop: PropTypes.func.isRequired,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        teamName: '',\n        teamDisplayName: '',\n        siteName: '',\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n        this.props.actions.loadRolesIfNeeded(['system_admin', 'team_admin', 'system_user', 'team_user']);\n    }\n\n    updateTitle = () => {\n        document.title = Utils.localizeMessage('custom_emoji.header', 'Custom Emoji') + ' - ' + this.props.teamDisplayName + ' ' + this.props.siteName;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.siteName !== prevProps.siteName) {\n            this.updateTitle();\n        }\n    }\n\n    render() {\n        return (\n            <div className='backstage-content emoji-list'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </h1>\n                    <AnyTeamPermissionGate permissions={[Permissions.CREATE_EMOJIS]}>\n                        <Link\n                            className='add-link'\n                            to={'/' + this.props.teamName + '/emoji/add'}\n                        >\n                            <button\n                                type='button'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='emoji_list.add'\n                                    defaultMessage='Add Custom Emoji'\n                                />\n                            </button>\n                        </Link>\n                    </AnyTeamPermissionGate>\n                </div>\n                <EmojiList scrollToTop={this.props.scrollToTop}/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\n\nimport EmojiPage from './emoji_page.jsx';\n\nfunction mapStateToProps(state) {\n    const team = getCurrentTeam(state) || {};\n\n    return {\n        teamId: team.id,\n        teamName: team.name,\n        teamDisplayName: team.display_name,\n        siteName: state.entities.general.config.SiteName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n.jsx';\n\nconst REQUEST_POST = 'P';\nconst REQUEST_GET = 'G';\n\nexport default class AbstractCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The Command used to set the initial state\n        */\n        initialCommand: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromCommand(this.props.initialCommand || {});\n    }\n\n    getStateFromCommand = (command) => {\n        return {\n            displayName: command.display_name || '',\n            description: command.description || '',\n            trigger: command.trigger || '',\n            url: command.url || '',\n            method: command.method || REQUEST_POST,\n            username: command.username || '',\n            iconUrl: command.icon_url || '',\n            autocomplete: command.auto_complete || false,\n            autocompleteHint: command.auto_complete_hint || '',\n            autocompleteDescription: command.auto_complete_desc || '',\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        let triggerWord = this.state.trigger.trim().toLowerCase();\n        if (triggerWord.indexOf('/') === 0) {\n            triggerWord = triggerWord.substr(1);\n        }\n\n        const command = {\n            display_name: this.state.displayName,\n            description: this.state.description,\n            trigger: triggerWord,\n            url: this.state.url.trim(),\n            method: this.state.method,\n            username: this.state.username,\n            icon_url: this.state.iconUrl,\n            auto_complete: this.state.autocomplete,\n            team_id: this.props.team.id,\n        };\n\n        if (command.auto_complete) {\n            command.auto_complete_desc = this.state.autocompleteDescription;\n            command.auto_complete_hint = this.state.autocompleteHint;\n        }\n\n        if (!command.trigger) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerRequired'\n                        defaultMessage='A trigger word is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf('/') === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSlash'\n                        defaultMessage='A trigger word cannot begin with a /'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf(' ') !== -1) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSpace'\n                        defaultMessage='A trigger word must not contain spaces'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (command.trigger.length < Constants.MIN_TRIGGER_LENGTH ||\n            command.trigger.length > Constants.MAX_TRIGGER_LENGTH) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidLength'\n                        defaultMessage='A trigger word must contain between {min} and {max} characters'\n                        values={{\n                            min: Constants.MIN_TRIGGER_LENGTH,\n                            max: Constants.MAX_TRIGGER_LENGTH,\n                        }}\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!command.url) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.urlRequired'\n                        defaultMessage='A request URL is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        this.props.action(command).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateTrigger = (e) => {\n        this.setState({\n            trigger: e.target.value,\n        });\n    }\n\n    updateUrl = (e) => {\n        this.setState({\n            url: e.target.value,\n        });\n    }\n\n    updateMethod = (e) => {\n        this.setState({\n            method: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            iconUrl: e.target.value,\n        });\n    }\n\n    updateAutocomplete = (e) => {\n        this.setState({\n            autocomplete: e.target.checked,\n        });\n    }\n\n    updateAutocompleteHint = (e) => {\n        this.setState({\n            autocompleteHint: e.target.value,\n        });\n    }\n\n    updateAutocompleteDescription = (e) => {\n        this.setState({\n            autocompleteDescription: e.target.value,\n        });\n    }\n\n    render() {\n        let autocompleteHint = null;\n        let autocompleteDescription = null;\n\n        if (this.state.autocomplete) {\n            autocompleteHint = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteHint'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteHint'\n                            defaultMessage='Autocomplete Hint'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <LocalizedInput\n                            id='autocompleteHint'\n                            type='text'\n                            maxLength='1024'\n                            className='form-control'\n                            value={this.state.autocompleteHint}\n                            onChange={this.updateAutocompleteHint}\n                            placeholder={{id: t('add_command.autocompleteHint.placeholder'), defaultMessage: 'Example: [Patient Name]'}}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteHint.help'\n                                defaultMessage='(Optional) Arguments associated with your slash command, displayed as help in the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n\n            autocompleteDescription = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteDescription'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteDescription'\n                            defaultMessage='Autocomplete Description'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <LocalizedInput\n                            id='description'\n                            type='text'\n                            maxLength='128'\n                            className='form-control'\n                            value={this.state.autocompleteDescription}\n                            onChange={this.updateAutocompleteDescription}\n                            placeholder={{id: t('add_command.autocompleteDescription.placeholder'), defaultMessage: 'Example: \"Returns search results for patient records\"'}}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteDescription.help'\n                                defaultMessage='(Optional) Short description of slash command for the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/commands'}>\n                        <FormattedMessage\n                            id='installed_command.header'\n                            defaultMessage='Slash Commands'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={this.props.header.id}\n                        defaultMessage={this.props.header.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_command.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the slash command settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_command.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='128'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='trigger'\n                            >\n                                <FormattedMessage\n                                    id='add_command.trigger'\n                                    defaultMessage='Command Trigger Word'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='trigger'\n                                    type='text'\n                                    maxLength={Constants.MAX_TRIGGER_LENGTH}\n                                    className='form-control'\n                                    value={this.state.trigger}\n                                    onChange={this.updateTrigger}\n                                    placeholder={{id: t('add_command.trigger.placeholder'), defaultMessage: 'Command trigger e.g. \"hello\" not including the slash'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.help'\n                                        defaultMessage='Trigger word must be unique, and cannot begin with a slash or contain any spaces.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpExamples'\n                                        defaultMessage='Examples: client, employee, patient, weather'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpReserved'\n                                        defaultMessage='Reserved: {link}'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://docs.mattermost.com/help/messaging/executing-commands.html#built-in-commands'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_command.trigger.helpReservedLinkText'\n                                                        defaultMessage='see list of built-in slash commands'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='url'\n                            >\n                                <FormattedMessage\n                                    id='add_command.url'\n                                    defaultMessage='Request URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='url'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.url}\n                                    onChange={this.updateUrl}\n                                    placeholder={{id: t('add_command.url.placeholder'), defaultMessage: 'Must start with http:// or https://'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.url.help'\n                                        defaultMessage='The callback URL to receive the HTTP POST or GET event request when the slash command is run.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='method'\n                            >\n                                <FormattedMessage\n                                    id='add_command.method'\n                                    defaultMessage='Request Method'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    id='method'\n                                    className='form-control'\n                                    value={this.state.method}\n                                    onChange={this.updateMethod}\n                                >\n                                    <option value={REQUEST_POST}>\n                                        {Utils.localizeMessage('add_command.method.post', 'POST')}\n                                    </option>\n                                    <option value={REQUEST_GET}>\n                                        {Utils.localizeMessage('add_command.method.get', 'GET')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.method.help'\n                                        defaultMessage='The type of command request issued to the Request URL.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='add_command.username'\n                                    defaultMessage='Response Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='username'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                    placeholder={{id: t('add_command.username.placeholder'), defaultMessage: 'Username'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.username.help'\n                                        defaultMessage='(Optional) Choose a username override for responses for this slash command. Usernames can consist of up to 22 characters consisting of lowercase letters, numbers and they symbols \"-\", \"_\", and \".\" .'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='iconUrl'\n                            >\n                                <FormattedMessage\n                                    id='add_command.iconUrl'\n                                    defaultMessage='Response Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='iconUrl'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.iconUrl}\n                                    onChange={this.updateIconUrl}\n                                    placeholder={{id: t('add_command.iconUrl.placeholder'), defaultMessage: 'https://www.example.com/myicon.png'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.iconUrl.help'\n                                        defaultMessage='(Optional) Choose a profile picture override for the post responses to this slash command. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='autocomplete'\n                            >\n                                <FormattedMessage\n                                    id='add_command.autocomplete'\n                                    defaultMessage='Autocomplete'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='autocomplete'\n                                    type='checkbox'\n                                    checked={this.state.autocomplete}\n                                    onChange={this.updateAutocomplete}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.autocomplete.help'\n                                        defaultMessage='(Optional) Show slash command in autocomplete list.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {autocompleteHint}\n                        {autocompleteDescription}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={'/' + this.props.team.name + '/integrations/commands'}\n                            >\n                                <FormattedMessage\n                                    id='add_command.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={Utils.localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveCommand'\n                            >\n                                <FormattedMessage\n                                    id={this.props.footer.id}\n                                    defaultMessage={this.props.footer.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {this.props.renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class AbstractIncomingWebhook extends React.Component {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The hook used to set the initial state\n        */\n        initialHook: PropTypes.object,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            channelId: hook.channel_id || '',\n            channelLocked: hook.channel_locked || false,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n            saving: false,\n            serverError: '',\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            serverError: '',\n            clientError: '',\n        });\n\n        if (!this.state.channelId) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_incoming_webhook.channelRequired'\n                        defaultMessage='A valid channel is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            channel_id: this.state.channelId,\n            channel_locked: this.state.channelLocked,\n            display_name: this.state.displayName,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateChannelLocked = (e) => {\n        this.setState({\n            channelLocked: e.target.checked,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks`}>\n                        <FormattedMessage\n                            id='installed_incoming_webhooks.header'\n                            defaultMessage='Incoming Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                    selectPrivate={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channel.help'\n                                        defaultMessage='The default public or private channel that receives the webhook payloads. You must belong to the private channel when setting up the webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelLocked'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channelLocked'\n                                    defaultMessage='Lock to this channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='channelLocked'\n                                    type='checkbox'\n                                    checked={this.state.channelLocked}\n                                    onChange={this.updateChannelLocked}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channelLocked.help'\n                                        defaultMessage='If set, the incoming webhook can only post to the channel selected above.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        { this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.username.help'\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        { this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.icon_url.help'\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/incoming_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveWebhook'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nexport default class AbstractOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp used to set the initial state\n        */\n        initialApp: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.image = new Image();\n        this.image.onload = this.imageLoaded;\n        this.state = this.getStateFromApp(this.props.initialApp || {});\n    }\n\n    getStateFromApp = (app) => {\n        return {\n            name: app.name || '',\n            description: app.description || '',\n            homepage: app.homepage || '',\n            icon_url: app.icon_url || '',\n            callbackUrls: app.callback_urls ? app.callback_urls.join('\\n') : '',\n            is_trusted: app.is_trusted || false,\n            has_icon: Boolean(app.icon_url),\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    imageLoaded = () => {\n        this.setState({\n            has_icon: true,\n            icon_url: this.refs.icon_url.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        if (!this.state.name) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.nameRequired'\n                        defaultMessage='Name for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.description) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.descriptionRequired'\n                        defaultMessage='Description for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.homepage) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.homepageRequired'\n                        defaultMessage='Homepage for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const app = {\n            name: this.state.name,\n            callback_urls: callbackUrls,\n            homepage: this.state.homepage,\n            description: this.state.description,\n            is_trusted: this.state.is_trusted,\n            icon_url: this.state.icon_url,\n        };\n\n        this.props.action(app).then(() => this.setState({saving: false}));\n    }\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    updateTrusted = (e) => {\n        this.setState({\n            is_trusted: e.target.value === 'true',\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateHomepage = (e) => {\n        this.setState({\n            homepage: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            has_icon: false,\n            icon_url: e.target.value,\n        });\n        this.image.src = e.target.value;\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    render() {\n        const headerToRender = this.props.header;\n        const footerToRender = this.props.footer;\n        const renderExtra = this.props.renderExtra;\n\n        let icon;\n        if (this.state.has_icon) {\n            icon = (\n                <div className='integration__icon'>\n                    <img\n                        alt={'integration icon'}\n                        src={this.state.icon_url}\n                    />\n                </div>\n            );\n        }\n\n        const trusted = (\n            <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='is_trusted'\n                    >\n                        <FormattedMessage\n                            id='installed_oauth_apps.trusted'\n                            defaultMessage='Is Trusted'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='true'\n                                name='is_trusted'\n                                checked={this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.yes'\n                                defaultMessage='Yes'\n                            />\n                        </label>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='false'\n                                name='is_trusted'\n                                checked={!this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.no'\n                                defaultMessage='No'\n                            />\n                        </label>\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_oauth_app.trusted.help'\n                                defaultMessage=\"When true, the OAuth 2.0 application is considered trusted by the Mattermost server and doesn't require the user to accept authorization. When false, an additional window will appear, asking the user to accept or deny the authorization.\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </SystemPermissionGate>\n        );\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps`}>\n                        <FormattedMessage\n                            id='installed_oauth_apps.header'\n                            defaultMessage='Installed OAuth2 Apps'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    {icon}\n                    <form className='form-horizontal'>\n                        {trusted}\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.name'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.name.help'\n                                        defaultMessage='Display name for your OAuth 2.0 application made of up to 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.description.help'\n                                        defaultMessage='Description for your OAuth 2.0 application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='homepage'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.homepage'\n                                    defaultMessage='Homepage'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='homepage'\n                                    type='url'\n                                    maxLength='256'\n                                    className='form-control'\n                                    value={this.state.homepage}\n                                    onChange={this.updateHomepage}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.homepage.help'\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='icon_url'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.iconUrl'\n                                    defaultMessage='Icon URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='icon_url'\n                                    ref='icon_url'\n                                    type='url'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.icon_url}\n                                    onChange={this.updateIconUrl}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.icon.help'\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.callbackUrls.help'\n                                        defaultMessage='The redirect URIs to which the service will redirect users after accepting or denying authorization of your application, and which will handle authorization codes or access tokens. Must be a valid URL and start with http:// or https://.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/oauth2-apps`}\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveOauthApp'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\n\nexport default class AbstractOutgoingWebhook extends React.Component {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The header text to render, has id and defaultMessage\n         */\n        header: PropTypes.object.isRequired,\n\n        /**\n         * The footer text to render, has id and defaultMessage\n         */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n         * The server error text after a failed action\n         */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n         * The hook used to set the initial state\n         */\n        initialHook: PropTypes.object,\n\n        /**\n         * The async function to run when the action button is pressed\n         */\n        action: PropTypes.func.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        let triggerWords = '';\n        if (hook.trigger_words) {\n            let i = 0;\n            for (i = 0; i < hook.trigger_words.length; i++) {\n                triggerWords += hook.trigger_words[i] + '\\n';\n            }\n        }\n\n        let callbackUrls = '';\n        if (hook.callback_urls) {\n            let i = 0;\n            for (i = 0; i < hook.callback_urls.length; i++) {\n                callbackUrls += hook.callback_urls[i] + '\\n';\n            }\n        }\n\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            contentType: hook.content_type || 'application/x-www-form-urlencoded',\n            channelId: hook.channel_id || '',\n            triggerWords,\n            triggerWhen: hook.trigger_when || 0,\n            callbackUrls,\n            saving: false,\n            clientError: null,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        const triggerWords = [];\n        if (this.state.triggerWords) {\n            for (let triggerWord of this.state.triggerWords.split('\\n')) {\n                triggerWord = triggerWord.trim();\n\n                if (triggerWord.length > 0) {\n                    triggerWords.push(triggerWord);\n                }\n            }\n        }\n\n        if (!this.state.channelId && triggerWords.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.triggerWordsOrChannelRequired'\n                        defaultMessage='A valid channel or a list of trigger words is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            team_id: this.props.team.id,\n            channel_id: this.state.channelId,\n            trigger_words: triggerWords,\n            trigger_when: parseInt(this.state.triggerWhen, 10),\n            callback_urls: callbackUrls,\n            display_name: this.state.displayName,\n            content_type: this.state.contentType,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateContentType = (e) => {\n        this.setState({\n            contentType: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateTriggerWords = (e) => {\n        this.setState({\n            triggerWords: e.target.value,\n        });\n    }\n\n    updateTriggerWhen = (e) => {\n        this.setState({\n            triggerWhen: e.target.value,\n        });\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        const contentTypeOption1 = 'application/x-www-form-urlencoded';\n        const contentTypeOption2 = 'application/json';\n\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n        var renderExtra = this.props.renderExtra;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks`}>\n                        <FormattedMessage\n                            id='installed_outgoing_webhooks.header'\n                            defaultMessage='Outgoing Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='contentType'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.content_Type'\n                                    defaultMessage='Content Type'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.contentType}\n                                    onChange={this.updateContentType}\n                                >\n                                    <option\n                                        value={contentTypeOption1}\n                                    >\n                                        {contentTypeOption1}\n                                    </option>\n                                    <option\n                                        value={contentTypeOption2}\n                                    >\n                                        {contentTypeOption2}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help1'\n                                        defaultMessage='Choose the content type by which the request will be sent.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help2'\n                                        defaultMessage='If application/x-www-form-urlencoded is chosen, the server will encode the parameters in a URL format in the request body.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help3'\n                                        defaultMessage='If application/json is chosen, the server will format the request body as JSON.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.channel.help'\n                                        defaultMessage='Public channel that delivers payload to webhook. Optional if at least one Trigger Word is specified.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWords'\n                                    defaultMessage='Trigger Words (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='triggerWords'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.triggerWords}\n                                    onChange={this.updateTriggerWords}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWords.help'\n                                        defaultMessage='Messages that start with one of the specified words will trigger the outgoing webhook. Optional if Channel is selected.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWordsTriggerWhen'\n                                    defaultMessage='Trigger When'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.triggerWhen}\n                                    onChange={this.updateTriggerWhen}\n                                >\n                                    <option\n                                        value='0'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenFullWord', 'First word matches a trigger word exactly')}\n                                    </option>\n                                    <option\n                                        value='1'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenStartsWith', 'First word starts with a trigger word')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWordsTriggerWhen.help'\n                                        defaultMessage='Choose when to trigger the outgoing webhook; if the first word of a message matches a Trigger Word exactly, or if it starts with a Trigger Word.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.callbackUrls.help'\n                                        defaultMessage='The URL that messages will be sent to. If the URL is private, add it as a {link}.'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://about.mattermost.com/default-allow-internal-connections-settings-documentation/'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_outgoing_webhook.callbackUrls.helpLinkText'\n                                                        defaultMessage='trusted internal connection'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.username.help'\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.icon_url.help'\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/outgoing_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveWebhook'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_command.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_command.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new command\n            */\n            addCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addCommand = async (command) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.addCommand(command);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands/confirm?type=commands&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addCommand}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addCommand} from 'mattermost-redux/actions/integrations';\n\nimport AddCommand from './add_command.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_incoming_webhook.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_incoming_webhook.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The request state for createIncomingHook action. Contains status and error\n        */\n        createIncomingHookRequest: PropTypes.object.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add a new incoming webhook\n            */\n            createIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addIncomingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.createIncomingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=incoming_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.createIncomingHookRequest.error) {\n            this.setState({serverError: this.props.createIncomingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.addIncomingHook}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddIncomingWebhook from './add_incoming_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        createIncomingHookRequest: state.requests.integrations.createIncomingHook,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: t('add_oauth_app.header'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('installed_oauth_apps.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('installed_oauth_apps.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The request state for addOAuthApp action. Contains status and error\n        */\n        addOAuthAppRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new OAuthApp\n            */\n            addOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOAuthApp = async (app) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.addOAuthApp(app);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=oauth2-apps&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.addOAuthAppRequest.error) {\n            this.setState({serverError: this.props.addOAuthAppRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addOAuthApp}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addOAuthApp} from 'mattermost-redux/actions/integrations';\n\nimport AddOAuthApp from './add_oauth_app.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        addOAuthAppRequest: state.requests.integrations.addOAuthApp,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_outgoing_webhook.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_outgoing_webhook.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The request state for createOutgoingHook action. Contains status and error\n         */\n        createOutgoingHookRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to add a new outgoing webhook\n             */\n            createOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOutgoingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.createOutgoingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=outgoing_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.createOutgoingHookRequest.error) {\n            this.setState({serverError: this.props.createOutgoingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addOutgoingHook}\n                serverError={this.state.serverError}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createOutgoingHook} from 'mattermost-redux/actions/integrations';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddOutgoingWebhook from './add_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    return {\n        createOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\nimport {General} from 'mattermost-redux/constants';\n\nimport BotDefaultIcon from 'images/bot_default_icon.png';\n\nimport {browserHistory} from 'utils/browser_history';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport SpinnerButton from 'components/spinner_button';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport FormError from 'components/form_error';\nimport {AcceptedProfileImageTypes, Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport * as FileUtils from 'utils/file_utils.jsx';\n\nconst roleOptionSystemAdmin = 'System Admin';\nconst roleOptionMember = 'Member';\n\nexport default class AddBot extends React.Component {\n    static propTypes = {\n\n        /**\n        *  Only used for routing since backstage is team based.\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Bot to edit (if editing)\n        */\n        bot: PropTypes.object,\n\n        /**\n        *  Roles of the bot to edit (if editing)\n        */\n        roles: PropTypes.string,\n\n        /**\n        * Maximum upload file size (for bot account profile picture)\n        */\n        maxFileSize: PropTypes.number.isRequired,\n\n        /**\n         * Editing user has the MANAGE_SYSTEM permission\n        */\n        editingUserHasManageSystem: PropTypes.bool.isRequired,\n\n        /**\n        * Bot to edit\n        */\n        actions: PropTypes.shape({\n\n            /**\n            * Creates a new bot account.\n            */\n            createBot: PropTypes.func.isRequired,\n\n            /**\n            * Patches an existing bot account.\n            */\n            patchBot: PropTypes.func.isRequired,\n\n            /**\n            * Uploads a user profile image\n            */\n            uploadProfileImage: PropTypes.func.isRequired,\n\n            /**\n            * Set profile image to default\n            */\n            setDefaultProfileImage: PropTypes.func.isRequired,\n\n            /**\n            * For creating default access token\n            */\n            createUserAccessToken: PropTypes.func.isRequired,\n\n            /**\n            * For creating setting bot to system admin or special posting permissions\n            */\n            updateUserRoles: PropTypes.func.isRequired,\n        }),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: '',\n            username: '',\n            displayName: '',\n            description: '',\n            adding: false,\n            image: BotDefaultIcon,\n            role: roleOptionMember,\n            postAll: false,\n            postChannels: false,\n        };\n\n        if (this.props.bot) {\n            this.state.username = this.props.bot.username;\n            this.state.displayName = this.props.bot.display_name;\n            this.state.description = this.props.bot.description;\n            this.state.role = UserUtils.isSystemAdmin(this.props.roles || '') ? roleOptionSystemAdmin : roleOptionMember;\n            this.state.postAll = UserUtils.hasPostAllRole(this.props.roles || '');\n            this.state.postChannels = UserUtils.hasPostAllPublicRole(this.props.roles || '');\n        }\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateRole = (e) => {\n        this.setState({\n            role: e.target.value,\n        });\n    }\n\n    updatePostAll = (e) => {\n        this.setState({\n            postAll: e.target.checked,\n        });\n    }\n\n    updatePostChannels = (e) => {\n        this.setState({\n            postChannels: e.target.checked,\n        });\n    }\n\n    updatePicture = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            const pictureFile = e.target.files[0];\n            this.previewBlob = URL.createObjectURL(pictureFile);\n\n            var reader = new FileReader();\n            reader.onload = (e2) => {\n                const orientation = FileUtils.getExifOrientation(e2.target.result);\n                const orientationStyles = FileUtils.getOrientationStyles(orientation);\n\n                this.setState({\n                    image: this.previewBlob,\n                    orientationStyles,\n                });\n            };\n            reader.readAsArrayBuffer(pictureFile);\n            e.target.value = null;\n            this.setState({pictureFile});\n        } else {\n            this.setState({pictureFile: null, image: null});\n        }\n    }\n\n    setDefault = () => {\n        this.setState({pictureFile: 'default', image: BotDefaultIcon});\n    }\n\n    updateRoles = async (data) => {\n        let roles = General.SYSTEM_USER_ROLE;\n\n        if (this.state.role === roleOptionSystemAdmin) {\n            roles += ' ' + General.SYSTEM_ADMIN_ROLE;\n        } else if (this.state.postAll) {\n            roles += ' ' + General.SYSTEM_POST_ALL_ROLE;\n        } else if (this.state.postChannels) {\n            roles += ' ' + General.SYSTEM_POST_ALL_PUBLIC_ROLE;\n        }\n\n        const rolesResult = await this.props.actions.updateUserRoles(data.user_id, roles);\n        if (rolesResult) {\n            return rolesResult.error;\n        }\n\n        return null;\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (this.state.adding) {\n            return;\n        }\n\n        if (!this.state.username || this.state.username.length < 3) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id='bots.manage.add.invalid_username'\n                        defaultMessage='Usernames have to begin with a lowercase letter and be 3-22 characters long. You can use lowercase letters, numbers, periods, dashes, and underscores.'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (this.state.pictureFile) {\n            if (!AcceptedProfileImageTypes.includes(this.state.pictureFile.type)) {\n                this.setState({\n                    error: (\n                        <FormattedMessage\n                            id='user.settings.general.validImage'\n                            defaultMessage='Only BMP, JPG or PNG images may be used for profile pictures'\n                        />\n                    ),\n                });\n            } else if (this.state.pictureFile.size > this.props.maxFileSize) {\n                this.setState({\n                    error: (\n                        <FormattedMessage\n                            id='user.settings.general.imageTooLarge'\n                            defaultMessage='Unable to upload profile image. File is too large.'\n                        />\n                    ),\n                });\n            }\n        }\n\n        this.setState({\n            adding: true,\n            error: '',\n        });\n\n        const bot = {\n            username: this.state.username.toLowerCase().trim(),\n            display_name: this.state.displayName,\n            description: this.state.description,\n        };\n\n        let data;\n        let error;\n        if (this.props.bot) {\n            const result = await this.props.actions.patchBot(this.props.bot.user_id, bot);\n            if (result) {\n                data = result.data;\n                error = result.error;\n            } else {\n                error = Utils.localizeMessage('bot.edit_failed', 'Failed to edit bot');\n            }\n\n            if (!error) {\n                if (this.state.pictureFile && this.state.pictureFile !== 'default') {\n                    const imageResult = await this.props.actions.uploadProfileImage(data.user_id, this.state.pictureFile);\n                    error = imageResult.error;\n                } else if (this.state.pictureFile && this.state.pictureFile === 'default') {\n                    await this.props.actions.setDefaultProfileImage(data.user_id);\n                }\n            }\n\n            if (!error && data) {\n                error = this.updateRoles(data);\n            }\n\n            if (data) {\n                browserHistory.push(`/${this.props.team.name}/integrations/bots`);\n                return;\n            }\n        } else {\n            const usernameError = Utils.isValidBotUsername(bot.username);\n            if (usernameError) {\n                this.setState({\n                    adding: false,\n                    error: usernameError,\n                });\n                return;\n            }\n\n            const result = await this.props.actions.createBot(bot);\n            if (result) {\n                data = result.data;\n                error = result.error;\n            } else {\n                error = Utils.localizeMessage('bot.create_failed', 'Failed to create bot');\n            }\n\n            let token = '';\n            if (!error) {\n                if (this.state.pictureFile && this.state.pictureFile !== 'default') {\n                    await this.props.actions.uploadProfileImage(data.user_id, this.state.pictureFile);\n                } else {\n                    await this.props.actions.setDefaultProfileImage(data.user_id);\n                }\n                const tokenResult = await this.props.actions.createUserAccessToken(data.user_id,\n                    Utils.localizeMessage('bot.token.default.description', 'Default Token')\n                );\n\n                // On error just skip the confirmation because we have a bot without a token.\n                if (!tokenResult || tokenResult.error) {\n                    browserHistory.push(`/${this.props.team.name}/integrations/bots`);\n                    return;\n                }\n\n                token = tokenResult.data.token;\n            }\n\n            if (!error && data) {\n                error = this.updateRoles(data);\n            }\n\n            if (data) {\n                browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=bots&id=${data.user_id}&token=${token}`);\n                return;\n            }\n        }\n\n        this.setState({\n            adding: false,\n        });\n\n        if (error) {\n            this.setState({\n                error: error.message,\n            });\n        }\n    }\n\n    render() {\n        let subtitle = (\n            <FormattedMessage\n                id='bots.manage.add'\n                defaultMessage='Add'\n            />\n        );\n        let buttonText = (\n            <FormattedMessage\n                id='bots.manage.add.create'\n                defaultMessage='Create Bot Account'\n            />\n        );\n        let buttonActiveText = (\n            <FormattedMessage\n                id='bots.manage.add.creating'\n                defaultMessage='Creating...'\n            />\n        );\n\n        // If we are editing\n        if (this.props.bot) {\n            subtitle = (\n                <FormattedMessage\n                    id='bots.manage.edit'\n                    defaultMessage='Edit'\n                />\n            );\n            buttonText = (\n                <FormattedMessage\n                    id='bots.manage.edit.title'\n                    defaultMessage='Update'\n                />\n            );\n            buttonActiveText = (\n                <FormattedMessage\n                    id='bots.manage.edit.editing'\n                    defaultMessage='Updating...'\n                />\n            );\n        }\n\n        let imageURL = '';\n        let removeImageIcon = (\n            <OverlayTrigger\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='right'\n                overlay={(\n                    <Tooltip id='removeIcon'>\n                        <FormattedMessage\n                            id='bot.remove_profile_picture'\n                            defaultMessage='Remove Bot Icon'\n                        />\n                    </Tooltip>\n                )}\n            >\n                <a\n                    className={'bot-profile__remove'}\n                    onClick={this.setDefault}\n                >\n                    <span>{'×'}</span>\n                </a>\n            </OverlayTrigger>\n        );\n        let imageStyles = null;\n        if (this.props.bot && !this.state.pictureFile) {\n            imageURL = Utils.imageURLForUser(this.props.bot.user_id);\n        } else {\n            imageURL = this.state.image;\n            imageStyles = this.state.orientationStyles;\n            if (this.state.image === BotDefaultIcon) {\n                removeImageIcon = null;\n            }\n        }\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/bots`}>\n                        <FormattedMessage\n                            id='bots.manage.header'\n                            defaultMessage='Bot Accounts'\n                        />\n                    </Link>\n                    {subtitle}\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.username'\n                                    defaultMessage='Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='username'\n                                    type='text'\n                                    maxLength='22'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.username.help'\n                                        defaultMessage='You can use lowercase letters, numbers, periods, dashes, and underscores.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='boticon'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.icon'\n                                    defaultMessage='Bot Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div className={'bot-img-container'}>\n                                    <img\n                                        className={'bot-img'}\n                                        alt={'bot image'}\n                                        src={imageURL}\n                                        style={imageStyles}\n                                    />\n                                    {removeImageIcon}\n                                </div>\n                                <div\n                                    className='btn btn-sm btn-primary btn-file sel-btn'\n                                >\n                                    <FormattedMessage\n                                        id='bots.image.upload'\n                                        defaultMessage='Upload an image'\n                                    />\n                                    <input\n                                        accept='.jpg,.png,.bmp'\n                                        type='file'\n                                        onChange={this.updatePicture}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.displayName'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.display_name.help'\n                                        defaultMessage={'(Optional) You can choose to display your bot\\'s full name rather than its username.'}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.description.help'\n                                        defaultMessage='(Optional) Let others know what this bot does.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='role'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.role'\n                                    defaultMessage='Role'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.role}\n                                    disabled={!this.props.editingUserHasManageSystem}\n                                    onChange={this.updateRole}\n                                >\n                                    <option\n                                        value={roleOptionMember}\n                                    >\n                                        {roleOptionMember}\n                                    </option>\n                                    <option\n                                        value={roleOptionSystemAdmin}\n                                    >\n                                        {roleOptionSystemAdmin}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.role.help'\n                                        defaultMessage='Choose what role the bot should have.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='row bot-profile__section'>\n                            <div className='col-md-5 col-sm-8 col-sm-offset-4'>\n                                <FormattedMarkdownMessage\n                                    id='admin.manage_roles.additionalRoles'\n                                    defaultMessage='Select additional permissions for the account. [Read more about roles and permissions](!https://about.mattermost.com/default-permissions).'\n                                />\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='postAll'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.post_all'\n                                    defaultMessage='post:all'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <div className='checkbox no-padding'>\n                                    <label htmlFor='postAll'>\n                                        <input\n                                            id='postAll'\n                                            type='checkbox'\n                                            checked={this.state.postAll || this.state.role === roleOptionSystemAdmin}\n                                            onChange={this.updatePostAll}\n                                            disabled={!this.props.editingUserHasManageSystem || this.state.role === roleOptionSystemAdmin}\n                                        />\n                                        <FormattedMessage\n                                            id='bot.add.post_all.enabled'\n                                            defaultMessage='Enabled'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.post_all.help'\n                                        defaultMessage='Bot will have access to post to all Mattermost channels including direct messages.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='postChannels'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.post_channels'\n                                    defaultMessage='post:channels'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <div className='checkbox no-padding'>\n                                    <label htmlFor='postChannels'>\n                                        <input\n                                            id='postChannels'\n                                            type='checkbox'\n                                            checked={this.state.postChannels || this.state.role === roleOptionSystemAdmin || this.state.postAll}\n                                            onChange={this.updatePostChannels}\n                                            disabled={!this.props.editingUserHasManageSystem || this.state.role === roleOptionSystemAdmin || this.state.postAll}\n                                        />\n                                        <FormattedMessage\n                                            id='bot.add.post_channels.enabled'\n                                            defaultMessage='Enabled'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.post_channels.help'\n                                        defaultMessage='Bot will have access to post to all Mattermost public channels.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.state.error]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/bots`}\n                            >\n                                <FormattedMessage\n                                    id='bots.manage.add.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.adding}\n                                spinningText={buttonActiveText}\n                                onClick={this.handleSubmit}\n                                id='saveBot'\n                            >\n                                {buttonText}\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {updateUserRoles, uploadProfileImage, setDefaultProfileImage, createUserAccessToken} from 'mattermost-redux/actions/users';\nimport {createBot, patchBot} from 'mattermost-redux/actions/bots';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getUsers} from 'mattermost-redux/selectors/entities/common';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport AddBot from './add_bot.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const botId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const bots = getBotAccounts(state);\n    const bot = bots ? bots[botId] : null;\n    const user = bot ? getUsers(state)[bot.user_id] : null;\n    const roles = user ? user.roles : null;\n    return {\n        maxFileSize: parseInt(config.MaxFileSize, 10),\n        bot,\n        roles,\n        editingUserHasManageSystem: haveISystemPermission(state, {permission: Permissions.MANAGE_SYSTEM}),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createBot,\n            patchBot,\n            uploadProfileImage,\n            setDefaultProfileImage,\n            createUserAccessToken,\n            updateUserRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBot);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport Markdown from 'components/markdown';\nimport SaveButton from 'components/save_button';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\nimport * as Utils from 'utils/utils.jsx';\n\nexport function matchesFilter(bot, filter, owner) {\n    if (!filter) {\n        return true;\n    }\n    const username = bot.username || '';\n    const description = bot.description || '';\n    const displayName = bot.display_name || '';\n\n    let ownerUsername = 'plugin';\n    if (owner && owner.username) {\n        ownerUsername = owner.username;\n    }\n    return !(username.toLowerCase().indexOf(filter) === -1 &&\n        displayName.toLowerCase().indexOf(filter) === -1 &&\n        description.toLowerCase().indexOf(filter) === -1 &&\n        ownerUsername.toLowerCase().indexOf(filter) === -1);\n}\n\nexport default class Bot extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Bot that we are displaying\n        */\n        bot: PropTypes.object.isRequired,\n\n        /**\n        * Owner of the bot we are displaying\n        */\n        owner: PropTypes.object,\n\n        /**\n        * The access tokens of the bot user\n        */\n        accessTokens: PropTypes.object.isRequired,\n\n        /**\n        * String used for filtering bot items\n        */\n        filter: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n            * Disable a bot\n            */\n            disableBot: PropTypes.func.isRequired,\n\n            /**\n            * Enable a bot\n            */\n            enableBot: PropTypes.func.isRequired,\n\n            /**\n            * Access token managment\n            */\n            createUserAccessToken: PropTypes.func.isRequired,\n            revokeUserAccessToken: PropTypes.func.isRequired,\n            enableUserAccessToken: PropTypes.func.isRequired,\n            disableUserAccessToken: PropTypes.func.isRequired,\n        }),\n\n        /**\n        *  Only used for routing since backstage is team based.\n        */\n        team: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            confirmingId: '',\n            creatingTokenState: 'CLOSED',\n            token: {},\n            error: '',\n        };\n    }\n\n    enableBot = () => {\n        this.props.actions.enableBot(this.props.bot.user_id);\n    }\n\n    disableBot = () => {\n        this.props.actions.disableBot(this.props.bot.user_id);\n    }\n\n    enableUserAccessToken = (id) => {\n        this.props.actions.enableUserAccessToken(id);\n    }\n\n    disableUserAccessToken = (id) => {\n        this.props.actions.disableUserAccessToken(id);\n    }\n\n    confirmRevokeToken = (id) => {\n        this.setState({confirmingId: id});\n    }\n\n    revokeTokenConfirmed = () => {\n        this.props.actions.revokeUserAccessToken(this.state.confirmingId);\n        this.closeConfirm();\n    }\n\n    closeConfirm = () => {\n        this.setState({confirmingId: ''});\n    }\n\n    openCreateToken = () => {\n        this.setState({\n            creatingTokenState: 'OPEN',\n            token: {\n                description: '',\n            },\n        });\n    }\n\n    closeCreateToken = () => {\n        this.setState({\n            creatingTokenState: 'CLOSED',\n            token: {\n                description: '',\n            },\n        });\n    }\n\n    handleUpdateDescription = (e) => {\n        this.setState({\n            token: Object.assign({}, this.state.token, {description: e.target.value}),\n        });\n    }\n\n    handleCreateToken = async (e) => {\n        e.preventDefault();\n\n        if (this.state.token.description === '') {\n            this.setState({error: (\n                <FormattedMessage\n                    id='bot.token.error.description'\n                    defaultMessage='Please enter a description.'\n                />\n            )});\n            return;\n        }\n\n        const {data, error} = await this.props.actions.createUserAccessToken(this.props.bot.user_id, this.state.token.description);\n        if (data) {\n            this.setState({creatingTokenState: 'CREATED', token: data});\n        } else if (error) {\n            this.setState({error: error.message});\n        }\n    }\n\n    render() {\n        const username = this.props.bot.username || '';\n        const description = this.props.bot.description || '';\n        const displayName = this.props.bot.display_name || '';\n\n        let ownerUsername = 'plugin';\n        if (this.props.owner && this.props.owner.username) {\n            ownerUsername = this.props.owner.username;\n        }\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        if (!matchesFilter(this.props.bot, filter, this.props.owner)) {\n            return null;\n        }\n\n        const tokenList = [];\n        Object.values(this.props.accessTokens).forEach((token) => {\n            let activeLink;\n            let disableClass = '';\n            let disabledText;\n\n            if (token.is_active) {\n                activeLink = (\n                    <a\n                        name={token.id + '_deactivate'}\n                        href='#'\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.disableUserAccessToken(token.id);\n                        }}\n                    >\n                        <FormattedMessage\n                            id='user.settings.tokens.deactivate'\n                            defaultMessage='Disable'\n                        />\n                    </a>);\n            } else {\n                disableClass = 'light';\n                disabledText = (\n                    <span className='margin-right light'>\n                        <FormattedMessage\n                            id='user.settings.tokens.deactivatedWarning'\n                            defaultMessage='(Disabled)'\n                        />\n                    </span>\n                );\n                activeLink = (\n                    <a\n                        name={token.id + '_activate'}\n                        href='#'\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.enableUserAccessToken(token.id);\n                        }}\n                    >\n                        <FormattedMessage\n                            id='user.settings.tokens.activate'\n                            defaultMessage='Enable'\n                        />\n                    </a>\n                );\n            }\n\n            tokenList.push(\n                <div\n                    key={token.id}\n                    className='bot-list__item'\n                >\n                    <div className='item-details__row d-flex justify-content-between'>\n                        <div className={disableClass}>\n                            <div className='whitespace--nowrap overflow--ellipsis'>\n                                <b>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.tokenDesc'\n                                        defaultMessage='Token Description: '\n                                    />\n                                </b>\n                                {token.description}\n                            </div>\n                            <div className='setting-box__token-id whitespace--nowrap overflow--ellipsis'>\n                                <b>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.tokenId'\n                                        defaultMessage='Token ID: '\n                                    />\n                                </b>\n                                {token.id}\n                            </div>\n                        </div>\n                        <div>\n                            {disabledText}\n                            {activeLink}\n                            {' - '}\n                            <a\n                                name={token.id + '_delete'}\n                                href='#'\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    this.confirmRevokeToken(token.id);\n                                }}\n                            >\n                                <FormattedMessage\n                                    id='user.settings.tokens.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n\n        let options;\n        if (ownerUsername !== 'plugin') {\n            options = (\n                <div className='item-actions'>\n                    <button\n                        id='createToken'\n                        className='style--none color--link'\n                        onClick={this.openCreateToken}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.create_token'\n                            defaultMessage='Create New Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/bots/edit?id=${this.props.bot.user_id}`}>\n                        <FormattedMessage\n                            id='bots.manage.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <button\n                        className='style--none color--link'\n                        onClick={this.disableBot}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.disable'\n                            defaultMessage='Disable'\n                        />\n                    </button>\n                </div>\n            );\n        }\n        if (this.props.bot.delete_at !== 0) {\n            options = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.enableBot}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.enable'\n                            defaultMessage='Enable'\n                        />\n                    </button>\n                </div>\n            );\n        }\n\n        if (this.state.creatingTokenState === 'OPEN') {\n            tokenList.push(\n                <div\n                    key={'create'}\n                    className='bot-list__item'\n                >\n                    <div key={'create'}>\n                        <form\n                            className='form-horizontal'\n                            onSubmit={this.handleCreateToken}\n                        >\n                            <div className='row'>\n                                <label className='col-sm-auto control-label'>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.name'\n                                        defaultMessage='Token Description: '\n                                    />\n                                </label>\n                                <div className='col-sm-4'>\n                                    <input\n                                        autoFocus={true}\n                                        className='form-control form-sm'\n                                        type='text'\n                                        maxLength={64}\n                                        value={this.state.token.description}\n                                        onChange={this.handleUpdateDescription}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <div className='padding-top padding-bottom'>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.nameHelp'\n                                        defaultMessage='Enter a description for your token to remember what it does.'\n                                    />\n                                </div>\n                                <label\n                                    id='clientError'\n                                    className='has-error is-empty'\n                                >\n                                    {this.state.error}\n                                </label>\n                                <div className='margin-top'>\n                                    <SaveButton\n                                        btnClass='btn-sm btn-primary'\n                                        savingMessage={\n                                            <FormattedMessage\n                                                id='user.settings.tokens.save'\n                                                defaultMessage='Save'\n                                            />\n                                        }\n                                        saving={false}\n                                    />\n                                    <button\n                                        className='btn btn-sm btn-link'\n                                        onClick={this.closeCreateToken}\n                                    >\n                                        <FormattedMessage\n                                            id='user.settings.tokens.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            );\n        } else if (this.state.creatingTokenState === 'CREATED') {\n            tokenList.push(\n                <div\n                    key={'created'}\n                    className='bot-list__item alert alert-warning'\n                >\n                    <div className='margin-bottom'>\n                        <WarningIcon additionalClassName='margin-right'/>\n                        <FormattedMessage\n                            id='user.settings.tokens.copy'\n                            defaultMessage=\"Please copy the access token below. You won't be able to see it again!\"\n                        />\n                    </div>\n                    <div className='whitespace--nowrap overflow--ellipsis'>\n                        <FormattedMessage\n                            id='user.settings.tokens.name'\n                            defaultMessage='Token Description: '\n                        />\n                        {this.state.token.description}\n                    </div>\n                    <div className='whitespace--nowrap overflow--ellipsis'>\n                        <FormattedMessage\n                            id='user.settings.tokens.id'\n                            defaultMessage='Token ID: '\n                        />\n                        {this.state.token.id}\n                    </div>\n                    <strong className='word-break--all'>\n                        <FormattedMessage\n                            id='user.settings.tokens.token'\n                            defaultMessage='Access Token: '\n                        />\n                        {this.state.token.token}\n                    </strong>\n                    <div className='margin-top'>\n                        <button\n                            className='btn btn-sm btn-primary'\n                            onClick={this.closeCreateToken}\n                        >\n                            <FormattedMessage\n                                id='bot.create_token.close'\n                                defaultMessage='Close'\n                            />\n                        </button>\n                    </div>\n                </div>\n            );\n        }\n\n        const imageURL = Utils.imageURLForUser(this.props.bot.user_id);\n\n        return (\n            <div className='backstage-list__item'>\n                <div className={'bot-list-img-container'}>\n                    <img\n                        className={'bot-list-img'}\n                        alt={'bot image'}\n                        src={imageURL}\n                    />\n                </div>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {displayName + ' (@' + username + ')'}\n                        </strong>\n                        {options}\n                    </div>\n                    <div className='bot-details__description'>\n                        <Markdown message={description}/>\n                    </div>\n                    <div className='light small'>\n                        <FormattedMessage\n                            id='bots.managed_by'\n                            defaultMessage='Managed by '\n                        />\n                        {ownerUsername}\n                    </div>\n                    <div className='bot-list is-empty'>\n                        {tokenList}\n                    </div>\n                </div>\n                <ConfirmModal\n                    title={\n                        <FormattedMessage\n                            id='bots.token.delete'\n                            defaultMessage='Delete Token'\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='bots.token.confirm_text'\n                            defaultMessage='Are you sure you want to delete the token?'\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='bots.token.confirm'\n                            defaultMessage='Delete'\n                        />\n                    }\n                    show={this.state.confirmingId !== ''}\n                    onConfirm={this.revokeTokenConfirmed}\n                    onCancel={this.closeConfirm}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {getSiteURL} from 'utils/url';\n\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport Constants from 'utils/constants';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport Bot, {matchesFilter} from './bot.jsx';\n\nexport default class Bots extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Map from botUserId to bot.\n        */\n        bots: PropTypes.object.isRequired,\n\n        /**\n        *  Map from botUserId to accessTokens.\n        */\n        accessTokens: PropTypes.object.isRequired,\n\n        /**\n        *  Map from botUserId to owner.\n        */\n        owners: PropTypes.object.isRequired,\n\n        createBots: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n            * Ensure we have bot accounts\n            */\n            loadBots: PropTypes.func.isRequired,\n\n            /**\n            * Load access tokens for bot accounts\n            */\n            getUserAccessTokensForUser: PropTypes.func.isRequired,\n\n            /**\n            * Access token managment\n            */\n            createUserAccessToken: PropTypes.func.isRequired,\n            revokeUserAccessToken: PropTypes.func.isRequired,\n            enableUserAccessToken: PropTypes.func.isRequired,\n            disableUserAccessToken: PropTypes.func.isRequired,\n\n            /**\n            * Load owner of bot account\n            */\n            getUser: PropTypes.func.isRequired,\n\n            /**\n            * Disable a bot\n            */\n            disableBot: PropTypes.func.isRequired,\n\n            /**\n            * Enable a bot\n            */\n            enableBot: PropTypes.func.isRequired,\n        }),\n\n        /**\n        *  Only used for routing since backstage is team based.\n        */\n        team: PropTypes.object.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.loadBots(\n            Constants.Integrations.START_PAGE_NUM,\n            Constants.Integrations.PAGE_SIZE\n        ).then(\n            (result) => {\n                if (result.data) {\n                    const promises = [];\n\n                    for (const bot of result.data) {\n                        // We don't need to wait for this and we need to accept failure in the case where bot.owner_id is a plugin id\n                        this.props.actions.getUser(bot.owner_id);\n\n                        // We want to wait for these.\n                        promises.push(this.props.actions.getUser(bot.user_id));\n                        promises.push(this.props.actions.getUserAccessTokensForUser(bot.user_id));\n                    }\n\n                    Promise.all(promises).then(() => {\n                        this.setState({loading: false});\n                    });\n                }\n            }\n        );\n    }\n\n    DisabledSection(props) {\n        if (!props.hasDisabled) {\n            return null;\n        }\n        const botsToDisplay = React.Children.map(props.disabledBots, (child) => {\n            return React.cloneElement(child, {filter: props.filter});\n        });\n        return (\n            <React.Fragment>\n                <div className='bot-disabled'>\n                    <FormattedMessage\n                        id='bots.disabled'\n                        defaultMessage='Disabled'\n                    />\n                </div>\n                <div className='bot-list__disabled'>\n                    {botsToDisplay}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    EnabledSection(props) {\n        const botsToDisplay = React.Children.map(props.enabledBots, (child) => {\n            return React.cloneElement(child, {filter: props.filter});\n        });\n        return (\n            <div>\n                {botsToDisplay}\n            </div>\n        );\n    }\n\n    botToJSX = (bot) => {\n        return (\n            <Bot\n                key={bot.user_id}\n                bot={bot}\n                owner={this.props.owners[bot.user_id]}\n                accessTokens={this.props.accessTokens[bot.user_id] || {}}\n                actions={this.props.actions}\n                team={this.props.team}\n            />\n        );\n    };\n\n    bots = (filter) => {\n        const bots = Object.values(this.props.bots).sort((a, b) => a.username.localeCompare(b.username));\n        const match = (bot) => matchesFilter(bot, filter, this.props.owners[bot.user_id]);\n        const enabledBots = bots.filter((bot) => bot.delete_at === 0).filter(match).map(this.botToJSX);\n        const disabledBots = bots.filter((bot) => bot.delete_at > 0).filter(match).map(this.botToJSX);\n        const sections = (\n            <div key='sections'>\n                <this.EnabledSection\n                    enabledBots={enabledBots}\n                />\n                <this.DisabledSection\n                    hasDisabled={disabledBots.length > 0}\n                    disabledBots={disabledBots}\n                />\n            </div>\n        );\n\n        return [sections, enabledBots.length > 0 || disabledBots.length > 0];\n    }\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='bots.manage.header'\n                        defaultMessage='Bot Accounts'\n                    />\n                }\n                addText={this.props.createBots &&\n                    <FormattedMessage\n                        id='bots.manage.add'\n                        defaultMessage='Add Bot Account'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/bots/add'}\n                addButtonId='addBotAccount'\n                emptyText={\n                    <FormattedMessage\n                        id='bots.manage.empty'\n                        defaultMessage='No bot accounts found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='bots.manage.emptySearch'\n                        defaultMessage='No bot accounts match **{searchTerm}**'\n                    />\n                }\n                helpText={\n                    <React.Fragment>\n                        <FormattedMessage\n                            id='bots.manage.help1'\n                            defaultMessage='Use {botAccounts} to integrate with Mattermost through plugins or the API. Bot accounts are available to everyone on your server. '\n                            values={{\n                                botAccounts: (\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://mattermost.com/pl/default-bot-accounts'\n                                    >\n                                        <FormattedMessage\n                                            id='bots.manage.bot_accounts'\n                                            defaultMessage='Bot Accounts'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                        <FormattedMarkdownMessage\n                            id='bots.manage.help2'\n                            defaultMessage={'Enable bot account creation in the [System Console]({siteURL}/admin_console/integrations/bot_accounts).'}\n                            values={{\n                                siteURL: getSiteURL(),\n                            }}\n                        />\n                    </React.Fragment>\n                }\n                searchPlaceholder={Utils.localizeMessage('bots.manage.search', 'Search Bot Accounts')}\n                loading={this.state.loading}\n            >\n                {this.bots}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {loadBots, disableBot, enableBot} from 'mattermost-redux/actions/bots';\nimport {createUserAccessToken, revokeUserAccessToken, enableUserAccessToken, disableUserAccessToken, getUserAccessTokensForUser, getUser} from 'mattermost-redux/actions/users';\nimport * as UserSelectors from 'mattermost-redux/selectors/entities/users';\n\nimport Bots from './bots.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const createBots = config.EnableBotAccountCreation === 'true';\n    const bots = getBotAccounts(state);\n    const owners = Object.values(bots).\n        reduce((result, bot) => {\n            result[bot.user_id] = UserSelectors.getUser(state, bot.owner_id);\n            return result;\n        }, {});\n    return {\n        createBots,\n        bots,\n        accessTokens: state.entities.admin.userAccessTokensByUser,\n        owners,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadBots,\n            getUserAccessTokensForUser,\n            createUserAccessToken,\n            revokeUserAccessToken,\n            enableUserAccessToken,\n            disableUserAccessToken,\n            getUser,\n            disableBot,\n            enableBot,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bots);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport InstalledCommands from 'components/integrations/installed_commands';\nimport AddCommand from 'components/integrations/add_command';\nimport EditCommand from 'components/integrations/edit_command';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nconst CommandRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class CommandsContainer extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data needed to pass into child components\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user data needed to pass into child components\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Object from react-router\n        */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            loadCommandsAndProfilesForTeam: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.loadCommandsAndProfilesForTeam(this.props.team.id).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    render() {\n        const extraProps = {\n            loading: this.state.loading,\n            commands: this.props.commands || [],\n            users: this.props.users,\n            team: this.props.team,\n            user: this.props.user,\n        };\n        return (\n            <div>\n                <Switch>\n                    <Route\n                        exact={true}\n                        path={`${this.props.match.url}/`}\n                        render={() => (<Redirect to={`${this.props.match.url}/installed`}/>)}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/installed`}\n                        component={InstalledCommands}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/add`}\n                        component={AddCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/edit`}\n                        component={EditCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/confirm`}\n                        component={ConfirmIntegration}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadCommandsAndProfilesForTeam} from 'actions/integration_actions';\n\nimport CommandsContainer from './commands_container.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commands: Object.values(getCommands(state)),\n        users: getUsers(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadCommandsAndProfilesForTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandsContainer);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {Constants, ErrorPageTypes} from 'utils/constants.jsx';\nimport CopyText from 'components/copy_text';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport {getSiteURL} from 'utils/url';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class ConfirmIntegration extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            location: PropTypes.object,\n            commands: PropTypes.object,\n            oauthApps: PropTypes.object,\n            incomingHooks: PropTypes.object,\n            outgoingHooks: PropTypes.object,\n            bots: PropTypes.object,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (new URLSearchParams(this.props.location.search)).get('type'),\n            id: (new URLSearchParams(this.props.location.search)).get('id'),\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('keypress', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keypress', this.handleKeyPress);\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            browserHistory.push('/' + this.props.team.name + '/integrations/' + this.state.type);\n        }\n    }\n\n    render() {\n        let headerText = null;\n        let helpText = null;\n        let tokenText = null;\n\n        const command = this.props.commands[this.state.id];\n        const incomingHook = this.props.incomingHooks[this.state.id];\n        const outgoingHook = this.props.outgoingHooks[this.state.id];\n        const oauthApp = this.props.oauthApps[this.state.id];\n        const bot = this.props.bots[this.state.id];\n\n        if (this.state.type === Constants.Integrations.COMMAND && command) {\n            const commandToken = command.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_commands.header'}\n                    defaultMessage='Slash Commands'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_command.doneHelp'\n                        defaultMessage='Your slash command has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see [documentation](!https://docs.mattermost.com/developer/slash-commands.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_command.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: commandToken,\n                        }}\n                    />\n                    <CopyText\n                        value={commandToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.INCOMING_WEBHOOK && incomingHook) {\n            const incomingHookToken = getSiteURL() + '/hooks/' + incomingHook.id;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_incoming_webhooks.header'}\n                    defaultMessage='Incoming Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.doneHelp'\n                        defaultMessage='Your incoming webhook has been set up. Please send data to the following URL (see [documentation](!https://docs.mattermost.com/developer/webhooks-incoming.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.url'\n                        defaultMessage='**URL**: {url}'\n                        values={{\n                            url: '`' + incomingHookToken + '`',\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={incomingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OUTGOING_WEBHOOK && outgoingHook) {\n            const outgoingHookToken = outgoingHook.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_outgoing_webhooks.header'}\n                    defaultMessage='Outgoing Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.doneHelp'\n                        defaultMessage='Your outgoing webhook has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see [documentation](!https://docs.mattermost.com/developer/webhooks-outgoing.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: outgoingHookToken,\n                        }}\n                    />\n                    <CopyText\n                        value={outgoingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OAUTH_APP && oauthApp) {\n            const oauthAppToken = oauthApp.id;\n            const oauthAppSecret = oauthApp.client_secret;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_oauth_apps.header'}\n                    defaultMessage='OAuth 2.0 Applications'\n                />\n            );\n\n            helpText = [];\n            helpText.push(\n                <p key='add_oauth_app.doneHelp'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.doneHelp'\n                        defaultMessage='Your OAuth 2.0 application has been set up. Please use the following Client ID and Client Secret when requesting authorization for your application (see [documentation](!https://docs.mattermost.com/developer/oauth-2-0-applications.html) for further details).'\n                    />\n                </p>\n            );\n            helpText.push(\n                <p key='add_oauth_app.clientId'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientId'\n                        defaultMessage='**Client ID**: {id}'\n                        values={{\n                            id: oauthAppToken,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_id'\n                        defaultMessage='Copy Client Id'\n                        value={oauthAppToken}\n                    />\n                    <br/>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientSecret'\n                        defaultMessage='**Client Secret**: {secret}'\n                        values={{\n                            secret: oauthAppSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={oauthAppSecret}\n                    />\n                </p>\n            );\n\n            helpText.push(\n                <p key='add_oauth_app.doneUrlHelp'>\n                    <FormattedMessage\n                        id='add_oauth_app.doneUrlHelp'\n                        defaultMessage='The following are your authorized redirect URL(s).'\n                    />\n                </p>\n            );\n\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.url'\n                        defaultMessage='**URL(s)**: {url}'\n                        values={{\n                            url: oauthApp.callback_urls,\n                        }}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.BOT && bot) {\n            const botToken = (new URLSearchParams(this.props.location.search)).get('token');\n\n            headerText = (\n                <FormattedMessage\n                    id='bots.manage.header'\n                    defaultMessage='Bot Accounts'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='bots.manage.created.text'\n                        defaultMessage='Your bot account **{botname}** has been created successfully. Please use the following access token to connect to the bot (see [documentation](https://mattermost.com/pl/default-bot-accounts) for further details).'\n                        values={{\n                            botname: bot.display_name || bot.username,\n                        }}\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: botToken,\n                        }}\n                    />\n                    <CopyText\n                        value={botToken}\n                    />\n                    <br/>\n                    <br/>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token.message'\n                        defaultMessage='Make sure to add this bot account to teams and channels you want it to interact in. See [documentation](https://mattermost.com/pl/default-bot-accounts) to learn more.'\n                    />\n                </p>\n            );\n        } else {\n            browserHistory.replace(`/error?type=${ErrorPageTypes.PAGE_NOT_FOUND}`);\n            return '';\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/' + this.state.type}>\n                        {headerText}\n                    </Link>\n                    <FormattedMessage\n                        id='integrations.add'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form backstage-form__confirmation'>\n                    <h4\n                        className='backstage-form__title'\n                        id='formTitle'\n                    >\n                        <FormattedMessage\n                            id='integrations.successful'\n                            defaultMessage='Setup Successful'\n                        />\n                    </h4>\n                    {helpText}\n                    {tokenText}\n                    <div className='backstage-form__footer'>\n                        <Link\n                            className='btn btn-primary'\n                            type='submit'\n                            to={'/' + this.props.team.name + '/integrations/' + this.state.type}\n                            id='doneButton'\n                        >\n                            <FormattedMessage\n                                id='integrations.done'\n                                defaultMessage='Done'\n                            />\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCommands, getOAuthApps, getIncomingHooks, getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\n\nimport ConfirmIntegration from './confirm_integration.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        commands: getCommands(state),\n        oauthApps: getOAuthApps(state),\n        incomingHooks: getIncomingHooks(state),\n        outgoingHooks: getOutgoingHooks(state),\n        bots: getBotAccounts(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ConfirmIntegration);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nexport default class DeleteIntegration extends DeleteModalTrigger {\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='installed_integrations.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.title'\n                defaultMessage='Delete Integration'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <WarningIcon additionalClassName='fa-margin--right'/>\n                <FormattedMessage\n                    id={this.props.messageId}\n                    defaultMessage='This action permanently deletes the integration and breaks any integrations using it. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n\nDeleteIntegration.propTypes = {\n    messageId: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport LoadingScreen from 'components/loading_screen';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('edit_command.update'), defaultMessage: 'Update'};\nconst LOADING = {id: t('edit_command.updating'), defaultMessage: 'Updating...'};\n\nexport default class EditCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the command to edit\n        */\n        commandId: PropTypes.string.isRequired,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            getCustomTeamCommands: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit command\n            */\n            editCommand: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            originalCommand: null,\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\n                () => {\n                    this.setState({\n                        originalCommand: Object.values(this.props.commands).filter((command) => command.id === this.props.commandId)[0],\n                    });\n                }\n            );\n        }\n    }\n\n    editCommand = async (command) => {\n        this.newCommand = command;\n\n        if (this.state.originalCommand.id) {\n            command.id = this.state.originalCommand.id;\n        }\n\n        if (this.state.originalCommand.url !== this.newCommand.url ||\n            this.state.originalCommand.trigger !== this.newCommand.trigger ||\n            this.state.originalCommand.method !== this.newCommand.method) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitCommand();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitCommand = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editCommand(this.newCommand);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_command.confirm'\n                defaultMessage='Edit Slash Command'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_command.question'\n                defaultMessage='Your changes may break the existing slash command. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitCommand}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.state.originalCommand) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editCommand}\n                serverError={this.state.serverError}\n                initialCommand={this.state.originalCommand}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {editCommand, getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditCommand from './edit_command.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const commandId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commandId,\n        commands: getCommands(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomTeamCommands,\n            editCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('update_incoming_webhook.update'), defaultMessage: 'Update'};\nconst LOADING = {id: t('update_incoming_webhook.updating'), defaultMessage: 'Updating...'};\n\nexport default class EditIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The incoming webhook to edit\n        */\n        hook: PropTypes.object,\n\n        /**\n        * The id of the incoming webhook to edit\n        */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n        * The request state for updateIncomingHook action. Contains status and error\n        */\n        updateIncomingHookRequest: PropTypes.object.isRequired,\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to update an incoming webhook\n            */\n            updateIncomingHook: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to get an incoming webhook\n            */\n            getIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.getIncomingHook(this.props.hookId);\n        }\n    }\n\n    editIncomingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        await this.submitHook();\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.updateIncomingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/incoming_webhooks`);\n            return;\n        }\n\n        if (this.props.updateIncomingHookRequest.error) {\n            this.setState({serverError: this.props.updateIncomingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.editIncomingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getIncomingHook, updateIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditIncomingWebhook from './edit_incoming_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n\n    return {\n        hookId,\n        hook: state.entities.integrations.incomingHooks[hookId],\n        updateIncomingHookRequest: state.requests.integrations.updateIncomingHook,\n        enableIncomingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateIncomingHook,\n            getIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport LoadingScreen from 'components/loading_screen';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_incoming_webhook.update', defaultMessage: 'Update'};\nconst LOADING = {id: 'update_incoming_webhook.updating', defaultMessage: 'Updating...'};\n\nexport default class EditOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the OAuthApp to edit\n        */\n        oauthAppId: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp data\n        */\n        oauthApp: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to get OAuthApp\n            */\n            getOAuthApp: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit OAuthApp\n            */\n            editOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.getOAuthApp(this.props.oauthAppId);\n        }\n    }\n\n    editOAuthApp = async (app) => {\n        this.newApp = app;\n\n        if (this.props.oauthApp.id) {\n            app.id = this.props.oauthApp.id;\n        }\n\n        if (this.props.oauthApp.token) {\n            app.token = this.props.oauthApp.token;\n        }\n\n        const callbackUrlsSame = (this.props.oauthApp.callback_urls.length === app.callback_urls.length) &&\n            this.props.oauthApp.callback_urls.every((v, i) => v === app.callback_urls[i]);\n\n        if (callbackUrlsSame === false) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitOAuthApp();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitOAuthApp = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editOAuthApp(this.newApp);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/oauth2-apps`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_oauth_app.confirm'\n                defaultMessage='Edit OAuth 2.0 application'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_oauth_app.question'\n                defaultMessage='Your changes may break the existing OAuth 2.0 application. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitOAuthApp}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.oauthApp) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editOAuthApp}\n                serverError={this.state.serverError}\n                initialApp={this.props.oauthApp}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOAuthApp, editOAuthApp} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOAuthApp from './edit_oauth_app.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const oauthAppId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        oauthAppId,\n        oauthApp: state.entities.integrations.oauthApps[oauthAppId],\n        enableOAuthServiceProvider,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOAuthApp,\n            editOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_outgoing_webhook.update', defaultMessage: 'Update'};\nconst LOADING = {id: 'update_outgoing_webhook.updating', defaultMessage: 'Updating...'};\n\nexport default class EditOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The outgoing webhook to edit\n         */\n        hook: PropTypes.object,\n\n        /**\n         * The id of the outgoing webhook to edit\n         */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n         * The request state for updateOutgoingHook action. Contains status and error\n         */\n        updateOutgoingHookRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to update an outgoing webhook\n             */\n            updateOutgoingHook: PropTypes.func.isRequired,\n\n            /**\n             * The function to call to get an outgoing webhook\n             */\n            getOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.getOutgoingHook(this.props.hookId);\n        }\n    }\n\n    editOutgoingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        const triggerWordsSame = (this.props.hook.trigger_words.length === hook.trigger_words.length) &&\n            this.props.hook.trigger_words.every((v, i) => v === hook.trigger_words[i]);\n\n        const callbackUrlsSame = (this.props.hook.callback_urls.length === hook.callback_urls.length) &&\n            this.props.hook.callback_urls.every((v, i) => v === hook.callback_urls[i]);\n\n        if (this.props.hook.content_type !== hook.content_type ||\n            !triggerWordsSame || !callbackUrlsSame) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitHook();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.updateOutgoingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/outgoing_webhooks`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (this.props.updateOutgoingHookRequest.error) {\n            this.setState({serverError: this.props.updateOutgoingHookRequest.error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_outgoing_webhook.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_outgoing_webhook.confirm'\n                defaultMessage='Edit Outgoing Webhook'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_outgoing_webhook.question'\n                defaultMessage='Your changes may break the existing outgoing webhook. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitHook}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editOutgoingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOutgoingHook, updateOutgoingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOutgoingWebhook from './edit_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        hookId,\n        hook: state.entities.integrations.outgoingHooks[hookId],\n        updateOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\n        enableOutgoingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateOutgoingHook,\n            getOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport Integrations from './integrations.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        siteName,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n    };\n}\n\nexport default connect(mapStateToProps)(Integrations);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {t} from 'utils/i18n';\nimport CopyText from '../copy_text';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport function matchesFilter(command, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    return command.display_name.toLowerCase().indexOf(filter) !== -1 ||\n        command.description.toLowerCase().indexOf(filter) !== -1 ||\n        command.trigger.toLowerCase().indexOf(filter) !== -1;\n}\n\nexport default class InstalledCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * Installed slash command to display\n        */\n        command: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Token link is clicked\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter command, comes from BackstageList\n        */\n        filter: PropTypes.string,\n\n        /**\n        * The creator user data\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        * Set to show edit link\n        */\n        canChange: PropTypes.bool.isRequired,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.command);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.command);\n    }\n\n    render() {\n        const command = this.props.command;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!matchesFilter(command, filter)) {\n            return null;\n        }\n\n        let name;\n\n        if (command.display_name) {\n            name = command.display_name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_commands.unnamed_command'\n                    defaultMessage='Unnamed Slash Command'\n                />\n            );\n        }\n\n        let description = null;\n        if (command.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {command.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let trigger = '- /' + command.trigger;\n        if (command.auto_complete && command.auto_complete_hint) {\n            trigger += ' ' + command.auto_complete_hint;\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regenerate Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/commands/edit?id=${command.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_commands.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const commandToken = command.token;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <div>\n                            <strong className='item-details__name'>\n                                {name}\n                            </strong>\n                            <span className='item-details__trigger'>\n                                {trigger}\n                            </span>\n                        </div>\n                        {actions}\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: commandToken,\n                                }}\n                            />\n                            <CopyText\n                                value={commandToken}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: command.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {deleteCommand, regenCommandToken} from 'mattermost-redux/actions/integrations';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport InstalledCommands from './installed_commands.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const canManageOthersSlashCommands = haveITeamPermission(state, {team: ownProps.team.id, permission: Permissions.MANAGE_OTHERS_SLASH_COMMANDS});\n\n    return {\n        canManageOthersSlashCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            regenCommandToken,\n            deleteCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledCommands);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledCommand, {matchesFilter} from '../installed_command.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledCommands extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team object\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user object\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Set whether to show the loading... animation or not\n        */\n        loading: PropTypes.bool,\n\n        /**\n        * Set to allow changes to installed slash commands\n        */\n        canManageOthersSlashCommands: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call when Regenerate Token link is clicked\n            */\n            regenCommandToken: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    regenCommandToken = (command) => {\n        this.props.actions.regenCommandToken(command.id);\n    }\n\n    deleteCommand = (command) => {\n        this.props.actions.deleteCommand(command.id);\n    }\n\n    commandCompare(a, b) {\n        let nameA = a.display_name;\n        if (!nameA) {\n            nameA = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        let nameB = b.display_name;\n        if (!nameB) {\n            nameB = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    render() {\n        const commands = (filter) => this.props.commands.\n            filter((command) => command.team_id === this.props.team.id).\n            filter((command) => matchesFilter(command, filter)).\n            sort(this.commandCompare).map((command) => {\n                const canChange = this.props.canManageOthersSlashCommands || this.props.user.id === command.creator_id;\n\n                return (\n                    <InstalledCommand\n                        key={command.id}\n                        team={this.props.team}\n                        command={command}\n                        onRegenToken={this.regenCommandToken}\n                        onDelete={this.deleteCommand}\n                        creator={this.props.users[command.creator_id] || {}}\n                        canChange={canChange}\n                    />\n                );\n            });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_commands.header'\n                        defaultMessage='Installed Slash Commands'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_commands.add'\n                        defaultMessage='Add Slash Command'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/commands/add'}\n                addButtonId='addSlashCommand'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_commands.empty'\n                        defaultMessage='No slash commands found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_commands.emptySearch'\n                        defaultMessage='No slash commands match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_commands.help'\n                        defaultMessage='Use slash commands to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/slash-commands.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_commands.search', 'Search Slash Commands')}\n                loading={this.props.loading}\n            >\n                {(filter) => {\n                    const children = commands(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {getSiteURL} from 'utils/url';\nimport {t} from 'utils/i18n';\n\nimport CopyText from 'components/copy_text';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport function matchesFilter(incomingWebhook, channel, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    if (incomingWebhook.display_name.toLowerCase().indexOf(filter) !== -1 ||\n        incomingWebhook.description.toLowerCase().indexOf(filter) !== -1) {\n        return true;\n    }\n\n    if (incomingWebhook.channel_id) {\n        if (channel && channel.name.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport default class InstalledIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        incomingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhook based on filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.incomingWebhook);\n    }\n\n    render() {\n        const incomingWebhook = this.props.incomingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!matchesFilter(incomingWebhook, channel, filter)) {\n            return null;\n        }\n\n        let displayName;\n        if (incomingWebhook.display_name) {\n            displayName = incomingWebhook.display_name;\n        } else if (channel) {\n            displayName = channel.display_name;\n        } else {\n            displayName = (\n                <FormattedMessage\n                    id='installed_incoming_webhooks.unknown_channel'\n                    defaultMessage='A Private Webhook'\n                />\n            );\n        }\n\n        let description = null;\n        if (incomingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {incomingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks/edit?id=${incomingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_incoming_webhooks.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const incomingWebhookId = getSiteURL() + '/hooks/' + incomingWebhook.id;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {displayName}\n                        </strong>\n                        {actions}\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url word-break--all'>\n                            <FormattedMessage\n                                id='installed_integrations.url'\n                                defaultMessage='URL: {url}'\n                                values={{\n                                    url: incomingWebhookId,\n                                }}\n                            />\n                            <span>\n                                <CopyText\n                                    value={incomingWebhookId}\n                                />\n                            </span>\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: incomingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getIncomingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadIncomingHooksAndProfilesForTeam} from 'actions/integration_actions';\n\nimport InstalledIncomingWebhooks from './installed_incoming_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_INCOMING_WEBHOOKS});\n    const incomingHooks = getIncomingHooks(state);\n    const incomingWebhooks = Object.keys(incomingHooks).\n        map((key) => incomingHooks[key]).\n        filter((incomingWebhook) => incomingWebhook.team_id === teamId);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n\n    return {\n        incomingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableIncomingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadIncomingHooksAndProfilesForTeam,\n            removeIncomingHook: Actions.removeIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledIncomingWebhooks);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledIncomingWebhook, {matchesFilter} from 'components/integrations/installed_incoming_webhook.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledIncomingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        incomingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n\n        teamId: PropTypes.string,\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing incomingWebhook\n            */\n            removeIncomingHook: PropTypes.func,\n\n            /**\n            * The function to call for incomingWebhook List and for the status of api\n            */\n            loadIncomingHooksAndProfilesForTeam: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.loadIncomingHooksAndProfilesForTeam(\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE\n            ).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    deleteIncomingWebhook = (incomingWebhook) => {\n        this.props.actions.removeIncomingHook(incomingWebhook.id);\n    }\n\n    incomingWebhookCompare = (a, b) => {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_incoming_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        const displayNameB = b.display_name;\n\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    incomingWebhooks = (filter) => this.props.incomingWebhooks.\n        sort(this.incomingWebhookCompare).\n        filter((incomingWebhook) => matchesFilter(incomingWebhook, this.props.channels[incomingWebhook.channel_id], filter)).\n        map((incomingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === incomingWebhook.user_id;\n            const channel = this.props.channels[incomingWebhook.channel_id];\n            return (\n                <InstalledIncomingWebhook\n                    key={incomingWebhook.id}\n                    incomingWebhook={incomingWebhook}\n                    onDelete={this.deleteIncomingWebhook}\n                    creator={this.props.users[incomingWebhook.user_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.header'\n                        defaultMessage='Installed Incoming Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.add'\n                        defaultMessage='Add Incoming Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/incoming_webhooks/add'}\n                addButtonId='addIncomingWebhook'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.empty'\n                        defaultMessage='No incoming webhooks found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_incoming_webhooks.emptySearch'\n                        defaultMessage='No incoming webhooks match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.help'\n                        defaultMessage='Use incoming webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/webhooks-incoming.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_incoming_webhooks.search', 'Search Incoming Webhooks')}\n                loading={this.state.loading}\n            >\n                {(filter) => {\n                    const children = this.incomingWebhooks(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {getDisplayNameByUser} from 'utils/utils';\n\nimport InstalledOAuthApp from './installed_oauth_app.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const oauthApp = ownProps.oauthApp || {};\n    return {\n        creatorName: getDisplayNameByUser(getUser(state, oauthApp.creator_id)),\n    };\n}\n\nexport default connect(mapStateToProps)(InstalledOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport FormError from 'components/form_error';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport CopyText from 'components/copy_text';\n\nimport DeleteIntegration from '../delete_integration.jsx';\n\nconst FAKE_SECRET = '***************';\n\nexport function matchesFilter(oauthApp, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    return oauthApp.name.toLowerCase().indexOf(filter) !== -1;\n}\n\nexport default class InstalledOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApp data\n        */\n        oauthApp: PropTypes.object.isRequired,\n\n        creatorName: PropTypes.string.isRequired,\n\n        /**\n        * The request state for regenOAuthAppSecret action. Contains status and error\n        */\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Secret link is clicked\n        */\n        onRegenerateSecret: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter OAuthApp\n        */\n        filter: PropTypes.string,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            clientSecret: FAKE_SECRET,\n        };\n    }\n\n    handleShowClientSecret = (e) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        this.setState({clientSecret: this.props.oauthApp.client_secret});\n    }\n\n    handleHideClientSecret = (e) => {\n        e.preventDefault();\n        this.setState({clientSecret: FAKE_SECRET});\n    }\n\n    handleRegenerate = (e) => {\n        e.preventDefault();\n        this.props.onRegenerateSecret(this.props.oauthApp.id).then(\n            () => {\n                const {error} = this.props.regenOAuthAppSecretRequest;\n                if (error) {\n                    this.setState({error: error.message});\n                } else {\n                    this.setState({error: null});\n                    this.handleShowClientSecret();\n                }\n            }\n        );\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.oauthApp);\n    }\n\n    render() {\n        const {oauthApp, creatorName} = this.props;\n        let error;\n\n        if (this.state.error) {\n            error = (\n                <FormError\n                    error={this.state.error}\n                />\n            );\n        }\n\n        if (!matchesFilter(oauthApp, this.props.filter)) {\n            return null;\n        }\n\n        let name;\n        if (oauthApp.name) {\n            name = oauthApp.name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_integrations.unnamed_oauth_app'\n                    defaultMessage='Unnamed OAuth 2.0 Application'\n                />\n            );\n        }\n\n        let description;\n        if (oauthApp.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {oauthApp.description}\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url word-break--all'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: oauthApp.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let isTrusted;\n        if (oauthApp.is_trusted) {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.yes', 'Yes');\n        } else {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.no', 'No');\n        }\n\n        let showHide;\n        let clientSecret;\n        if (this.state.clientSecret === FAKE_SECRET) {\n            showHide = (\n                <button\n                    id='showSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleShowClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.showSecret'\n                        defaultMessage='Show Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                </span>\n            );\n        } else {\n            showHide = (\n                <button\n                    id='hideSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleHideClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.hideSecret'\n                        defaultMessage='Hide Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMarkdownMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={this.state.clientSecret}\n                    />\n                </span>\n            );\n        }\n\n        const regen = (\n            <button\n                id='regenerateSecretButton'\n                className='style--none color--link'\n                onClick={this.handleRegenerate}\n            >\n                <FormattedMessage\n                    id='installed_integrations.regenSecret'\n                    defaultMessage='Regenerate Secret'\n                />\n            </button>\n        );\n\n        let icon;\n        if (oauthApp.icon_url) {\n            icon = (\n                <div className='integration__icon integration-list__icon'>\n                    <img\n                        alt={'get app screenshot'}\n                        src={oauthApp.icon_url}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                {icon}\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {name}\n                        </strong>\n                        <div className='item-actions'>\n                            {showHide}\n                            {' - '}\n                            {regen}\n                            {' - '}\n                            <Link to={`/${this.props.team.name}/integrations/oauth2-apps/edit?id=${oauthApp.id}`}>\n                                <FormattedMessage\n                                    id='installed_integrations.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Link>\n                            {' - '}\n                            <DeleteIntegration\n                                messageId={t('installed_oauth_apps.delete.confirm')}\n                                onDelete={this.handleDelete}\n                            />\n                        </div>\n                    </div>\n                    {error}\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url word-break--all'>\n                            <FormattedMarkdownMessage\n                                id='installed_oauth_apps.is_trusted'\n                                defaultMessage='Is Trusted: **{isTrusted}**'\n                                values={{\n                                    isTrusted,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMarkdownMessage\n                                id='installed_integrations.client_id'\n                                defaultMessage='Client ID: **{clientId}**'\n                                values={{\n                                    clientId: oauthApp.id,\n                                }}\n                            />\n                            <CopyText\n                                idMessage='integrations.copy_client_id'\n                                defaultMessage='Copy Client Id'\n                                value={oauthApp.id}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        {clientSecret}\n                    </div>\n                    {urls}\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: creatorName,\n                                    createAt: oauthApp.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOAuthApps} from 'mattermost-redux/selectors/entities/integrations';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadOAuthAppsAndProfiles} from 'actions/integration_actions';\n\nimport InstalledOAuthApps from './installed_oauth_apps.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        canManageOauth: haveISystemPermission(state, {permission: Permissions.MANAGE_OAUTH}),\n        oauthApps: getOAuthApps(state),\n        regenOAuthAppSecretRequest: state.requests.integrations.updateOAuthApp,\n        enableOAuthServiceProvider,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadOAuthAppsAndProfiles,\n            regenOAuthAppSecret: Actions.regenOAuthAppSecret,\n            deleteOAuthApp: Actions.deleteOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOAuthApps);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOAuthApp from '../installed_oauth_app';\nimport {matchesFilter} from '../installed_oauth_app/installed_oauth_app';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledOAuthApps extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApps data\n        */\n        oauthApps: PropTypes.object,\n\n        /**\n        * Set if user can manage oath\n        */\n        canManageOauth: PropTypes.bool,\n\n        /**\n        * The request state for regenOAuthAppSecret action. Contains status and error\n        */\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch OAuth apps\n            */\n            loadOAuthAppsAndProfiles: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Regenerate Secret link is clicked\n            */\n            regenOAuthAppSecret: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.loadOAuthAppsAndProfiles().then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    deleteOAuthApp = (app) => {\n        if (app && app.id) {\n            this.props.actions.deleteOAuthApp(app.id);\n        }\n    }\n\n    oauthAppCompare(a, b) {\n        let nameA = a.name;\n        if (!nameA) {\n            nameA = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        let nameB = b.name;\n        if (!nameB) {\n            nameB = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    oauthApps = (filter) => Object.values(this.props.oauthApps).\n        filter((app) => matchesFilter(app, filter)).\n        sort(this.oauthAppCompare).\n        map((app) => {\n            return (\n                <InstalledOAuthApp\n                    key={app.id}\n                    team={this.props.team}\n                    oauthApp={app}\n                    regenOAuthAppSecretRequest={this.props.regenOAuthAppSecretRequest}\n                    onRegenerateSecret={this.props.actions.regenOAuthAppSecret}\n                    onDelete={this.deleteOAuthApp}\n                />\n            );\n        });\n\n    render() {\n        const integrationsEnabled = this.props.enableOAuthServiceProvider && this.props.canManageOauth;\n        let props;\n        if (integrationsEnabled) {\n            props = {\n                addLink: '/' + this.props.team.name + '/integrations/oauth2-apps/add',\n                addText: localizeMessage('installed_oauth_apps.add', 'Add OAuth 2.0 Application'),\n                addButtonId: 'addOauthApp',\n            };\n        }\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_oauth_apps.header'\n                        defaultMessage='OAuth 2.0 Applications'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.help'\n                        defaultMessage='Create {oauthApplications} to securely integrate bots and third-party apps with Mattermost. Visit the {appDirectory} to find available self-hosted apps.'\n                        values={{\n                            oauthApplications: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://docs.mattermost.com/developer/oauth-2-0-applications.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.oauthApplications'\n                                        defaultMessage='OAuth 2.0 applications'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                emptyText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.empty'\n                        defaultMessage='No OAuth 2.0 Applications found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_oauth_apps.emptySearch'\n                        defaultMessage='No OAuth 2.0 Applications match {searchTerm}'\n                    />\n                }\n                searchPlaceholder={localizeMessage('installed_oauth_apps.search', 'Search OAuth 2.0 Applications')}\n                loading={this.state.loading}\n                {...props}\n            >\n                {(filter) => {\n                    const children = this.oauthApps(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {t} from 'utils/i18n';\nimport CopyText from 'components/copy_text';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport function matchesFilter(outgoingWebhook, channel, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    const {\n        display_name: displayName,\n        description,\n        trigger_words: triggerWords,\n    } = outgoingWebhook;\n\n    if (\n        (displayName && displayName.toLowerCase().indexOf(filter) !== -1) ||\n        (description && description.toLowerCase().indexOf(filter) !== -1)\n    ) {\n        return true;\n    }\n\n    if (triggerWords) {\n        for (const triggerWord of triggerWords) {\n            if (triggerWord.toLowerCase().indexOf(filter) !== -1) {\n                return true;\n            }\n        }\n    }\n\n    if (channel && channel.name) {\n        if (channel.name.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport default class InstalledOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        outgoingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function used for webhook token regeneration\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhooks based in filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.outgoingWebhook);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.outgoingWebhook);\n    }\n\n    makeDisplayName(outgoingWebhook, channel) {\n        if (outgoingWebhook.display_name) {\n            return outgoingWebhook.display_name;\n        } else if (channel) {\n            return channel.display_name;\n        }\n        return (\n            <FormattedMessage\n                id='installed_outgoing_webhooks.unknown_channel'\n                defaultMessage='A Private Webhook'\n            />\n        );\n    }\n\n    render() {\n        const outgoingWebhook = this.props.outgoingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        const triggerWordsFull = 0;\n        const triggerWordsStartsWith = 1;\n\n        if (outgoingWebhook && !matchesFilter(outgoingWebhook, channel, filter)) {\n            return null;\n        }\n\n        const displayName = this.makeDisplayName(outgoingWebhook, channel);\n\n        let description = null;\n        if (outgoingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {outgoingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let triggerWords = null;\n        if (outgoingWebhook.trigger_words && outgoingWebhook.trigger_words.length > 0) {\n            triggerWords = (\n                <div className='item-details__row'>\n                    <span className='item-details__trigger-words'>\n                        <FormattedMessage\n                            id='installed_integrations.triggerWords'\n                            defaultMessage='Trigger Words: {triggerWords}'\n                            values={{\n                                triggerWords: outgoingWebhook.trigger_words.join(', '),\n                            }}\n                        />\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url word-break--all'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: outgoingWebhook.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let triggerWhen;\n        if (outgoingWebhook.trigger_when === triggerWordsFull) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenFullWord'\n                    defaultMessage='First word matches a trigger word exactly'\n                />\n            );\n        } else if (outgoingWebhook.trigger_when === triggerWordsStartsWith) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenStartsWith'\n                    defaultMessage='First word starts with a trigger word'\n                />\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regen Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks/edit?id=${outgoingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_outgoing_webhooks.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {displayName}\n                        </strong>\n                        {actions}\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__content_type'>\n                            <FormattedMessage\n                                id='installed_integrations.content_type'\n                                defaultMessage='Content-Type: {contentType}'\n                                values={{\n                                    contentType: outgoingWebhook.content_type || 'application/x-www-form-urlencoded',\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {triggerWords}\n                    <div className='item-details__row'>\n                        <span className='item-details__trigger-when'>\n                            <FormattedMessage\n                                id='installed_integrations.triggerWhen'\n                                defaultMessage='Trigger When: {triggerWhen}'\n                                values={{\n                                    triggerWhen,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: outgoingWebhook.token,\n                                }}\n                            />\n                            <CopyText\n                                value={outgoingWebhook.token}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: outgoingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {urls}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadOutgoingHooksAndProfilesForTeam} from 'actions/integration_actions';\n\nimport InstalledOutgoingWebhook from './installed_outgoing_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_OUTGOING_WEBHOOKS});\n    const outgoingHooks = getOutgoingHooks(state);\n    const outgoingWebhooks = Object.keys(outgoingHooks).\n        map((key) => outgoingHooks[key]).\n        filter((outgoingWebhook) => outgoingWebhook.team_id === teamId);\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n\n    return {\n        outgoingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableOutgoingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadOutgoingHooksAndProfilesForTeam,\n            removeOutgoingHook: Actions.removeOutgoingHook,\n            regenOutgoingHookToken: Actions.regenOutgoingHookToken,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOutgoingWebhook, {matchesFilter} from 'components/integrations/installed_outgoing_webhook.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledOutgoingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        outgoingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n        teamId: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing outgoingWebhook\n            */\n            removeOutgoingHook: PropTypes.func,\n\n            /**\n            * The function to call for outgoingWebhook List and for the status of api\n            */\n            loadOutgoingHooksAndProfilesForTeam: PropTypes.func,\n\n            /**\n            * The function to call for regeneration of webhook token\n            */\n            regenOutgoingHookToken: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.loadOutgoingHooksAndProfilesForTeam(\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE\n            ).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    regenOutgoingWebhookToken = (outgoingWebhook) => {\n        this.props.actions.regenOutgoingHookToken(outgoingWebhook.id);\n    }\n\n    removeOutgoingHook = (outgoingWebhook) => {\n        this.props.actions.removeOutgoingHook(outgoingWebhook.id);\n    }\n\n    outgoingWebhookCompare = (a, b) => {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        let displayNameB = b.display_name;\n        if (!displayNameB) {\n            const channelB = this.props.channels[b.channel_id];\n            if (channelB) {\n                displayNameB = channelB.display_name;\n            } else {\n                displayNameB = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    outgoingWebhooks = (filter) => this.props.outgoingWebhooks.\n        sort(this.outgoingWebhookCompare).\n        filter((outgoingWebhook) => matchesFilter(outgoingWebhook, this.props.channels[outgoingWebhook.channel_id], filter)).\n        map((outgoingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === outgoingWebhook.creator_id;\n            const channel = this.props.channels[outgoingWebhook.channel_id];\n            return (\n                <InstalledOutgoingWebhook\n                    key={outgoingWebhook.id}\n                    outgoingWebhook={outgoingWebhook}\n                    onRegenToken={this.regenOutgoingWebhookToken}\n                    onDelete={this.removeOutgoingHook}\n                    creator={this.props.users[outgoingWebhook.creator_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.header'\n                        defaultMessage='Installed Outgoing Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.add'\n                        defaultMessage='Add Outgoing Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/outgoing_webhooks/add'}\n                addButtonId='addOutgoingWebhook'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.empty'\n                        defaultMessage='No outgoing webhooks found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_outgoing_webhooks.emptySearch'\n                        defaultMessage='No outgoing webhooks match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.help'\n                        defaultMessage='Use outgoing webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/webhooks-outgoing.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_outgoing_webhooks.search', 'Search Outgoing Webhooks')}\n                loading={this.state.loading}\n            >\n                {(filter) => {\n                    const children = this.outgoingWebhooks(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class IntegrationOption extends React.Component {\n    static get propTypes() {\n        return {\n            image: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            description: PropTypes.node.isRequired,\n            link: PropTypes.string.isRequired,\n        };\n    }\n\n    render() {\n        const {image, title, description, link} = this.props;\n\n        return (\n            <Link\n                to={link}\n                className='integration-option'\n            >\n                <img\n                    alt={'integration image'}\n                    className='integration-option__image'\n                    src={image}\n                />\n                <div className='integration-option__title'>\n                    {title}\n                </div>\n                <div className='integration-option__description'>\n                    {description}\n                </div>\n            </Link>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BotAccountsIcon from 'images/bot_default_icon.png';\n\nimport * as Utils from 'utils/utils.jsx';\nimport IncomingWebhookIcon from 'images/incoming_webhook.jpg';\nimport OAuthIcon from 'images/oauth_icon.png';\nimport OutgoingWebhookIcon from 'images/outgoing_webhook.jpg';\nimport SlashCommandIcon from 'images/slash_command_icon.jpg';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport IntegrationOption from './integration_option.jsx';\n\nexport default class Integrations extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            user: PropTypes.object,\n            siteName: PropTypes.string,\n            enableIncomingWebhooks: PropTypes.bool,\n            enableOutgoingWebhooks: PropTypes.bool,\n            enableCommands: PropTypes.bool,\n            enableOAuthServiceProvider: PropTypes.bool,\n        };\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n    }\n\n    updateTitle = () => {\n        const currentSiteName = this.props.siteName || '';\n        document.title = Utils.localizeMessage('admin.sidebar.integrations', 'Integrations') + ' - ' + this.props.team.display_name + ' ' + currentSiteName;\n    }\n\n    render() {\n        const options = [];\n\n        if (this.props.enableIncomingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS]}\n                    key='incomingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='incomingWebhook'\n                        image={IncomingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.title'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.description'\n                                defaultMessage='Incoming webhooks allow external integrations to send messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/incoming_webhooks'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableOutgoingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_OUTGOING_WEBHOOKS]}\n                    key='outgoingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='outgoingWebhook'\n                        image={OutgoingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.title'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.description'\n                                defaultMessage='Outgoing webhooks allow external integrations to receive and respond to messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/outgoing_webhooks'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableCommands) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    key='commandPermission'\n                >\n                    <IntegrationOption\n                        key='command'\n                        image={SlashCommandIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.command.title'\n                                defaultMessage='Slash Commands'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.command.description'\n                                defaultMessage='Slash commands send events to an external integration'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/commands'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableOAuthServiceProvider) {\n            options.push(\n                <SystemPermissionGate\n                    permissions={[Permissions.MANAGE_OAUTH]}\n                    key='oauth2AppsPermission'\n                >\n                    <IntegrationOption\n                        key='oauth2Apps'\n                        image={OAuthIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.oauthApps.title'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.oauthApps.description'\n                                defaultMessage='Auth 2.0 allows external applications to make authorized requests to the Mattermost API'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/oauth2-apps'}\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        options.push(\n            <SystemPermissionGate\n                permissions={['manage_bots']}\n                key='botsPermissions'\n            >\n                <IntegrationOption\n                    image={BotAccountsIcon}\n                    title={\n                        <FormattedMessage\n                            id='bots.manage.header'\n                            defaultMessage='Bot Accounts'\n                        />\n                    }\n                    description={\n                        <FormattedMessage\n                            id='bots.manage.description'\n                            defaultMessage='Use bot accounts to integrate with Mattermost through plugins or the API'\n                        />\n                    }\n                    link={'/' + this.props.team.name + '/integrations/bots'}\n                />\n            </SystemPermissionGate>\n        );\n\n        return (\n            <div className='backstage-content row'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='integrations.header'\n                            defaultMessage='Integrations'\n                        />\n                    </h1>\n                </div>\n                <div className='backstage-list__help'>\n                    <FormattedMessage\n                        id='integrations.help'\n                        defaultMessage='Visit the {appDirectory} to find self-hosted, third-party apps and integrations for Mattermost.'\n                        values={{\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='integrations.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                </div>\n                <div className='integrations-list d-flex flex-wrap'>\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class AnyTeamPermissionGate extends React.Component {\n    static defaultProps = {\n        invert: false,\n    }\n\n    static propTypes = {\n\n        /**\n         * Permissions enough to pass the gate (binary OR)\n         */\n        permissions: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Has permission\n         */\n        hasPermission: PropTypes.bool.isRequired,\n\n        /**\n         * Invert the permission (used for else)\n         */\n        invert: PropTypes.bool.isRequired,\n\n        /**\n         * Content protected by the permissions gate\n         */\n        children: PropTypes.node.isRequired,\n    };\n\n    render() {\n        if (this.props.hasPermission && !this.props.invert) {\n            return this.props.children;\n        }\n        if (!this.props.hasPermission && this.props.invert) {\n            return this.props.children;\n        }\n        return null;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {getMyTeams} from 'mattermost-redux/selectors/entities/teams';\n\nimport AnyTeamPermissionGate from './any_team_permission_gate.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const teams = getMyTeams(state);\n    for (const team of teams) {\n        for (const permission of ownProps.permissions) {\n            if (haveITeamPermission(state, {team: team.id, permission})) {\n                return {hasPermission: true};\n            }\n        }\n    }\n\n    return {hasPermission: false};\n}\n\nexport default connect(mapStateToProps)(AnyTeamPermissionGate);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {intlShape} from 'react-intl';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class NextIcon extends React.PureComponent<Props> {\n    public static contextTypes = {\n        intl: intlShape.isRequired,\n    };\n\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const {formatMessage} = this.context.intl;\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <i\n                className={className}\n                title={formatMessage({id: 'generic_icons.next', defaultMessage: 'Next Icon'})}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {intlShape} from 'react-intl';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class PreviousIcon extends React.PureComponent<Props> {\n    public static contextTypes = {\n        intl: intlShape.isRequired,\n    };\n\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const {formatMessage} = this.context.intl;\n        const className = 'fa fa-1x fa-angle-left' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <i\n                className={className}\n                title={formatMessage({id: 'generic_icons.previous', defaultMessage: 'Previous Icon'})}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SearchIcon extends React.PureComponent {\n    render() {\n        return (\n            <FormattedMessage\n                id='generic_icons.search'\n                defaultMessage='Search Icon'\n            >\n                {(title) => (\n                    <i\n                        className='fa fa-search'\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/6d99c23db16f87ca2477c7af583a633c.png\";","module.exports = __webpack_public_path__ + \"files/fd69f7891f867c2aa14011da92b728ac.jpg\";","module.exports = __webpack_public_path__ + \"files/ce81936d829c1ac530749ba2fe913de0.png\";","module.exports = __webpack_public_path__ + \"files/2aa264fb1956b8be41f2047d428a1a1e.jpg\";","module.exports = __webpack_public_path__ + \"files/d184fcdb23c1e24bfd7132950ceb4f68.jpg\";","\"use strict\";\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = require(\"../client\");\nvar action_types_1 = require(\"../action_types\");\nvar helpers_1 = require(\"./helpers\");\nvar BOTS_PER_PAGE_DEFAULT = 20;\nfunction createBot(bot) {\n    return helpers_1.bindClientFunc({\n        clientFunc: client_1.Client4.createBot,\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            bot,\n        ],\n    });\n}\nexports.createBot = createBot;\nfunction patchBot(botUserId, botPatch) {\n    return helpers_1.bindClientFunc({\n        clientFunc: client_1.Client4.patchBot,\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            botUserId,\n            botPatch,\n        ],\n    });\n}\nexports.patchBot = patchBot;\nfunction loadBot(botUserId) {\n    return helpers_1.bindClientFunc({\n        clientFunc: client_1.Client4.getBot,\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            botUserId,\n        ],\n    });\n}\nexports.loadBot = loadBot;\nfunction loadBots(page, perPage) {\n    if (page === void 0) { page = 0; }\n    if (perPage === void 0) { perPage = BOTS_PER_PAGE_DEFAULT; }\n    return helpers_1.bindClientFunc({\n        clientFunc: client_1.Client4.getBotsIncludeDeleted,\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNTS,\n        params: [\n            page,\n            perPage,\n        ],\n    });\n}\nexports.loadBots = loadBots;\nfunction disableBot(botUserId) {\n    return helpers_1.bindClientFunc({\n        clientFunc: client_1.Client4.disableBot,\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            botUserId,\n        ],\n    });\n}\nexports.disableBot = disableBot;\nfunction enableBot(botUserId) {\n    return helpers_1.bindClientFunc({\n        clientFunc: client_1.Client4.enableBot,\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            botUserId,\n        ],\n    });\n}\nexports.enableBot = enableBot;\nfunction assignBot(botUserId, newOwnerId) {\n    return helpers_1.bindClientFunc({\n        clientFunc: client_1.Client4.assignBot,\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            botUserId,\n            newOwnerId,\n        ],\n    });\n}\nexports.assignBot = assignBot;\n//# sourceMappingURL=bots.js.map","\"use strict\";\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getBotAccounts(state) {\n    return state.entities.bots.accounts;\n}\nexports.getBotAccounts = getBotAccounts;\n//# sourceMappingURL=bots.js.map","\"use strict\";\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar reselect = tslib_1.__importStar(require(\"reselect\"));\nvar teams_1 = require(\"./teams\");\nfunction getIncomingHooks(state) {\n    return state.entities.integrations.incomingHooks;\n}\nexports.getIncomingHooks = getIncomingHooks;\nfunction getOutgoingHooks(state) {\n    return state.entities.integrations.outgoingHooks;\n}\nexports.getOutgoingHooks = getOutgoingHooks;\nfunction getCommands(state) {\n    return state.entities.integrations.commands;\n}\nexports.getCommands = getCommands;\nfunction getOAuthApps(state) {\n    return state.entities.integrations.oauthApps;\n}\nexports.getOAuthApps = getOAuthApps;\nfunction getSystemCommands(state) {\n    return state.entities.integrations.systemCommands;\n}\nexports.getSystemCommands = getSystemCommands;\n/**\n * get outgoing hooks in current team\n */\nexports.getOutgoingHooksInCurrentTeam = reselect.createSelector(teams_1.getCurrentTeamId, getOutgoingHooks, function (teamId, hooks) {\n    return Object.values(hooks).filter(function (o) { return o.team_id === teamId; });\n});\nexports.getAllCommands = reselect.createSelector(getCommands, getSystemCommands, function (commands, systemCommands) {\n    return tslib_1.__assign(tslib_1.__assign({}, commands), systemCommands);\n});\nexports.getAutocompleteCommandsList = reselect.createSelector(exports.getAllCommands, teams_1.getCurrentTeamId, function (commands, currentTeamId) {\n    return Object.values(commands).filter(function (command) {\n        return command && (!command.team_id || command.team_id === currentTeamId) && command.auto_complete;\n    }).sort(function (a, b) { return a.display_name.localeCompare(b.display_name); });\n});\n//# sourceMappingURL=integrations.js.map"],"sourceRoot":""}